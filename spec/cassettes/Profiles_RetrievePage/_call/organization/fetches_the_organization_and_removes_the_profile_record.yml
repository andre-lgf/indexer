---
http_interactions:
- request:
    method: post
    uri: http://127.0.0.1:10001/session
    body:
      encoding: UTF-8
      string: '{"capabilities":{"alwaysMatch":{"acceptInsecureCerts":true,"browserName":"firefox","unhandledPromptBehavior":"ignore","moz:firefoxOptions":{"binary":"/Users/galatti/.cache/selenium/firefox/mac-arm64/128.0.3/Firefox.app/Contents/MacOS/firefox","args":["-headless"],"prefs":{"remote.active-protocols":3}},"moz:debuggerAddress":true}}}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/4.22.0 (ruby macosx) watir/7.3.0
      Content-Length:
      - '332'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
      Content-Length:
      - '838'
      Date:
      - Fri, 26 Jul 2024 16:28:57 GMT
    body:
      encoding: UTF-8
      string: '{"value":{"sessionId":"ae96f725-e40f-4241-bbf6-6a83cbba9a49","capabilities":{"acceptInsecureCerts":true,"browserName":"firefox","browserVersion":"128.0.3","moz:accessibilityChecks":false,"moz:buildID":"20240725162350","moz:debuggerAddress":"127.0.0.1:9222","moz:geckodriverVersion":"0.34.0","moz:headless":true,"moz:platformVersion":"23.5.0","moz:processID":20222,"moz:profile":"/var/folders/dj/srb__syn6855p37wjq5d2qyc0000gn/T/rust_mozprofileFbHH6V","moz:shutdownTimeout":60000,"moz:webdriverClick":true,"moz:windowless":false,"pageLoadStrategy":"normal","platformName":"mac","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"ignore","userAgent":"Mozilla/5.0
        (Macintosh; Intel Mac OS X 10.15; rv:128.0) Gecko/20100101 Firefox/128.0"}}}'
  recorded_at: Fri, 26 Jul 2024 16:28:59 GMT
- request:
    method: post
    uri: http://127.0.0.1:10001/session/ae96f725-e40f-4241-bbf6-6a83cbba9a49/url
    body:
      encoding: UTF-8
      string: '{"url":"https://github.com/rails"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/4.22.0 (ruby macosx) watir/7.3.0
      Content-Length:
      - '34'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
      Content-Length:
      - '14'
      Date:
      - Fri, 26 Jul 2024 16:28:59 GMT
    body:
      encoding: UTF-8
      string: '{"value":null}'
  recorded_at: Fri, 26 Jul 2024 16:29:00 GMT
- request:
    method: get
    uri: http://127.0.0.1:10001/session/ae96f725-e40f-4241-bbf6-6a83cbba9a49/title
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/4.22.0 (ruby macosx) watir/7.3.0
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
      Content-Length:
      - '35'
      Date:
      - Fri, 26 Jul 2024 16:29:00 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJ2YWx1ZSI6IlJ1Ynkgb24gUmFpbHMgwrcgR2l0SHViIn0=
  recorded_at: Fri, 26 Jul 2024 16:29:00 GMT
- request:
    method: get
    uri: http://127.0.0.1:10001/session/ae96f725-e40f-4241-bbf6-6a83cbba9a49/source
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json; charset=UTF-8
      User-Agent:
      - selenium/4.22.0 (ruby macosx) watir/7.3.0
      Cache-Control:
      - no-cache
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - no-cache
      Content-Length:
      - '295615'
      Date:
      - Fri, 26 Jul 2024 16:29:00 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJ2YWx1ZSI6IjxodG1sIGxhbmc9XCJlblwiIGRhdGEtY29sb3ItbW9kZT1cImF1dG9cIiBkYXRhLWxpZ2h0LXRoZW1lPVwibGlnaHRcIiBkYXRhLWRhcmstdGhlbWU9XCJkYXJrXCIgZGF0YS1hMTF5LWFuaW1hdGVkLWltYWdlcz1cInN5c3RlbVwiIGRhdGEtYTExeS1saW5rLXVuZGVybGluZXM9XCJ0cnVlXCIgZGF0YS10dXJiby1sb2FkZWQ9XCJcIj48aGVhZD48c3R5bGUgdHlwZT1cInRleHQvY3NzXCI+LnR1cmJvLXByb2dyZXNzLWJhciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgaGVpZ2h0OiAzcHg7XG4gIGJhY2tncm91bmQ6ICMwMDc2ZmY7XG4gIHotaW5kZXg6IDIxNDc0ODM2NDc7XG4gIHRyYW5zaXRpb246XG4gICAgd2lkdGggMzAwbXMgZWFzZS1vdXQsXG4gICAgb3BhY2l0eSAxNTBtcyAxNTBtcyBlYXNlLWluO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xufVxuPC9zdHlsZT5cbiAgICA8bWV0YSBjaGFyc2V0PVwidXRmLThcIj5cbiAgPGxpbmsgcmVsPVwiZG5zLXByZWZldGNoXCIgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb21cIj5cbiAgPGxpbmsgcmVsPVwiZG5zLXByZWZldGNoXCIgaHJlZj1cImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb21cIj5cbiAgPGxpbmsgcmVsPVwiZG5zLXByZWZldGNoXCIgaHJlZj1cImh0dHBzOi8vZ2l0aHViLWNsb3VkLnMzLmFtYXpvbmF3cy5jb21cIj5cbiAgPGxpbmsgcmVsPVwiZG5zLXByZWZldGNoXCIgaHJlZj1cImh0dHBzOi8vdXNlci1pbWFnZXMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1wiPlxuICA8bGluayByZWw9XCJwcmVjb25uZWN0XCIgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb21cIiBjcm9zc29yaWdpbj1cIlwiPlxuICA8bGluayByZWw9XCJwcmVjb25uZWN0XCIgaHJlZj1cImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb21cIj5cblxuICBcblxuICA8bGluayBjcm9zc29yaWdpbj1cImFub255bW91c1wiIG1lZGlhPVwiYWxsXCIgcmVsPVwic3R5bGVzaGVldFwiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy9saWdodC1lZmQyZjIyNTdjOTYuY3NzXCI+PGxpbmsgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBtZWRpYT1cImFsbFwiIHJlbD1cInN0eWxlc2hlZXRcIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvZGFyay02YjFlMzdkYTIyNTQuY3NzXCI+PGxpbmsgZGF0YS1jb2xvci10aGVtZT1cImRhcmtfZGltbWVkXCIgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBtZWRpYT1cImFsbFwiIHJlbD1cInN0eWxlc2hlZXRcIiBkYXRhLWhyZWY9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy9kYXJrX2RpbW1lZC1hYTE2YmZhOTBmYjguY3NzXCI+PGxpbmsgZGF0YS1jb2xvci10aGVtZT1cImRhcmtfaGlnaF9jb250cmFzdFwiIGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgbWVkaWE9XCJhbGxcIiByZWw9XCJzdHlsZXNoZWV0XCIgZGF0YS1ocmVmPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvZGFya19oaWdoX2NvbnRyYXN0LWY0ZGFhZDI1ZDhjZi5jc3NcIj48bGluayBkYXRhLWNvbG9yLXRoZW1lPVwiZGFya19jb2xvcmJsaW5kXCIgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBtZWRpYT1cImFsbFwiIHJlbD1cInN0eWxlc2hlZXRcIiBkYXRhLWhyZWY9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy9kYXJrX2NvbG9yYmxpbmQtYTQ2MjliMmU5MDZiLmNzc1wiPjxsaW5rIGRhdGEtY29sb3ItdGhlbWU9XCJsaWdodF9jb2xvcmJsaW5kXCIgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBtZWRpYT1cImFsbFwiIHJlbD1cInN0eWxlc2hlZXRcIiBkYXRhLWhyZWY9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy9saWdodF9jb2xvcmJsaW5kLWFmY2MzYTZhMzhkZC5jc3NcIj48bGluayBkYXRhLWNvbG9yLXRoZW1lPVwibGlnaHRfaGlnaF9jb250cmFzdFwiIGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgbWVkaWE9XCJhbGxcIiByZWw9XCJzdHlsZXNoZWV0XCIgZGF0YS1ocmVmPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvbGlnaHRfaGlnaF9jb250cmFzdC03OWJjYTcxNDUzOTMuY3NzXCI+PGxpbmsgZGF0YS1jb2xvci10aGVtZT1cImxpZ2h0X3RyaXRhbm9waWFcIiBjcm9zc29yaWdpbj1cImFub255bW91c1wiIG1lZGlhPVwiYWxsXCIgcmVsPVwic3R5bGVzaGVldFwiIGRhdGEtaHJlZj1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL2xpZ2h0X3RyaXRhbm9waWEtZmU0MTM3YjU0YjI2LmNzc1wiPjxsaW5rIGRhdGEtY29sb3ItdGhlbWU9XCJkYXJrX3RyaXRhbm9waWFcIiBjcm9zc29yaWdpbj1cImFub255bW91c1wiIG1lZGlhPVwiYWxsXCIgcmVsPVwic3R5bGVzaGVldFwiIGRhdGEtaHJlZj1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL2RhcmtfdHJpdGFub3BpYS0xOTExZjBjZjBkYjQuY3NzXCI+XG4gICAgPGxpbmsgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBtZWRpYT1cImFsbFwiIHJlbD1cInN0eWxlc2hlZXRcIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvcHJpbWVyLXByaW1pdGl2ZXMtODUwMGMyYzdjZTVmLmNzc1wiPlxuICAgIDxsaW5rIGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgbWVkaWE9XCJhbGxcIiByZWw9XCJzdHlsZXNoZWV0XCIgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL3ByaW1lci0zOGU1OGQ3MWVhMTUuY3NzXCI+XG4gICAgPGxpbmsgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBtZWRpYT1cImFsbFwiIHJlbD1cInN0eWxlc2hlZXRcIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvZ2xvYmFsLTBjNjdjZGEyZmQyMS5jc3NcIj5cbiAgICA8bGluayBjcm9zc29yaWdpbj1cImFub255bW91c1wiIG1lZGlhPVwiYWxsXCIgcmVsPVwic3R5bGVzaGVldFwiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy9naXRodWItNDM3MWI4YjkyZWUxLmNzc1wiPlxuICA8bGluayBjcm9zc29yaWdpbj1cImFub255bW91c1wiIG1lZGlhPVwiYWxsXCIgcmVsPVwic3R5bGVzaGVldFwiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy9wcm9maWxlLTdjYzA0OTNjMjQ1NS5jc3NcIj5cbjxsaW5rIGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgbWVkaWE9XCJhbGxcIiByZWw9XCJzdHlsZXNoZWV0XCIgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL2luc2lnaHRzLWEyYWQ3M2MwYTFmOS5jc3NcIj5cblxuICBcblxuXG4gIDxzY3JpcHQgdHlwZT1cImFwcGxpY2F0aW9uL2pzb25cIiBpZD1cImNsaWVudC1lbnZcIj57XCJsb2NhbGVcIjpcImVuXCIsXCJmZWF0dXJlRmxhZ3NcIjpbXCJjb2RlX3Z1bG5lcmFiaWxpdHlfc2Nhbm5pbmdcIixcImNvcGlsb3RfYmV0YV9mZWF0dXJlc19vcHRfaW5cIixcImNvcGlsb3RfY2hhdF9zdGF0aWNfdGhyZWFkX3N1Z2dlc3Rpb25zXCIsXCJjb3BpbG90X2NvbnZlcnNhdGlvbmFsX3V4X2hpc3RvcnlfcmVmc1wiLFwiY29waWxvdF9mb2xsb3d1cF90b19hZ2VudFwiLFwiY29waWxvdF9pbXBsaWNpdF9jb250ZXh0XCIsXCJjb3BpbG90X3NtZWxsX2ljZWJyZWFrZXJfdXhcIixcImN1c3RvbV9pbnBcIixcImV4cGVyaW1lbnRhdGlvbl9henVyZV92YXJpYW50X2VuZHBvaW50XCIsXCJmYWlsYm90X2hhbmRsZV9ub25fZXJyb3JzXCIsXCJnZW9qc29uX2F6dXJlX21hcHNcIixcImlzc3Vlc19yZWFjdF9pc19yZWFkXCIsXCJtYXJrZXRpbmdfcGFnZXNfc2VhcmNoX2V4cGxvcmVfcHJvdmlkZXJcIixcInJlbW92ZV9jaGlsZF9wYXRjaFwiLFwic2FtcGxlX25ldHdvcmtfY29ubl90eXBlXCIsXCJ0dXJib19leHBlcmltZW50X3Jpc2t5XCJdfTwvc2NyaXB0PlxuPHNjcmlwdCBjcm9zc29yaWdpbj1cImFub255bW91c1wiIGRlZmVyPVwiZGVmZXJcIiB0eXBlPVwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL3dwLXJ1bnRpbWUtMjAwNmNjZDUwNjkzLmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvdmVuZG9ycy1ub2RlX21vZHVsZXNfZG9tcHVyaWZ5X2Rpc3RfcHVyaWZ5X2pzLTg5YTY5YzI0ODUwMi5qc1wiPjwvc2NyaXB0PlxuPHNjcmlwdCBjcm9zc29yaWdpbj1cImFub255bW91c1wiIGRlZmVyPVwiZGVmZXJcIiB0eXBlPVwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX29kZGJpcmRfcG9wb3Zlci1wb2x5ZmlsbF9kaXN0X3BvcG92ZXJfanMtNTY3MjljOTA1ZmUyLmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvdmVuZG9ycy1ub2RlX21vZHVsZXNfZ2l0aHViX21pbmktdGhyb3R0bGVfZGlzdF9pbmRleF9qcy1ub2RlX21vZHVsZXNfc21vb3Roc2Nyb2xsLXBvbHlmaWxsX2RpLTc1ZGIyZS1hZGY5MjlkNjk1ZjMuanNcIj48L3NjcmlwdD5cbjxzY3JpcHQgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBkZWZlcj1cImRlZmVyXCIgdHlwZT1cImFwcGxpY2F0aW9uL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy9lbnZpcm9ubWVudC1jZjUyOTUyNjgyMjYuanNcIj48L3NjcmlwdD5cbjxzY3JpcHQgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBkZWZlcj1cImRlZmVyXCIgdHlwZT1cImFwcGxpY2F0aW9uL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy92ZW5kb3JzLW5vZGVfbW9kdWxlc19wcmltZXJfYmVoYXZpb3JzX2Rpc3RfZXNtX2ZvY3VzLXpvbmVfanMtZjA5M2RkNjBiZDRlLmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvdmVuZG9ycy1ub2RlX21vZHVsZXNfZ2l0aHViX3NlbGVjdG9yLW9ic2VydmVyX2Rpc3RfaW5kZXhfZXNtX2pzLWY2OTBmZDlhZTNkNS5qc1wiPjwvc2NyaXB0PlxuPHNjcmlwdCBjcm9zc29yaWdpbj1cImFub255bW91c1wiIGRlZmVyPVwiZGVmZXJcIiB0eXBlPVwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2dpdGh1Yl90ZXh0LWV4cGFuZGVyLWVsZW1lbnRfZGlzdF9pbmRleF9qcy1jZDQ4MjIwZDc0ZDUuanNcIj48L3NjcmlwdD5cbjxzY3JpcHQgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBkZWZlcj1cImRlZmVyXCIgdHlwZT1cImFwcGxpY2F0aW9uL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy92ZW5kb3JzLW5vZGVfbW9kdWxlc19naXRodWJfYXV0by1jb21wbGV0ZS1lbGVtZW50X2Rpc3RfaW5kZXhfanMtbm9kZV9tb2R1bGVzX2dpdGh1Yl9kZXRhaWxzLWQtZWQ5YTk3LTg0MTEyMmExZTlkNC5qc1wiPjwvc2NyaXB0PlxuPHNjcmlwdCBjcm9zc29yaWdpbj1cImFub255bW91c1wiIGRlZmVyPVwiZGVmZXJcIiB0eXBlPVwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2dpdGh1Yl9taW5pLXRocm90dGxlX2Rpc3RfaW5kZXhfanMtbm9kZV9tb2R1bGVzX2RlbGVnYXRlZC1ldmVudHNfZGlzdF9pbi1hZjc5NWQtNmI4YWNlYmIyMjc4LmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvdmVuZG9ycy1ub2RlX21vZHVsZXNfZ2l0aHViX2ZpbHRlci1pbnB1dC1lbGVtZW50X2Rpc3RfaW5kZXhfanMtbm9kZV9tb2R1bGVzX2dpdGh1Yl9yZW1vdGUtaW5wLWI3ZDhmNC0yMzU1MDQ4ZmYwNDguanNcIj48L3NjcmlwdD5cbjxzY3JpcHQgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBkZWZlcj1cImRlZmVyXCIgdHlwZT1cImFwcGxpY2F0aW9uL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy92ZW5kb3JzLW5vZGVfbW9kdWxlc19naXRodWJfY2F0YWx5c3RfbGliX2luZGV4X2pzLW5vZGVfbW9kdWxlc19naXRodWJfY2xpcGJvYXJkLWNvcHktZWxlbWVudF8tNzgyY2E1LTU0NzYzY2Q1NWI5Ni5qc1wiPjwvc2NyaXB0PlxuPHNjcmlwdCBjcm9zc29yaWdpbj1cImFub255bW91c1wiIGRlZmVyPVwiZGVmZXJcIiB0eXBlPVwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2dpdGh1Yl9maWxlLWF0dGFjaG1lbnQtZWxlbWVudF9kaXN0X2luZGV4X2pzLW5vZGVfbW9kdWxlc19wcmltZXJfdmlldy1jby0xNWNkZmEtOTExN2RjNzAwZmRmLmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvYXBwX2Fzc2V0c19tb2R1bGVzX2dpdGh1Yl9vbmZvY3VzX3RzLXVpX3BhY2thZ2VzX3RydXN0ZWQtdHlwZXMtcG9saWNpZXNfcG9saWN5X3RzLXVpX3BhY2thZ2VzLTZmZTMxNi1kOGY0MDM1MWM2YmIuanNcIj48L3NjcmlwdD5cbjxzY3JpcHQgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBkZWZlcj1cImRlZmVyXCIgdHlwZT1cImFwcGxpY2F0aW9uL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy9naXRodWItZWxlbWVudHMtZjRlYzQ5ZDBiMGUwLmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvZWxlbWVudC1yZWdpc3RyeS1jNTBhYmQyMTIyODAuanNcIj48L3NjcmlwdD5cbjxzY3JpcHQgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBkZWZlcj1cImRlZmVyXCIgdHlwZT1cImFwcGxpY2F0aW9uL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy92ZW5kb3JzLW5vZGVfbW9kdWxlc19naXRodWJfY2F0YWx5c3RfbGliX2luZGV4X2pzLW5vZGVfbW9kdWxlc19naXRodWJfaHlkcm8tYW5hbHl0aWNzLWNsaWVudF8tNzkwMWU3LTRiODRjMjNlYTU3My5qc1wiPjwvc2NyaXB0PlxuPHNjcmlwdCBjcm9zc29yaWdpbj1cImFub255bW91c1wiIGRlZmVyPVwiZGVmZXJcIiB0eXBlPVwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2JyYWludHJlZV9icm93c2VyLWRldGVjdGlvbl9kaXN0X2Jyb3dzZXItZGV0ZWN0aW9uX2pzLW5vZGVfbW9kdWxlc19zdGFjay02ODgzNWQtYTE4MjIwZjFkYjhkLmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvdmVuZG9ycy1ub2RlX21vZHVsZXNfbGl0LWh0bWxfbGl0LWh0bWxfanMtY2U3MjI1YTMwNGM1LmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvdmVuZG9ycy1ub2RlX21vZHVsZXNfZ2l0aHViX21pbmktdGhyb3R0bGVfZGlzdF9pbmRleF9qcy1ub2RlX21vZHVsZXNfbW9ycGhkb21fZGlzdF9tb3JwaGRvbS1lLTdjNTM0Yy1mOGE1NDg1Yzk4MmEuanNcIj48L3NjcmlwdD5cbjxzY3JpcHQgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBkZWZlcj1cImRlZmVyXCIgdHlwZT1cImFwcGxpY2F0aW9uL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy92ZW5kb3JzLW5vZGVfbW9kdWxlc19naXRodWJfdHVyYm9fZGlzdF90dXJib19lczIwMTctZXNtX2pzLTg1OGUwNDNmY2Y3Ni5qc1wiPjwvc2NyaXB0PlxuPHNjcmlwdCBjcm9zc29yaWdpbj1cImFub255bW91c1wiIGRlZmVyPVwiZGVmZXJcIiB0eXBlPVwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2dpdGh1Yl9yZW1vdGUtZm9ybV9kaXN0X2luZGV4X2pzLW5vZGVfbW9kdWxlc19kZWxlZ2F0ZWQtZXZlbnRzX2Rpc3RfaW5kZS04OTNmOWYtNmNmMzMyMDQxNmI4LmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvdmVuZG9ycy1ub2RlX21vZHVsZXNfc2Nyb2xsLWFuY2hvcmluZ19kaXN0X3Njcm9sbC1hbmNob3JpbmdfZXNtX2pzLW5vZGVfbW9kdWxlc19naXRodWJfaG90a2V5LTFhMWQ5MS1mYTlmMjlhODUxNGIuanNcIj48L3NjcmlwdD5cbjxzY3JpcHQgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBkZWZlcj1cImRlZmVyXCIgdHlwZT1cImFwcGxpY2F0aW9uL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy92ZW5kb3JzLW5vZGVfbW9kdWxlc19jb2xvci1jb252ZXJ0X2luZGV4X2pzLTBlMDdjYzE4M2VlZC5qc1wiPjwvc2NyaXB0PlxuPHNjcmlwdCBjcm9zc29yaWdpbj1cImFub255bW91c1wiIGRlZmVyPVwiZGVmZXJcIiB0eXBlPVwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX3ByaW1lcl9iZWhhdmlvcnNfZGlzdF9lc21fZGltZW5zaW9uc19qcy1ub2RlX21vZHVsZXNfZ2l0aHViX2p0bWxfbGliX2luZGV4X2pzLTUzYjQyM2VkZTMyYS5qc1wiPjwvc2NyaXB0PlxuPHNjcmlwdCBjcm9zc29yaWdpbj1cImFub255bW91c1wiIGRlZmVyPVwiZGVmZXJcIiB0eXBlPVwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2dpdGh1Yl9zZXNzaW9uLXJlc3VtZV9kaXN0X2luZGV4X2pzLW5vZGVfbW9kdWxlc19wcmltZXJfYmVoYXZpb3JzX2Rpc3RfZS1kYTZlYzYtMjQ2YWIwODA0YjZiLmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvdmVuZG9ycy1ub2RlX21vZHVsZXNfZ2l0aHViX3F1b3RlLXNlbGVjdGlvbl9kaXN0X2luZGV4X2pzLW5vZGVfbW9kdWxlc19naXRodWJfdGV4dGFyZWEtYXV0b3NpLTllMDM0OS1hYjQ5NzZmYzc4YTYuanNcIj48L3NjcmlwdD5cbjxzY3JpcHQgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBkZWZlcj1cImRlZmVyXCIgdHlwZT1cImFwcGxpY2F0aW9uL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy91aV9wYWNrYWdlc191cGRhdGFibGUtY29udGVudF91cGRhdGFibGUtY29udGVudF90cy04NjkxZTYxYTVlMGQuanNcIj48L3NjcmlwdD5cbjxzY3JpcHQgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBkZWZlcj1cImRlZmVyXCIgdHlwZT1cImFwcGxpY2F0aW9uL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy9hcHBfYXNzZXRzX21vZHVsZXNfZ2l0aHViX2JlaGF2aW9yc190YXNrLWxpc3RfdHMtYXBwX2Fzc2V0c19tb2R1bGVzX2dpdGh1Yl9vbmZvY3VzX3RzLWFwcF9hc3MtNDIxY2VjLWM3MTJiNzU0YTYyZi5qc1wiPjwvc2NyaXB0PlxuPHNjcmlwdCBjcm9zc29yaWdpbj1cImFub255bW91c1wiIGRlZmVyPVwiZGVmZXJcIiB0eXBlPVwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL2FwcF9hc3NldHNfbW9kdWxlc19naXRodWJfc3RpY2t5LXNjcm9sbC1pbnRvLXZpZXdfdHMtNzhjZTFjODc4MmY1LmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvYXBwX2Fzc2V0c19tb2R1bGVzX2dpdGh1Yl9iZWhhdmlvcnNfYWpheC1lcnJvcl90cy1hcHBfYXNzZXRzX21vZHVsZXNfZ2l0aHViX2JlaGF2aW9yc19pbmNsdWRlLTQ2Nzc1NC0xMmI2N2M3OGI3ZjIuanNcIj48L3NjcmlwdD5cbjxzY3JpcHQgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBkZWZlcj1cImRlZmVyXCIgdHlwZT1cImFwcGxpY2F0aW9uL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy9hcHBfYXNzZXRzX21vZHVsZXNfZ2l0aHViX2JlaGF2aW9yc19jb21tZW50aW5nX2VkaXRfdHMtYXBwX2Fzc2V0c19tb2R1bGVzX2dpdGh1Yl9iZWhhdmlvcnNfaHQtODNjMjM1LTM5ZTkyN2U5MmVkOS5qc1wiPjwvc2NyaXB0PlxuPHNjcmlwdCBjcm9zc29yaWdpbj1cImFub255bW91c1wiIGRlZmVyPVwiZGVmZXJcIiB0eXBlPVwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL2FwcF9hc3NldHNfbW9kdWxlc19naXRodWJfYmxvYi1hbmNob3JfdHMtYXBwX2Fzc2V0c19tb2R1bGVzX2dpdGh1Yl9maWx0ZXItc29ydF90cy1hcHBfYXNzZXRzXy02ZGVhZmUtMDJjMzI2YzRmMjY3LmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvYmVoYXZpb3JzLTc5YjZiZDcwOWE3NS5qc1wiPjwvc2NyaXB0PlxuPHNjcmlwdCBjcm9zc29yaWdpbj1cImFub255bW91c1wiIGRlZmVyPVwiZGVmZXJcIiB0eXBlPVwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2RlbGVnYXRlZC1ldmVudHNfZGlzdF9pbmRleF9qcy1ub2RlX21vZHVsZXNfZ2l0aHViX2NhdGFseXN0X2xpYl9pbmRleF9qcy0wNmZmNTMxLWJmN2U1YTM3MzJmZC5qc1wiPjwvc2NyaXB0PlxuPHNjcmlwdCBjcm9zc29yaWdpbj1cImFub255bW91c1wiIGRlZmVyPVwiZGVmZXJcIiB0eXBlPVwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL25vdGlmaWNhdGlvbnMtZ2xvYmFsLTk1N2VjZTVhNjUzNS5qc1wiPjwvc2NyaXB0PlxuPHNjcmlwdCBjcm9zc29yaWdpbj1cImFub255bW91c1wiIGRlZmVyPVwiZGVmZXJcIiB0eXBlPVwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX3N0YWNrdHJhY2UtcGFyc2VyX2Rpc3Rfc3RhY2stdHJhY2UtcGFyc2VyX2VzbV9qcy1ub2RlX21vZHVsZXNfZ2l0aHViX2Jyby0xZWRhOTgtNjY0ZmZlZGIxZjBkLmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvdmVuZG9ycy1ub2RlX21vZHVsZXNfZ2l0aHViX21pbmktdGhyb3R0bGVfZGlzdF9pbmRleF9qcy1ub2RlX21vZHVsZXNfZ2l0aHViX3JlbW90ZS1mb3JtX2Rpc3RfLTM0NzI4MC01Njg0NDgzNGRiMmMuanNcIj48L3NjcmlwdD5cbjxzY3JpcHQgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBkZWZlcj1cImRlZmVyXCIgdHlwZT1cImFwcGxpY2F0aW9uL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy9wcm9maWxlLWI3M2Y5MmI2OWM5ZC5qc1wiPjwvc2NyaXB0PlxuICBcblxuICA8dGl0bGU+UnVieSBvbiBSYWlscyDCtyBHaXRIdWI8L3RpdGxlPlxuXG5cblxuICA8bWV0YSBuYW1lPVwicm91dGUtcGF0dGVyblwiIGNvbnRlbnQ9XCIvOnVzZXJfaWQoLjpmb3JtYXQpXCIgZGF0YS10dXJiby10cmFuc2llbnQ9XCJcIj5cbiAgPG1ldGEgbmFtZT1cInJvdXRlLWNvbnRyb2xsZXJcIiBjb250ZW50PVwicHJvZmlsZXNcIiBkYXRhLXR1cmJvLXRyYW5zaWVudD1cIlwiPlxuICA8bWV0YSBuYW1lPVwicm91dGUtYWN0aW9uXCIgY29udGVudD1cInNob3dcIiBkYXRhLXR1cmJvLXRyYW5zaWVudD1cIlwiPlxuXG4gICAgXG4gIDxtZXRhIG5hbWU9XCJjdXJyZW50LWNhdGFsb2ctc2VydmljZS1oYXNoXCIgY29udGVudD1cIjRhMWM1MGE4M2NmNmNjNGI1NWI2YjljNTNlNTUzZTNmODQ3Yzg3NmI4N2ZiMzMzZjcxZjVkMDVkYjhmMWE3ZGJcIj5cblxuXG4gIDxtZXRhIG5hbWU9XCJyZXF1ZXN0LWlkXCIgY29udGVudD1cIkZCMTY6ODBDOEE6MjUwRDhBQjoyODgxMDU4OjY2QTNDRUNCXCIgZGF0YS1wamF4LXRyYW5zaWVudD1cInRydWVcIj48bWV0YSBuYW1lPVwiaHRtbC1zYWZlLW5vbmNlXCIgY29udGVudD1cIjcxNDAwZGYwY2E3ZDY5ODlmMjAyYjJkM2NkMTdhZDA2MTU5ODAzYzlkMWM3MTc4NThlNTRmMzYwZTA2ZTM0MmFcIiBkYXRhLXBqYXgtdHJhbnNpZW50PVwidHJ1ZVwiPjxtZXRhIG5hbWU9XCJ2aXNpdG9yLXBheWxvYWRcIiBjb250ZW50PVwiZXlKeVpXWmxjbkpsY2lJNklpSXNJbkpsY1hWbGMzUmZhV1FpT2lKR1FqRTJPamd3UXpoQk9qSTFNRVE0UVVJNk1qZzRNVEExT0RvMk5rRXpRMFZEUWlJc0luWnBjMmwwYjNKZmFXUWlPaUkyTWpVNU5EVXhOamMwT1RVNE56UTFNamt4SWl3aWNtVm5hVzl1WDJWa1oyVWlPaUppY21GNmFXeHpiM1YwYUNJc0luSmxaMmx2Ymw5eVpXNWtaWElpT2lKaWNtRjZhV3h6YjNWMGFDSjlcIiBkYXRhLXBqYXgtdHJhbnNpZW50PVwidHJ1ZVwiPjxtZXRhIG5hbWU9XCJ2aXNpdG9yLWhtYWNcIiBjb250ZW50PVwiMDkyNGRlNzY0N2QxMjAzOWJmODU5OGZiYTRhNTVjNDc4ZWE1YjZjYzg2NmMyZjRhMzFmMTlkOGY3ZDgyZTk3OVwiIGRhdGEtcGpheC10cmFuc2llbnQ9XCJ0cnVlXCI+XG5cblxuICAgIDxtZXRhIG5hbWU9XCJob3ZlcmNhcmQtc3ViamVjdC10YWdcIiBjb250ZW50PVwib3JnYW5pemF0aW9uOjQyMjNcIiBkYXRhLXR1cmJvLXRyYW5zaWVudD1cIlwiPlxuXG5cbiAgPG1ldGEgbmFtZT1cImdpdGh1Yi1rZXlib2FyZC1zaG9ydGN1dHNcIiBjb250ZW50PVwiY29waWxvdFwiIGRhdGEtdHVyYm8tdHJhbnNpZW50PVwidHJ1ZVwiPlxuICBcblxuICA8bWV0YSBuYW1lPVwic2VsZWN0ZWQtbGlua1wiIHZhbHVlPVwiL3JhaWxzXCIgZGF0YS10dXJiby10cmFuc2llbnQ9XCJcIj5cbiAgPGxpbmsgcmVsPVwiYXNzZXRzXCIgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vXCI+XG5cbiAgICA8bWV0YSBuYW1lPVwiZ29vZ2xlLXNpdGUtdmVyaWZpY2F0aW9uXCIgY29udGVudD1cIkFwaWI3LXg5OEgwajVjUHFIV3dTTW02ZE5VNEdtT0RSb3F4TGlEemR4OUlcIj5cblxuPG1ldGEgbmFtZT1cIm9jdG9seXRpY3MtdXJsXCIgY29udGVudD1cImh0dHBzOi8vY29sbGVjdG9yLmdpdGh1Yi5jb20vZ2l0aHViL2NvbGxlY3RcIj5cblxuICA8bWV0YSBuYW1lPVwiYW5hbHl0aWNzLWxvY2F0aW9uXCIgY29udGVudD1cIi88b3JnLWxvZ2luPlwiIGRhdGEtdHVyYm8tdHJhbnNpZW50PVwidHJ1ZVwiPlxuXG4gIFxuXG5cblxuXG4gICAgPG1ldGEgbmFtZT1cInVzZXItbG9naW5cIiBjb250ZW50PVwiXCI+XG5cbiAgXG5cbiAgICA8bWV0YSBuYW1lPVwidmlld3BvcnRcIiBjb250ZW50PVwid2lkdGg9ZGV2aWNlLXdpZHRoXCI+XG5cbiAgICBcblxuICAgICAgPG1ldGEgbmFtZT1cImRlc2NyaXB0aW9uXCIgY29udGVudD1cIlJ1Ynkgb24gUmFpbHMgaGFzIDEyNCByZXBvc2l0b3JpZXMgYXZhaWxhYmxlLiBGb2xsb3cgdGhlaXIgY29kZSBvbiBHaXRIdWIuXCI+XG5cbiAgICAgIDxsaW5rIHJlbD1cInNlYXJjaFwiIHR5cGU9XCJhcHBsaWNhdGlvbi9vcGVuc2VhcmNoZGVzY3JpcHRpb24reG1sXCIgaHJlZj1cIi9vcGVuc2VhcmNoLnhtbFwiIHRpdGxlPVwiR2l0SHViXCI+XG5cbiAgICA8bGluayByZWw9XCJmbHVpZC1pY29uXCIgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9mbHVpZGljb24ucG5nXCIgdGl0bGU9XCJHaXRIdWJcIj5cbiAgICA8bWV0YSBwcm9wZXJ0eT1cImZiOmFwcF9pZFwiIGNvbnRlbnQ9XCIxNDAxNDg4NjkzNDM2NTI4XCI+XG4gICAgPG1ldGEgbmFtZT1cImFwcGxlLWl0dW5lcy1hcHBcIiBjb250ZW50PVwiYXBwLWlkPTE0NzczNzY5MDUsIGFwcC1hcmd1bWVudD1odHRwczovL2dpdGh1Yi5jb20vcmFpbHNcIj5cblxuICAgICAgPG1ldGEgbmFtZT1cInR3aXR0ZXI6aW1hZ2U6c3JjXCIgY29udGVudD1cImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS80MjIzP3M9MjgwJmFtcDt2PTRcIj48bWV0YSBuYW1lPVwidHdpdHRlcjpzaXRlXCIgY29udGVudD1cIkBnaXRodWJcIj48bWV0YSBuYW1lPVwidHdpdHRlcjpjYXJkXCIgY29udGVudD1cInN1bW1hcnlfbGFyZ2VfaW1hZ2VcIj48bWV0YSBuYW1lPVwidHdpdHRlcjp0aXRsZVwiIGNvbnRlbnQ9XCJSdWJ5IG9uIFJhaWxzXCI+PG1ldGEgbmFtZT1cInR3aXR0ZXI6ZGVzY3JpcHRpb25cIiBjb250ZW50PVwiUnVieSBvbiBSYWlscyBoYXMgMTI0IHJlcG9zaXRvcmllcyBhdmFpbGFibGUuIEZvbGxvdyB0aGVpciBjb2RlIG9uIEdpdEh1Yi5cIj5cbiAgPG1ldGEgcHJvcGVydHk9XCJvZzppbWFnZVwiIGNvbnRlbnQ9XCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvNDIyMz9zPTI4MCZhbXA7dj00XCI+PG1ldGEgcHJvcGVydHk9XCJvZzppbWFnZTphbHRcIiBjb250ZW50PVwiUnVieSBvbiBSYWlscyBoYXMgMTI0IHJlcG9zaXRvcmllcyBhdmFpbGFibGUuIEZvbGxvdyB0aGVpciBjb2RlIG9uIEdpdEh1Yi5cIj48bWV0YSBwcm9wZXJ0eT1cIm9nOnNpdGVfbmFtZVwiIGNvbnRlbnQ9XCJHaXRIdWJcIj48bWV0YSBwcm9wZXJ0eT1cIm9nOnR5cGVcIiBjb250ZW50PVwicHJvZmlsZVwiPjxtZXRhIHByb3BlcnR5PVwib2c6dGl0bGVcIiBjb250ZW50PVwiUnVieSBvbiBSYWlsc1wiPjxtZXRhIHByb3BlcnR5PVwib2c6dXJsXCIgY29udGVudD1cImh0dHBzOi8vZ2l0aHViLmNvbS9yYWlsc1wiPjxtZXRhIHByb3BlcnR5PVwib2c6ZGVzY3JpcHRpb25cIiBjb250ZW50PVwiUnVieSBvbiBSYWlscyBoYXMgMTI0IHJlcG9zaXRvcmllcyBhdmFpbGFibGUuIEZvbGxvdyB0aGVpciBjb2RlIG9uIEdpdEh1Yi5cIj48bWV0YSBwcm9wZXJ0eT1cInByb2ZpbGU6dXNlcm5hbWVcIiBjb250ZW50PVwicmFpbHNcIj5cbiAgXG5cblxuXG5cbiAgICAgIDxtZXRhIG5hbWU9XCJob3N0bmFtZVwiIGNvbnRlbnQ9XCJnaXRodWIuY29tXCI+XG5cblxuXG4gICAgICAgIDxtZXRhIG5hbWU9XCJleHBlY3RlZC1ob3N0bmFtZVwiIGNvbnRlbnQ9XCJnaXRodWIuY29tXCI+XG5cblxuICA8bWV0YSBodHRwLWVxdWl2PVwieC1wamF4LXZlcnNpb25cIiBjb250ZW50PVwiMmUzZGZjNjk0ZmE1NGQ2N2M2MWNlNjhiYjY5ZDNmMGI2NDlkZmY1MjkxYmQxNmVjODJjZTEwNTU2MzdjNTAzMFwiIGRhdGEtdHVyYm8tdHJhY2s9XCJyZWxvYWRcIj5cbiAgPG1ldGEgaHR0cC1lcXVpdj1cIngtcGpheC1jc3AtdmVyc2lvblwiIGNvbnRlbnQ9XCI0NzlkMGU0ZjI1ZTEwYWRjNjQ4YzRkZDMwMmZmZDE0N2FhNWMyYjYwNmYwYzU0MjRmNmY2ZjBmNDUxMWU1NzUzXCIgZGF0YS10dXJiby10cmFjaz1cInJlbG9hZFwiPlxuICA8bWV0YSBodHRwLWVxdWl2PVwieC1wamF4LWNzcy12ZXJzaW9uXCIgY29udGVudD1cIjE2M2UyMGE0NmEyMjQ0ZmVhZDBlODYyYzkzNzlmNDIxMWE2ZjU1YTFiYWJiOWYwYjc4ZDAwMzkzZTI5MzgwNTBcIiBkYXRhLXR1cmJvLXRyYWNrPVwicmVsb2FkXCI+XG4gIDxtZXRhIGh0dHAtZXF1aXY9XCJ4LXBqYXgtanMtdmVyc2lvblwiIGNvbnRlbnQ9XCI1Yzk3MjZiMDc4NGU2ODA0N2E5MjdlNDQyMGI2ZDc4MzFlNDBhZGZjMDE0YjhhMDkzZmViNzcwNTYyNzc5M2JiXCIgZGF0YS10dXJiby10cmFjaz1cInJlbG9hZFwiPlxuXG4gIDxtZXRhIG5hbWU9XCJ0dXJiby1jYWNoZS1jb250cm9sXCIgY29udGVudD1cIm5vLXByZXZpZXdcIiBkYXRhLXR1cmJvLXRyYW5zaWVudD1cIlwiPlxuXG5cblxuICAgICAgPGxpbmsgcmVsPVwiY2Fub25pY2FsXCIgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9yYWlsc1wiIGRhdGEtdHVyYm8tdHJhbnNpZW50PVwiXCI+XG5cblxuICAgIDxtZXRhIG5hbWU9XCJ0dXJiby1ib2R5LWNsYXNzZXNcIiBjb250ZW50PVwibG9nZ2VkLW91dCBlbnYtcHJvZHVjdGlvbiBwYWdlLXJlc3BvbnNpdmVcIj5cblxuXG4gIDxtZXRhIG5hbWU9XCJicm93c2VyLXN0YXRzLXVybFwiIGNvbnRlbnQ9XCJodHRwczovL2FwaS5naXRodWIuY29tL19wcml2YXRlL2Jyb3dzZXIvc3RhdHNcIj5cblxuICA8bWV0YSBuYW1lPVwiYnJvd3Nlci1lcnJvcnMtdXJsXCIgY29udGVudD1cImh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vX3ByaXZhdGUvYnJvd3Nlci9lcnJvcnNcIj5cblxuICA8bGluayByZWw9XCJtYXNrLWljb25cIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvcGlubmVkLW9jdG9jYXQtMDkzZGEzZTZmYTQwLnN2Z1wiIGNvbG9yPVwiIzAwMDAwMFwiPlxuICA8bGluayByZWw9XCJhbHRlcm5hdGUgaWNvblwiIGNsYXNzPVwianMtc2l0ZS1mYXZpY29uXCIgdHlwZT1cImltYWdlL3BuZ1wiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Zhdmljb25zL2Zhdmljb24tZGFyay5wbmdcIj5cbiAgPGxpbmsgcmVsPVwiaWNvblwiIGNsYXNzPVwianMtc2l0ZS1mYXZpY29uXCIgdHlwZT1cImltYWdlL3N2Zyt4bWxcIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9mYXZpY29ucy9mYXZpY29uLWRhcmsuc3ZnXCI+XG5cbjxtZXRhIG5hbWU9XCJ0aGVtZS1jb2xvclwiIGNvbnRlbnQ9XCIjMWUyMzI3XCI+XG48bWV0YSBuYW1lPVwiY29sb3Itc2NoZW1lXCIgY29udGVudD1cImxpZ2h0IGRhcmtcIj5cblxuXG4gIDxsaW5rIHJlbD1cIm1hbmlmZXN0XCIgaHJlZj1cIi9tYW5pZmVzdC5qc29uXCIgY3Jvc3NvcmlnaW49XCJ1c2UtY3JlZGVudGlhbHNcIj5cblxuICA8c3R5bGUgaWQ9XCJtcy1jb25zZW50LWJhbm5lci1tYWluLXN0eWxlc1wiPi53OGhjZ0Zrc2RvMzBDOHctYnlncXV7Y29sb3I6IzAwMH0ueWRrS2RhenRTUzBBZUhXSWVJSHNRIGF7Y29sb3I6IzAwNjdCOH0uZXJMNjkwXzhKd1VXLVI0YkpSY2Zse2JhY2tncm91bmQtY29sb3I6I0VCRUJFQjtib3JkZXI6bm9uZTtjb2xvcjojMDAwfS5lckw2OTBfOEp3VVctUjRiSlJjZmw6ZW5hYmxlZDpob3Zlcntjb2xvcjojMDAwO2JhY2tncm91bmQtY29sb3I6I0RCREJEQjtib3gtc2hhZG93OjBweCA0cHggMTBweCByZ2JhKDAsMCwwLDAuMjUpO2JvcmRlcjpub25lfS5lckw2OTBfOEp3VVctUjRiSlJjZmw6ZW5hYmxlZDpmb2N1c3tiYWNrZ3JvdW5kLWNvbG9yOiNEQkRCREI7Ym94LXNoYWRvdzowcHggNHB4IDEwcHggcmdiYSgwLDAsMCwwLjI1KTtib3JkZXI6MnB4IHNvbGlkICMwMDB9LmVyTDY5MF84SndVVy1SNGJKUmNmbDpkaXNhYmxlZHtvcGFjaXR5OjE7Y29sb3I6cmdiYSgwLDAsMCwwLjIpO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwLjIpO2JvcmRlcjpub25lfS5fMXpOUU9xeHBCRlNva2VDTEdpX2hHcntib3JkZXI6bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOiMwMDY3Qjg7Y29sb3I6I2ZmZn0uXzF6TlFPcXhwQkZTb2tlQ0xHaV9oR3I6ZW5hYmxlZDpob3Zlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzAwNjdCODtib3gtc2hhZG93OjBweCA0cHggMTBweCByZ2JhKDAsMCwwLDAuMjUpO2JvcmRlcjpub25lfS5fMXpOUU9xeHBCRlNva2VDTEdpX2hHcjplbmFibGVkOmZvY3Vze2JhY2tncm91bmQtY29sb3I6IzAwNjdCODtib3gtc2hhZG93OjBweCA0cHggMTBweCByZ2JhKDAsMCwwLDAuMjUpO2JvcmRlcjoycHggc29saWQgIzAwMH0uXzF6TlFPcXhwQkZTb2tlQ0xHaV9oR3I6ZGlzYWJsZWR7b3BhY2l0eToxO2NvbG9yOnJnYmEoMCwwLDAsMC4yKTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwxMjAsMjE1LDAuMik7Ym9yZGVyOm5vbmV9Ll8yM3RyYTFIc2lpUDZjVC1Da2EteWNCe3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6ZmxleDt6LWluZGV4Ojk5OTk7d2lkdGg6MTAwJTtiYWNrZ3JvdW5kLWNvbG9yOiNGMkYyRjI7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47dGV4dC1hbGlnbjpsZWZ0fWRpdltkaXI9XCJydGxcIl0uXzIzdHJhMUhzaWlQNmNULUNrYS15Y0J7dGV4dC1hbGlnbjpyaWdodH0uXzFVcGMyTmpZOEFsRG4xNzdZb1ZqMHl7bWFyZ2luOjA7cGFkZGluZy1sZWZ0OjUlO3BhZGRpbmctdG9wOjhweDtwYWRkaW5nLWJvdHRvbTo4cHh9ZGl2W2Rpcj1cInJ0bFwiXSAuXzFVcGMyTmpZOEFsRG4xNzdZb1ZqMHl7bWFyZ2luOjA7cGFkZGluZzo4cHggNSUgOHB4IDA7ZmxvYXQ6bm9uZX0uXzIzdHJhMUhzaWlQNmNULUNrYS15Y0Igc3Zne2ZpbGw6bm9uZTttYXgtd2lkdGg6bm9uZTttYXgtaGVpZ2h0Om5vbmV9Ll8xVl9obFUtN2pkdFBpb29ITXU4OUJCe2Rpc3BsYXk6dGFibGUtY2VsbDtwYWRkaW5nOjEycHg7d2lkdGg6MjRweDtoZWlnaHQ6MjRweDtmb250LWZhbWlseTpTZWdvZSBVSSwgU2Vnb2VVSSwgQXJpYWwsIHNhbnMtc2VyaWY7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc2l6ZToyNHB4O2xpbmUtaGVpZ2h0OjB9LmY2UUtKRDdmaFNibkpMYXJUTC1XLXtkaXNwbGF5OnRhYmxlLWNlbGw7dmVydGljYWwtYWxpZ246bWlkZGxlO3BhZGRpbmc6MDtmb250LWZhbWlseTpTZWdvZSBVSSwgU2Vnb2VVSSwgQXJpYWwsIHNhbnMtc2VyaWY7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc2l6ZToxM3B4O2xpbmUtaGVpZ2h0OjE2cHh9LmY2UUtKRDdmaFNibkpMYXJUTC1XLSBhe3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmV9Ll8yajBmbXVnTGIxRmdZejZLUHVCOTF3e2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1sZWZ0OjUlO21hcmdpbi1yaWdodDo1JTttaW4td2lkdGg6NDAlO21pbi13aWR0aDpjYWxjKCgxNTBweCArIDMgKiA0cHgpICogMiArIDE1MHB4KTttaW4td2lkdGg6LXdlYmtpdC1maXQtY29udGVudDttaW4td2lkdGg6LW1vei1maXQtY29udGVudDttaW4td2lkdGg6Zml0LWNvbnRlbnQ7YWxpZ24tc2VsZjpjZW50ZXI7cG9zaXRpb246cmVsYXRpdmV9Ll8xWHVDaTJXaGlxZVdSVVZwM3BuRkcze21hcmdpbjo0cHg7cGFkZGluZzo1cHg7bWluLXdpZHRoOjE1MHB4O21pbi1oZWlnaHQ6MzZweDt2ZXJ0aWNhbC1hbGlnbjp0b3A7Y3Vyc29yOnBvaW50ZXI7Zm9udC1mYW1pbHk6U2Vnb2UgVUksIFNlZ29lVUksIEFyaWFsLCBzYW5zLXNlcmlmO2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MTVweDtsaW5lLWhlaWdodDoyMHB4O3RleHQtYWxpZ246Y2VudGVyfS5fMVh1Q2kyV2hpcWVXUlVWcDNwbkZHMzpmb2N1c3tib3gtc2l6aW5nOmJvcmRlci1ib3h9Ll8xWHVDaTJXaGlxZVdSVVZwM3BuRkczOmRpc2FibGVke2N1cnNvcjpub3QtYWxsb3dlZH0uXzJidnNiM3ViQXB5WjBVR29RQTlPOVR7ZGlzcGxheTpibG9jaztwb3NpdGlvbjpmaXhlZDt6LWluZGV4OjEwMDAwO3RvcDowO2xlZnQ6MDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwwLjYpO292ZXJmbG93OmF1dG87dGV4dC1hbGlnbjpsZWZ0fWRpdltkaXI9XCJydGxcIl0uXzJidnNiM3ViQXB5WjBVR29RQTlPOVR7dGV4dC1hbGlnbjpyaWdodH1kaXZbZGlyPVwicnRsXCJdIC5fMmJ2c2IzdWJBcHlaMFVHb1FBOU85VHtsZWZ0OmF1dG87cmlnaHQ6MH0uQUZzSkU5NDhtdVl5ekNNa3RkenVre3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDo4JTttYXJnaW4tYm90dG9tOjQwcHg7bWFyZ2luLWxlZnQ6YXV0bzttYXJnaW4tcmlnaHQ6YXV0bztib3gtc2l6aW5nOmJvcmRlci1ib3g7d2lkdGg6NjQwcHg7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlcjoxcHggc29saWQgIzAwNjdCOH0uXzNrV3lCUmJXX2Rnbk1pRXl4MDZGdTR7ZmxvYXQ6cmlnaHQ7ei1pbmRleDoxO21hcmdpbjoycHg7cGFkZGluZzoxMnB4O2JvcmRlcjpub25lO2N1cnNvcjpwb2ludGVyO2ZvbnQtZmFtaWx5OlNlZ29lIFVJLCBTZWdvZVVJLCBBcmlhbCwgc2Fucy1zZXJpZjtmb250LXN0eWxlOm5vcm1hbDtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zaXplOjEzcHg7bGluZS1oZWlnaHQ6MTNweDtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3RleHQtYWxpZ246Y2VudGVyO2NvbG9yOiM2NjY7YmFja2dyb3VuZC1jb2xvcjojZmZmfWRpdltkaXI9XCJydGxcIl0gLl8za1d5QlJiV19kZ25NaUV5eDA2RnU0e21hcmdpbjoycHg7cGFkZGluZzoxMnB4O2Zsb2F0OmxlZnR9LnVDWXZLdkhYcmhqTmdmbHYxVnFkRHtwb3NpdGlvbjpzdGF0aWM7bWFyZ2luLXRvcDozNnB4O21hcmdpbi1sZWZ0OjM2cHg7bWFyZ2luLXJpZ2h0OjM2cHh9Ll8xN3BYMW05T19XLS1pWmJEdDNUYTVye21hcmdpbi10b3A6MDttYXJnaW4tYm90dG9tOjEycHg7Zm9udC1mYW1pbHk6U2Vnb2UgVUksIFNlZ29lVUksIEFyaWFsLCBzYW5zLXNlcmlmO2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0OjYwMDtmb250LXNpemU6MjBweDtsaW5lLWhlaWdodDoyNHB4O3RleHQtdHJhbnNmb3JtOm5vbmV9Ll8xa0JrSFExVjF3dTNrbC1ZY0xnVXI2e2hlaWdodDo0NDZweDtvdmVyZmxvdzphdXRvfS5fMjBfblhEZjZ1RnM5UTZ3eFJYRy1JLXttYXJnaW4tdG9wOjA7Zm9udC1mYW1pbHk6U2Vnb2UgVUksIFNlZ29lVUksIEFyaWFsLCBzYW5zLXNlcmlmO2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MTVweDtsaW5lLWhlaWdodDoyMHB4fS5fMjBfblhEZjZ1RnM5UTZ3eFJYRy1JLSBhe3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmV9ZGwuXzJhME5IX0dEUUVRZTVZbmZvN3N1Vkh7bWFyZ2luLXRvcDozNnB4O21hcmdpbi1ib3R0b206MDtwYWRkaW5nOjA7bGlzdC1zdHlsZTpub25lO3RleHQtdHJhbnNmb3JtOm5vbmV9ZHQuXzNqX0xDUHY3ZnlYdjNBOEZJWFZ3WjR7bWFyZ2luLXRvcDoyMHB4O2Zsb2F0Om5vbmU7Zm9udC1mYW1pbHk6U2Vnb2UgVUksIFNlZ29lVUksIEFyaWFsLCBzYW5zLXNlcmlmO2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0OjYwMDtmb250LXNpemU6MThweDtsaW5lLWhlaWdodDoyNHB4O2xpc3Qtc3R5bGU6bm9uZX0uay12eFRHRmJkcTFhT1pCMkhIcGpoe21hcmdpbjowO3BhZGRpbmc6MDtib3JkZXI6bm9uZX0uXzJCdWN5eTc1Y19vZ29VMWctbGlCNVJ7bWFyZ2luOjA7cGFkZGluZzowO2JvcmRlci1ib3R0b206bm9uZTtmb250LWZhbWlseTpTZWdvZSBVSSwgU2Vnb2VVSSwgQXJpYWwsIHNhbnMtc2VyaWY7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6NjAwO2ZvbnQtc2l6ZToxOHB4O2xpbmUtaGVpZ2h0OjI0cHg7dGV4dC10cmFuc2Zvcm06bm9uZX0uXzYzZ3dmelY4ZGNscnNsMmNmZDkwcntkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbToxM3B4O2ZvbnQtZmFtaWx5OlNlZ29lIFVJLCBTZWdvZVVJLCBBcmlhbCwgc2Fucy1zZXJpZjtmb250LXN0eWxlOm5vcm1hbDtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zaXplOjE1cHg7bGluZS1oZWlnaHQ6MjBweH0uXzFsOHdNXzRtUllHejNJdTdsM0JaUjd7ZGlzcGxheTpibG9ja30uXzJVRTAzUVMwMmFaR2tzbGVnTl9GLWl7ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246cmVsYXRpdmU7bGVmdDo1cHg7bWFyZ2luLWJvdHRvbToxM3B4O21hcmdpbi1yaWdodDozNHB4O3BhZGRpbmc6M3B4fWRpdltkaXI9XCJydGxcIl0gLl8yVUUwM1FTMDJhWkdrc2xlZ05fRi1pe21hcmdpbjowIDAgMTNweCAzNHB4O3BhZGRpbmc6M3B4O2Zsb2F0Om5vbmV9ZGl2W2Rpcj1cInJ0bFwiXSAuXzJVRTAzUVMwMmFaR2tzbGVnTl9GLWl7bGVmdDphdXRvO3JpZ2h0OjVweH0uXzIzdHJhMUhzaWlQNmNULUNrYS15Y0IgKjo6YmVmb3JlLC5fMmJ2c2IzdWJBcHlaMFVHb1FBOU85VCAqOjpiZWZvcmUsLl8yM3RyYTFIc2lpUDZjVC1Da2EteWNCICo6OmFmdGVyLC5fMmJ2c2IzdWJBcHlaMFVHb1FBOU85VCAqOjphZnRlcntib3gtc2l6aW5nOmluaGVyaXR9Ll8xSFNGbjBIekdvNnc0QURBcFY4LWM0e291dGxpbmU6MnB4IHNvbGlkIHJnYmEoMCwwLDAsMC44KX1pbnB1dFt0eXBlPVwicmFkaW9cIl0uXzFkcDhWcDVtM0h3QXFHeDhxQm1GVjJ7ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDowO21hcmdpbi1sZWZ0OjA7bWFyZ2luLXJpZ2h0OjA7aGVpZ2h0OjA7d2lkdGg6MDtib3JkZXItcmFkaXVzOjA7Y3Vyc29yOnBvaW50ZXI7b3V0bGluZTpub25lO2JveC1zaXppbmc6Ym9yZGVyLWJveDstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTstbW96LWFwcGVhcmFuY2U6bm9uZTthcHBlYXJhbmNlOm5vbmV9aW5wdXRbdHlwZT1cInJhZGlvXCJdLl8xZHA4VnA1bTNId0FxR3g4cUJtRlYyK2xhYmVsOjpiZWZvcmV7ZGlzcGxheTpibG9jaztwb3NpdGlvbjphYnNvbHV0ZTt0b3A6NXB4O2xlZnQ6M3B4O2hlaWdodDoxOXB4O3dpZHRoOjE5cHg7Y29udGVudDpcIlwiO2JvcmRlci1yYWRpdXM6NTAlO2JvcmRlcjoxcHggc29saWQgIzAwMDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9ZGl2W2Rpcj1cInJ0bFwiXSBpbnB1dFt0eXBlPVwicmFkaW9cIl0uXzFkcDhWcDVtM0h3QXFHeDhxQm1GVjIrbGFiZWw6OmJlZm9yZXtsZWZ0OmF1dG87cmlnaHQ6M3B4fWlucHV0W3R5cGU9XCJyYWRpb1wiXS5fMWRwOFZwNW0zSHdBcUd4OHFCbUZWMjpub3QoOmRpc2FibGVkKStsYWJlbDpob3Zlcjo6YmVmb3Jle2JvcmRlcjoxcHggc29saWQgIzAwNjdCOH1pbnB1dFt0eXBlPVwicmFkaW9cIl0uXzFkcDhWcDVtM0h3QXFHeDhxQm1GVjI6bm90KDpkaXNhYmxlZCkrbGFiZWw6aG92ZXI6OmFmdGVye2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246YWJzb2x1dGU7dG9wOjEwcHg7bGVmdDo4cHg7aGVpZ2h0OjlweDt3aWR0aDo5cHg7Y29udGVudDpcIlwiO2JvcmRlci1yYWRpdXM6NTAlO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwLjgpfWRpdltkaXI9XCJydGxcIl0gaW5wdXRbdHlwZT1cInJhZGlvXCJdLl8xZHA4VnA1bTNId0FxR3g4cUJtRlYyOm5vdCg6ZGlzYWJsZWQpK2xhYmVsOmhvdmVyOjphZnRlcntsZWZ0OmF1dG87cmlnaHQ6OHB4fWlucHV0W3R5cGU9XCJyYWRpb1wiXS5fMWRwOFZwNW0zSHdBcUd4OHFCbUZWMjpub3QoOmRpc2FibGVkKStsYWJlbDpmb2N1czo6YmVmb3Jle2JvcmRlcjoxcHggc29saWQgIzAwNjdCOH1pbnB1dFt0eXBlPVwicmFkaW9cIl0uXzFkcDhWcDVtM0h3QXFHeDhxQm1GVjI6bm90KDpkaXNhYmxlZCkrbGFiZWw6Zm9jdXM6OmFmdGVye2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246YWJzb2x1dGU7dG9wOjEwcHg7bGVmdDo4cHg7aGVpZ2h0OjlweDt3aWR0aDo5cHg7Y29udGVudDpcIlwiO2JvcmRlci1yYWRpdXM6NTAlO2JhY2tncm91bmQtY29sb3I6IzAwMH1kaXZbZGlyPVwicnRsXCJdIGlucHV0W3R5cGU9XCJyYWRpb1wiXS5fMWRwOFZwNW0zSHdBcUd4OHFCbUZWMjpub3QoOmRpc2FibGVkKStsYWJlbDpmb2N1czo6YWZ0ZXJ7bGVmdDphdXRvO3JpZ2h0OjhweH1pbnB1dFt0eXBlPVwicmFkaW9cIl0uXzFkcDhWcDVtM0h3QXFHeDhxQm1GVjI6Y2hlY2tlZCtsYWJlbDo6YWZ0ZXJ7ZGlzcGxheTpibG9jaztwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MTBweDtsZWZ0OjhweDtoZWlnaHQ6OXB4O3dpZHRoOjlweDtjb250ZW50OlwiXCI7Ym9yZGVyLXJhZGl1czo1MCU7YmFja2dyb3VuZC1jb2xvcjojMDAwfWRpdltkaXI9XCJydGxcIl0gaW5wdXRbdHlwZT1cInJhZGlvXCJdLl8xZHA4VnA1bTNId0FxR3g4cUJtRlYyOmNoZWNrZWQrbGFiZWw6OmFmdGVye2xlZnQ6YXV0bztyaWdodDo4cHh9aW5wdXRbdHlwZT1cInJhZGlvXCJdLl8xZHA4VnA1bTNId0FxR3g4cUJtRlYyOmRpc2FibGVkK2xhYmVse2N1cnNvcjpub3QtYWxsb3dlZH1pbnB1dFt0eXBlPVwicmFkaW9cIl0uXzFkcDhWcDVtM0h3QXFHeDhxQm1GVjI6ZGlzYWJsZWQrbGFiZWw6OmJlZm9yZXtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4yKTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC4yKX0uXzNSSnplTDNsOVJsX2xBUUVtNlZ3ZFh7ZGlzcGxheTpibG9jaztwb3NpdGlvbjpzdGF0aWM7ZmxvYXQ6cmlnaHQ7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MDttYXJnaW4tbGVmdDoxOXB4O21hcmdpbi1yaWdodDowO3BhZGRpbmctdG9wOjA7cGFkZGluZy1ib3R0b206MDtwYWRkaW5nLWxlZnQ6OHB4O3BhZGRpbmctcmlnaHQ6MDt3aWR0aDo4MCU7d2lkdGg6Y2FsYygxMDAlIC0gMTlweCk7Zm9udC1mYW1pbHk6U2Vnb2UgVUksIFNlZ29lVUksIEFyaWFsLCBzYW5zLXNlcmlmO2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MTVweDtsaW5lLWhlaWdodDoyMHB4O3RleHQtdHJhbnNmb3JtOm5vbmU7Y3Vyc29yOnBvaW50ZXI7Ym94LXNpemluZzpib3JkZXItYm94fWRpdltkaXI9XCJydGxcIl0gLl8zUkp6ZUwzbDlSbF9sQVFFbTZWd2RYe21hcmdpbjowIDE5cHggMCAwO3BhZGRpbmc6MCA4cHggMCAwO2Zsb2F0OmxlZnR9Lm5vaHAzc0lHMTJaQmh6Y01uUGFsYXttYXJnaW4tdG9wOjIwcHg7bWFyZ2luLWJvdHRvbTo0OHB4fS5fMnVoYUVzbWVvdFozUC1NMEFYbzJrRntwYWRkaW5nOjA7d2lkdGg6Mjc4cHg7aGVpZ2h0OjM2cHg7Y3Vyc29yOnBvaW50ZXI7Zm9udC1mYW1pbHk6U2Vnb2UgVUksIFNlZ29lVUksIEFyaWFsLCBzYW5zLXNlcmlmO2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MTVweDtsaW5lLWhlaWdodDoyMHB4O3RleHQtYWxpZ246Y2VudGVyfS5fMnVoYUVzbWVvdFozUC1NMEFYbzJrRjpmb2N1c3tib3gtc2l6aW5nOmJvcmRlci1ib3h9Ll8ydWhhRXNtZW90WjNQLU0wQVhvMmtGOmRpc2FibGVke2N1cnNvcjpub3QtYWxsb3dlZH0uXzN0T3UxRko1OWNfeHpfUG1JMWxLVjV7ZmxvYXQ6cmlnaHQ7cGFkZGluZzowO3dpZHRoOjI3OHB4O2hlaWdodDozNnB4O2N1cnNvcjpwb2ludGVyO2ZvbnQtZmFtaWx5OlNlZ29lIFVJLCBTZWdvZVVJLCBBcmlhbCwgc2Fucy1zZXJpZjtmb250LXN0eWxlOm5vcm1hbDtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zaXplOjE1cHg7bGluZS1oZWlnaHQ6MjBweDt0ZXh0LWFsaWduOmNlbnRlcn0uXzN0T3UxRko1OWNfeHpfUG1JMWxLVjU6Zm9jdXN7Ym94LXNpemluZzpib3JkZXItYm94fS5fM3RPdTFGSjU5Y194el9QbUkxbEtWNTpkaXNhYmxlZHtjdXJzb3I6bm90LWFsbG93ZWR9ZGl2W2Rpcj1cInJ0bFwiXSAuXzN0T3UxRko1OWNfeHpfUG1JMWxLVjV7bWFyZ2luOjA7cGFkZGluZzowO2Zsb2F0OmxlZnR9QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7Ll8yajBmbXVnTGIxRmdZejZLUHVCOTF3LC5fMVVwYzJOalk4QWxEbjE3N1lvVmoweXtwYWRkaW5nLXRvcDo4cHg7cGFkZGluZy1ib3R0b206MTJweDtwYWRkaW5nLWxlZnQ6My43NSU7cGFkZGluZy1yaWdodDozLjc1JTttYXJnaW46MDt3aWR0aDo5Mi41JX0uXzIzdHJhMUhzaWlQNmNULUNrYS15Y0J7ZGlzcGxheTpibG9ja30uXzFYdUNpMldoaXFlV1JVVnAzcG5GRzN7bWFyZ2luLWJvdHRvbTo4cHg7bWFyZ2luLWxlZnQ6MDttYXJnaW4tcmlnaHQ6MDt3aWR0aDoxMDAlfS5fMmJ2c2IzdWJBcHlaMFVHb1FBOU85VHtvdmVyZmxvdzpoaWRkZW59LkFGc0pFOTQ4bXVZeXpDTWt0ZHp1a3t0b3A6MS44JTt3aWR0aDo5My4zMyU7aGVpZ2h0Ojk2LjQlO292ZXJmbG93OmhpZGRlbn0udUNZdkt2SFhyaGpOZ2ZsdjFWcWREe21hcmdpbi10b3A6MjRweDttYXJnaW4tbGVmdDoyNHB4O21hcmdpbi1yaWdodDoyNHB4O2hlaWdodDoxMDAlfS5fMWtCa0hRMVYxd3Uza2wtWWNMZ1VyNntoZWlnaHQ6NjIlO2hlaWdodDpjYWxjKDEwMCUgLSAxODhweCk7bWluLWhlaWdodDo1MCV9Ll8ydWhhRXNtZW90WjNQLU0wQVhvMmtGe3dpZHRoOjEwMCV9Ll8zdE91MUZKNTljX3h6X1BtSTFsS1Y1e21hcmdpbi1ib3R0b206MTJweDttYXJnaW4tbGVmdDowO3dpZHRoOjEwMCV9ZGl2W2Rpcj1cInJ0bFwiXSAuXzN0T3UxRko1OWNfeHpfUG1JMWxLVjV7bWFyZ2luOjAgMCAxMnB4IDA7cGFkZGluZzowO2Zsb2F0Om5vbmV9fUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSksIG9ubHkgc2NyZWVuIGFuZCAobWF4LWhlaWdodDogMjYwcHgpLCBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzQwcHgpey5BRnNKRTk0OG11WXl6Q01rdGR6dWt7b3ZlcmZsb3c6YXV0b319QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LWhlaWdodDogMjYwcHgpLCBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzQwcHgpey5fMVh1Q2kyV2hpcWVXUlVWcDNwbkZHM3ttaW4td2lkdGg6MH0uXzNrV3lCUmJXX2Rnbk1pRXl4MDZGdTR7cGFkZGluZzozJX0udUNZdkt2SFhyaGpOZ2ZsdjFWcWREe21hcmdpbi10b3A6MyU7bWFyZ2luLWxlZnQ6MyU7bWFyZ2luLXJpZ2h0OjMlfS5fMTdwWDFtOU9fVy0taVpiRHQzVGE1cnttYXJnaW4tYm90dG9tOjMlfS5fMWtCa0hRMVYxd3Uza2wtWWNMZ1VyNntoZWlnaHQ6Y2FsYyg3OSUgLSA2NHB4KX0ubm9ocDNzSUcxMlpCaHpjTW5QYWxhe21hcmdpbi10b3A6NSU7bWFyZ2luLWJvdHRvbToxMCV9Ll8zdE91MUZKNTljX3h6X1BtSTFsS1Y1e21hcmdpbi1ib3R0b206MyV9ZGl2W2Rpcj1cInJ0bFwiXSAuXzN0T3UxRko1OWNfeHpfUG1JMWxLVjV7bWFyZ2luOjAgMCAzJSAwO3BhZGRpbmc6MDtmbG9hdDpub25lfX1cbjwvc3R5bGU+PHN0eWxlIHR5cGU9XCJ0ZXh0L2Nzc1wiIGlkPVwibXMtY29uc2VudC1iYW5uZXItdGhlbWUtc3R5bGVzXCI+Ll8yM3RyYTFIc2lpUDZjVC1Da2EteWNCIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyNDI5MmYgIWltcG9ydGFudDtcbiAgICAgICAgfS53OGhjZ0Zrc2RvMzBDOHctYnlncXUge1xuICAgICAgICAgICAgY29sb3I6ICNmZmZmZmYgIWltcG9ydGFudDtcbiAgICAgICAgfS55ZGtLZGF6dFNTMEFlSFdJZUlIc1EgYSB7XG4gICAgICAgICAgICBjb2xvcjogI2Q4YjlmZiAhaW1wb3J0YW50O1xuICAgICAgICB9Ll8yYnZzYjN1YkFweVowVUdvUUE5TzlUIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjMsIDIzLCAyMywgMC44KSAhaW1wb3J0YW50O1xuICAgICAgICB9LkFGc0pFOTQ4bXVZeXpDTWt0ZHp1ayB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjQyOTJmICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZDhiOWZmICFpbXBvcnRhbnQ7XG4gICAgICAgIH0uXzNrV3lCUmJXX2Rnbk1pRXl4MDZGdTQge1xuICAgICAgICAgICAgY29sb3I6ICNkOGI5ZmYgIWltcG9ydGFudDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyNDI5MmYgIWltcG9ydGFudDtcbiAgICAgICAgfS5fMXpOUU9xeHBCRlNva2VDTEdpX2hHciB7XG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmZmZmICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBjb2xvcjogIzFmMjMyOCAhaW1wb3J0YW50O1xuICAgICAgICB9Ll8xek5RT3F4cEJGU29rZUNMR2lfaEdyOmVuYWJsZWQ6aG92ZXIge1xuICAgICAgICAgICAgY29sb3I6ICMxZjIzMjggIWltcG9ydGFudDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNkOGI5ZmYgIWltcG9ydGFudDtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgICAgIH0uXzF6TlFPcXhwQkZTb2tlQ0xHaV9oR3I6ZW5hYmxlZDpmb2N1cyB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDhiOWZmICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjZmZmZmZmICFpbXBvcnRhbnQ7XG4gICAgICAgIH0uXzF6TlFPcXhwQkZTb2tlQ0xHaV9oR3I6ZGlzYWJsZWQge1xuICAgICAgICAgICAgb3BhY2l0eTogMC41ICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBjb2xvcjogIzFmMjMyOCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZiAhaW1wb3J0YW50O1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICAgICAgfS5lckw2OTBfOEp3VVctUjRiSlJjZmwge1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2VhZWVmMiAhaW1wb3J0YW50O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzMyMzgzZiAhaW1wb3J0YW50O1xuICAgICAgICAgICAgY29sb3I6ICNmZmZmZmYgIWltcG9ydGFudDtcbiAgICAgICAgfS5lckw2OTBfOEp3VVctUjRiSlJjZmw6ZW5hYmxlZDpob3ZlciB7XG4gICAgICAgICAgICBjb2xvcjogI2ZmZmZmZiAhaW1wb3J0YW50O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzI0MjkyZiAhaW1wb3J0YW50O1xuICAgICAgICAgICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZmZmZiAhaW1wb3J0YW50O1xuICAgICAgICB9LmVyTDY5MF84SndVVy1SNGJKUmNmbDplbmFibGVkOmZvY3VzIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyNDI5MmYgIWltcG9ydGFudDtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICM2ZTc3ODEgIWltcG9ydGFudDtcbiAgICAgICAgfS5lckw2OTBfOEp3VVctUjRiSlJjZmw6ZGlzYWJsZWQge1xuICAgICAgICAgICAgb3BhY2l0eTogMC41ICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBjb2xvcjogI2ZmZmZmZiAhaW1wb3J0YW50O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzQyNGE1MyAhaW1wb3J0YW50O1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzZlNzc4MSAhaW1wb3J0YW50O1xuICAgICAgICB9aW5wdXRbdHlwZT1cInJhZGlvXCJdLl8xZHA4VnA1bTNId0FxR3g4cUJtRlYyICsgbGFiZWw6OmJlZm9yZSB7XG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZDhiOWZmICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjQyOTJmICFpbXBvcnRhbnQ7XG4gICAgICAgIH0uXzFIU0ZuMEh6R282dzRBREFwVjgtYzQge1xuICAgICAgICAgICAgb3V0bGluZTogMnB4IHNvbGlkICNmZmZmZmYgIWltcG9ydGFudDtcbiAgICAgICAgfWlucHV0W3R5cGU9XCJyYWRpb1wiXS5fMWRwOFZwNW0zSHdBcUd4OHFCbUZWMjpjaGVja2VkICsgbGFiZWw6OmFmdGVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNkOGI5ZmYgIWltcG9ydGFudDtcbiAgICAgICAgfWlucHV0W3R5cGU9XCJyYWRpb1wiXS5fMWRwOFZwNW0zSHdBcUd4OHFCbUZWMiArIGxhYmVsOmhvdmVyOjpiZWZvcmUge1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZmZmZiAhaW1wb3J0YW50O1xuICAgICAgICB9aW5wdXRbdHlwZT1cInJhZGlvXCJdLl8xZHA4VnA1bTNId0FxR3g4cUJtRlYyICsgbGFiZWw6aG92ZXI6OmFmdGVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmYgIWltcG9ydGFudDtcbiAgICAgICAgfWlucHV0W3R5cGU9XCJyYWRpb1wiXS5fMWRwOFZwNW0zSHdBcUd4OHFCbUZWMiArIGxhYmVsOmZvY3VzOjpiZWZvcmUge1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZmZmZiAhaW1wb3J0YW50O1xuICAgICAgICB9aW5wdXRbdHlwZT1cInJhZGlvXCJdLl8xZHA4VnA1bTNId0FxR3g4cUJtRlYyICsgbGFiZWw6Zm9jdXM6OmFmdGVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNkOGI5ZmYgIWltcG9ydGFudDtcbiAgICAgICAgfWlucHV0W3R5cGU9XCJyYWRpb1wiXS5fMWRwOFZwNW0zSHdBcUd4OHFCbUZWMjpkaXNhYmxlZCArIGxhYmVsOjpiZWZvcmUge1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyMjcsIDIyNywgMjI3LCAwLjIpICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIyNywgMjI3LCAyMjcsIDAuMikgIWltcG9ydGFudDtcbiAgICAgICAgfTwvc3R5bGU+PC9oZWFkPlxuXG4gIDxib2R5IGNsYXNzPVwibG9nZ2VkLW91dCBlbnYtcHJvZHVjdGlvbiBwYWdlLXJlc3BvbnNpdmVcIiBzdHlsZT1cIm92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7IC0tZGlhbG9nLXNjcm9sbGd1dHRlcjogMTVweDtcIj5cbiAgICA8ZGl2IGRhdGEtdHVyYm8tYm9keT1cIlwiIGNsYXNzPVwibG9nZ2VkLW91dCBlbnYtcHJvZHVjdGlvbiBwYWdlLXJlc3BvbnNpdmVcIiBzdHlsZT1cIndvcmQtd3JhcDogYnJlYWstd29yZDtcIj5cbiAgICAgIFxuXG5cbiAgICA8ZGl2IGNsYXNzPVwicG9zaXRpb24tcmVsYXRpdmUganMtaGVhZGVyLXdyYXBwZXIgXCI+XG4gICAgICA8YSBocmVmPVwiI3N0YXJ0LW9mLWNvbnRlbnRcIiBkYXRhLXNraXAtdGFyZ2V0LWFzc2lnbmVkPVwiZmFsc2VcIiBjbGFzcz1cInB4LTIgcHktNCBjb2xvci1iZy1hY2NlbnQtZW1waGFzaXMgY29sb3ItZmctb24tZW1waGFzaXMgc2hvdy1vbi1mb2N1cyBqcy1za2lwLXRvLWNvbnRlbnRcIj5Ta2lwIHRvIGNvbnRlbnQ8L2E+XG5cbiAgICAgIDxzcGFuIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJwcm9ncmVzcy1wamF4LWxvYWRlciBQcm9ncmVzcyBwb3NpdGlvbi1maXhlZCB3aWR0aC1mdWxsXCI+XG4gICAgPHNwYW4gc3R5bGU9XCJ3aWR0aDogMCU7XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIlByb2dyZXNzLWl0ZW0gcHJvZ3Jlc3MtcGpheC1sb2FkZXItYmFyIGxlZnQtMCB0b3AtMCBjb2xvci1iZy1hY2NlbnQtZW1waGFzaXNcIj48L3NwYW4+XG48L3NwYW4+ICAgICAgXG4gICAgICBcbiAgICAgIDxzY3JpcHQgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBkZWZlcj1cImRlZmVyXCIgdHlwZT1cImFwcGxpY2F0aW9uL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy9yZWFjdC1saWItN2I3YjUyNjRmNmMxLmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvdmVuZG9ycy1ub2RlX21vZHVsZXNfZ2l0aHViX21pbmktdGhyb3R0bGVfZGlzdF9pbmRleF9qcy1ub2RlX21vZHVsZXNfcHJpbWVyX29jdGljb25zLXJlYWN0X2RpLWI0MGQ5Ny00ZDZjMDJiZGE3ZDUuanNcIj48L3NjcmlwdD5cbjxzY3JpcHQgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBkZWZlcj1cImRlZmVyXCIgdHlwZT1cImFwcGxpY2F0aW9uL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy92ZW5kb3JzLW5vZGVfbW9kdWxlc19wcmltZXJfcmVhY3RfbGliLWVzbV9Cb3hfQm94X2pzLTU1YTkwMzhiNTRmMC5qc1wiPjwvc2NyaXB0PlxuPHNjcmlwdCBjcm9zc29yaWdpbj1cImFub255bW91c1wiIGRlZmVyPVwiZGVmZXJcIiB0eXBlPVwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX3ByaW1lcl9yZWFjdF9saWItZXNtX0J1dHRvbl9CdXR0b25fanMtZTBkYWEzZWQxMzhlLmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvdmVuZG9ycy1ub2RlX21vZHVsZXNfcHJpbWVyX3JlYWN0X2xpYi1lc21fVG9vbHRpcFYyX1Rvb2x0aXBfanMtMDBmNWZhOWM3MGYyLmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvdmVuZG9ycy1ub2RlX21vZHVsZXNfY2xzeF9kaXN0X2Nsc3hfbV9qcy1ub2RlX21vZHVsZXNfcHJpbWVyX3JlYWN0X25vZGVfbW9kdWxlc19wcmltZXJfb2N0aWNvLWM1NjEwMy1lOTEyOTVlNjBhYmQuanNcIj48L3NjcmlwdD5cbjxzY3JpcHQgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBkZWZlcj1cImRlZmVyXCIgdHlwZT1cImFwcGxpY2F0aW9uL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy92ZW5kb3JzLW5vZGVfbW9kdWxlc19wcmltZXJfcmVhY3RfbGliLWVzbV9BY3Rpb25MaXN0X2luZGV4X2pzLWZmMWM4NmNkYzVmNC5qc1wiPjwvc2NyaXB0PlxuPHNjcmlwdCBjcm9zc29yaWdpbj1cImFub255bW91c1wiIGRlZmVyPVwiZGVmZXJcIiB0eXBlPVwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX3ByaW1lcl9yZWFjdF9saWItZXNtX0RpYWxvZ19EaWFsb2dfanMtbm9kZV9tb2R1bGVzX3ByaW1lcl9yZWFjdF9saWItZXNtXy1hZjlmNmMtM2FhNGUxMDhmY2Q0LmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvdWlfcGFja2FnZXNfcmVhY3QtY29yZV9jcmVhdGUtYnJvd3Nlci1oaXN0b3J5X3RzLXVpX3BhY2thZ2VzX3NhZmUtc3RvcmFnZV9zYWZlLXN0b3JhZ2VfdHMtdWlfLTY4MmMyYy03N2E2YTY2NTQ3ZDUuanNcIj48L3NjcmlwdD5cbjxzY3JpcHQgY3Jvc3NvcmlnaW49XCJhbm9ueW1vdXNcIiBkZWZlcj1cImRlZmVyXCIgdHlwZT1cImFwcGxpY2F0aW9uL2phdmFzY3JpcHRcIiBzcmM9XCJodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL2Fzc2V0cy9rZXlib2FyZC1zaG9ydGN1dHMtZGlhbG9nLTZmYTliNjVhNWQ3MC5qc1wiPjwvc2NyaXB0PlxuXG48cmVhY3QtcGFydGlhbCBwYXJ0aWFsLW5hbWU9XCJrZXlib2FyZC1zaG9ydGN1dHMtZGlhbG9nXCIgZGF0YS1zc3I9XCJmYWxzZVwiIGRhdGEtY2F0YWx5c3Q9XCJcIiBjbGFzcz1cImxvYWRlZFwiPlxuICBcbiAgPHNjcmlwdCB0eXBlPVwiYXBwbGljYXRpb24vanNvblwiIGRhdGEtdGFyZ2V0PVwicmVhY3QtcGFydGlhbC5lbWJlZGRlZERhdGFcIj57XCJwcm9wc1wiOntcImRvY3NVcmxcIjpcImh0dHBzOi8vZG9jcy5naXRodWIuY29tL2dldC1zdGFydGVkL2FjY2Vzc2liaWxpdHkva2V5Ym9hcmQtc2hvcnRjdXRzXCJ9fTwvc2NyaXB0PlxuICA8ZGl2IGRhdGEtdGFyZ2V0PVwicmVhY3QtcGFydGlhbC5yZWFjdFJvb3RcIj48c2NyaXB0IHR5cGU9XCJhcHBsaWNhdGlvbi9qc29uXCIgaWQ9XCJfX1BSSU1FUl9EQVRBXzpyMDpfX1wiPntcInJlc29sdmVkU2VydmVyQ29sb3JNb2RlXCI6XCJuaWdodFwifTwvc2NyaXB0PjwvZGl2PlxuPC9yZWFjdC1wYXJ0aWFsPlxuXG5cblxuXG4gICAgICBcblxuICAgICAgICAgIFxuXG4gICAgICAgICAgICAgIFxuPHNjcmlwdCBjcm9zc29yaWdpbj1cImFub255bW91c1wiIGRlZmVyPVwiZGVmZXJcIiB0eXBlPVwiYXBwbGljYXRpb24vamF2YXNjcmlwdFwiIHNyYz1cImh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vYXNzZXRzL3ZlbmRvcnMtbm9kZV9tb2R1bGVzX2dpdGh1Yl9yZW1vdGUtZm9ybV9kaXN0X2luZGV4X2pzLW5vZGVfbW9kdWxlc19kZWxlZ2F0ZWQtZXZlbnRzX2Rpc3RfaW5kZS05NGZkNjctOWE2MjFlY2JmNjcyLmpzXCI+PC9zY3JpcHQ+XG48c2NyaXB0IGNyb3Nzb3JpZ2luPVwiYW5vbnltb3VzXCIgZGVmZXI9XCJkZWZlclwiIHR5cGU9XCJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0XCIgc3JjPVwiaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9hc3NldHMvc2Vzc2lvbnMtNDQyNmRkMGI3MjBlLmpzXCI+PC9zY3JpcHQ+XG48aGVhZGVyIGNsYXNzPVwiSGVhZGVyTWt0ZyBoZWFkZXItbG9nZ2VkLW91dCBqcy1kZXRhaWxzLWNvbnRhaW5lciBqcy1oZWFkZXIgRGV0YWlscyBwb3NpdGlvbi1yZWxhdGl2ZSBmNCBweS0zXCIgcm9sZT1cImJhbm5lclwiIGRhdGEtY29sb3ItbW9kZT1cImxpZ2h0XCIgZGF0YS1saWdodC10aGVtZT1cImxpZ2h0XCIgZGF0YS1kYXJrLXRoZW1lPVwiZGFya1wiPlxuICA8aDIgY2xhc3M9XCJzci1vbmx5XCI+TmF2aWdhdGlvbiBNZW51PC9oMj5cblxuICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cIkhlYWRlck1rdGctYmFja2Ryb3AgZC1sZy1ub25lIGJvcmRlci0wIHBvc2l0aW9uLWZpeGVkIHRvcC0wIGxlZnQtMCB3aWR0aC1mdWxsIGhlaWdodC1mdWxsIGpzLWRldGFpbHMtdGFyZ2V0XCIgYXJpYS1sYWJlbD1cIlRvZ2dsZSBuYXZpZ2F0aW9uXCI+XG4gICAgPHNwYW4gY2xhc3M9XCJkLW5vbmVcIj5Ub2dnbGUgbmF2aWdhdGlvbjwvc3Bhbj5cbiAgPC9idXR0b24+XG5cbiAgPGRpdiBjbGFzcz1cImQtZmxleCBmbGV4LWNvbHVtbiBmbGV4LWxnLXJvdyBmbGV4LWl0ZW1zLWNlbnRlciBweC0zIHB4LW1kLTQgcHgtbGctNSBoZWlnaHQtZnVsbCBwb3NpdGlvbi1yZWxhdGl2ZSB6LTFcIj5cbiAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGZsZXgtanVzdGlmeS1iZXR3ZWVuIGZsZXgtaXRlbXMtY2VudGVyIHdpZHRoLWZ1bGwgd2lkdGgtbGctYXV0b1wiPlxuICAgICAgPGEgY2xhc3M9XCJtci1sZy0zIGNvbG9yLWZnLWluaGVyaXQgZmxleC1vcmRlci0yXCIgaHJlZj1cIi9cIiBhcmlhLWxhYmVsPVwiSG9tZXBhZ2VcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtNYXJrZXRpbmcgbmF2JnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayB0byBnbyB0byBob21lcGFnZSZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDtyZWZfcGFnZTpNYXJrZXRpbmc7cmVmX2N0YTpMb2dvbWFyaztyZWZfbG9jOkhlYWRlciZxdW90O31cIj5cbiAgICAgICAgPHN2ZyBoZWlnaHQ9XCIzMlwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIzMlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tbWFyay1naXRodWJcIj5cbiAgICA8cGF0aCBkPVwiTTggMGM0LjQyIDAgOCAzLjU4IDggOGE4LjAxMyA4LjAxMyAwIDAgMS01LjQ1IDcuNTljLS40LjA4LS41NS0uMTctLjU1LS4zOCAwLS4yNy4wMS0xLjEzLjAxLTIuMiAwLS43NS0uMjUtMS4yMy0uNTQtMS40OCAxLjc4LS4yIDMuNjUtLjg4IDMuNjUtMy45NSAwLS44OC0uMzEtMS41OS0uODItMi4xNS4wOC0uMi4zNi0xLjAyLS4wOC0yLjEyIDAgMC0uNjctLjIyLTIuMi44Mi0uNjQtLjE4LTEuMzItLjI3LTItLjI3LS42OCAwLTEuMzYuMDktMiAuMjctMS41My0xLjAzLTIuMi0uODItMi4yLS44Mi0uNDQgMS4xLS4xNiAxLjkyLS4wOCAyLjEyLS41MS41Ni0uODIgMS4yOC0uODIgMi4xNSAwIDMuMDYgMS44NiAzLjc1IDMuNjQgMy45NS0uMjMuMi0uNDQuNTUtLjUxIDEuMDctLjQ2LjIxLTEuNjEuNTUtMi4zMy0uNjYtLjE1LS4yNC0uNi0uODMtMS4yMy0uODItLjY3LjAxLS4yNy4zOC4wMS41My4zNC4xOS43My45LjgyIDEuMTMuMTYuNDUuNjggMS4zMSAyLjY5Ljk0IDAgLjY3LjAxIDEuMy4wMSAxLjQ5IDAgLjIxLS4xNS40NS0uNTUuMzhBNy45OTUgNy45OTUgMCAwIDEgMCA4YzAtNC40MiAzLjU4LTggOC04WlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgPC9hPlxuXG4gICAgICA8ZGl2IGNsYXNzPVwiZmxleC0xXCI+XG4gICAgICAgIDxidXR0b24gYXJpYS1sYWJlbD1cIlRvZ2dsZSBuYXZpZ2F0aW9uXCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCIgdHlwZT1cImJ1dHRvblwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJqcy1kZXRhaWxzLXRhcmdldCBqcy1uYXYtcGFkZGluZy1yZWNhbGN1bGF0ZSBCdXR0b24tLWxpbmsgQnV0dG9uLS1tZWRpdW0gQnV0dG9uIGQtbGctbm9uZSBjb2xvci1mZy1pbmhlcml0IHAtMVwiPiAgPHNwYW4gY2xhc3M9XCJCdXR0b24tY29udGVudFwiPlxuICAgIDxzcGFuIGNsYXNzPVwiQnV0dG9uLWxhYmVsXCI+PGRpdiBjbGFzcz1cIkhlYWRlck1lbnUtdG9nZ2xlLWJhciByb3VuZGVkIG15LTFcIj48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJIZWFkZXJNZW51LXRvZ2dsZS1iYXIgcm91bmRlZCBteS0xXCI+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiSGVhZGVyTWVudS10b2dnbGUtYmFyIHJvdW5kZWQgbXktMVwiPjwvZGl2Pjwvc3Bhbj5cbiAgPC9zcGFuPlxuPC9idXR0b24+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cImZsZXgtMSBmbGV4LW9yZGVyLTIgdGV4dC1yaWdodFwiPlxuICAgICAgICAgIDxhIGhyZWY9XCIvbG9naW4/cmV0dXJuX3RvPWh0dHBzJTNBJTJGJTJGZ2l0aHViLmNvbSUyRnJhaWxzXCIgY2xhc3M9XCJIZWFkZXJNZW51LWxpbmsgSGVhZGVyTWVudS1idXR0b24gZC1pbmxpbmUtZmxleCBkLWxnLW5vbmUgZmxleC1vcmRlci0xIGY1IG5vLXVuZGVybGluZSBib3JkZXIgY29sb3ItYm9yZGVyLWRlZmF1bHQgcm91bmRlZC0yIHB4LTIgcHktMSBjb2xvci1mZy1pbmhlcml0XCIgZGF0YS1oeWRyby1jbGljaz1cInsmcXVvdDtldmVudF90eXBlJnF1b3Q7OiZxdW90O2F1dGhlbnRpY2F0aW9uLmNsaWNrJnF1b3Q7LCZxdW90O3BheWxvYWQmcXVvdDs6eyZxdW90O2xvY2F0aW9uX2luX3BhZ2UmcXVvdDs6JnF1b3Q7c2l0ZSBoZWFkZXIgbWVudSZxdW90OywmcXVvdDtyZXBvc2l0b3J5X2lkJnF1b3Q7Om51bGwsJnF1b3Q7YXV0aF90eXBlJnF1b3Q7OiZxdW90O1NJR05fVVAmcXVvdDssJnF1b3Q7b3JpZ2luYXRpbmdfdXJsJnF1b3Q7OiZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS9yYWlscyZxdW90OywmcXVvdDt1c2VyX2lkJnF1b3Q7Om51bGx9fVwiIGRhdGEtaHlkcm8tY2xpY2staG1hYz1cIjZmNmQwYTU0YjVlNDcwZWRhZGIzNWU0ODVmMjU1ZGNmZjdkMzU3NTRiMDNlNGY5MzMyODIwZGQ0YzFkOGYxOTNcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtNYXJrZXRpbmcgbmF2JnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayB0byBTaWduIGluJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3JlZl9wYWdlOk1hcmtldGluZztyZWZfY3RhOlNpZ24gaW47cmVmX2xvYzpIZWFkZXImcXVvdDt9XCI+XG4gICAgICAgICAgICBTaWduIGluXG4gICAgICAgICAgPC9hPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY2xhc3M9XCJkLWxnLW5vbmUgY3NzLXRydW5jYXRlIGNzcy10cnVuY2F0ZS10YXJnZXQgd2lkdGgtZml0IG10LTMgRGV0YWlscy1jb250ZW50LS1zaG93blwiPlxuICAgICAgICBcbiAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiSGVhZGVyLWxpbmtcIiBocmVmPVwiL3JhaWxzXCI+cmFpbHM8L2E+XG5cbiAgICAgIDwvZGl2PlxuXG4gICAgPGRpdiBjbGFzcz1cIkhlYWRlck1lbnUganMtaGVhZGVyLW1lbnUgaGVpZ2h0LWZpdCBwb3NpdGlvbi1sZy1yZWxhdGl2ZSBkLWxnLWZsZXggZmxleC1jb2x1bW4gZmxleC1hdXRvIHRvcC0wXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiSGVhZGVyTWVudS13cmFwcGVyIGQtZmxleCBmbGV4LWNvbHVtbiBmbGV4LXNlbGYtc3RhcnQgZmxleC1sZy1yb3cgZmxleC1hdXRvIHJvdW5kZWQgcm91bmRlZC1sZy0wXCI+XG4gICAgICAgICAgPG5hdiBjbGFzcz1cIkhlYWRlck1lbnUtbmF2XCIgYXJpYS1sYWJlbD1cIkdsb2JhbFwiPlxuICAgICAgICAgICAgPHVsIGNsYXNzPVwiZC1sZy1mbGV4IGxpc3Qtc3R5bGUtbm9uZVwiPlxuICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cIkhlYWRlck1lbnUtaXRlbSBwb3NpdGlvbi1yZWxhdGl2ZSBmbGV4LXdyYXAgZmxleC1qdXN0aWZ5LWJldHdlZW4gZmxleC1pdGVtcy1jZW50ZXIgZC1ibG9jayBkLWxnLWZsZXggZmxleC1sZy1ub3dyYXAgZmxleC1sZy1pdGVtcy1jZW50ZXIganMtZGV0YWlscy1jb250YWluZXIganMtaGVhZGVyLW1lbnUtaXRlbVwiPlxuICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJIZWFkZXJNZW51LWxpbmsgYm9yZGVyLTAgd2lkdGgtZnVsbCB3aWR0aC1sZy1hdXRvIHB4LTAgcHgtbGctMiBweS1sZy0yIG5vLXdyYXAgZC1mbGV4IGZsZXgtaXRlbXMtY2VudGVyIGZsZXgtanVzdGlmeS1iZXR3ZWVuIGpzLWRldGFpbHMtdGFyZ2V0XCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCI+XG4gICAgICAgIFByb2R1Y3RcbiAgICAgICAgPHN2ZyBvcGFjaXR5PVwiMC41XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWNoZXZyb24tZG93biBIZWFkZXJNZW51LWljb24gbWwtMVwiPlxuICAgIDxwYXRoIGQ9XCJNMTIuNzggNS4yMmEuNzQ5Ljc0OSAwIDAgMSAwIDEuMDZsLTQuMjUgNC4yNWEuNzQ5Ljc0OSAwIDAgMS0xLjA2IDBMMy4yMiA2LjI4YS43NDkuNzQ5IDAgMSAxIDEuMDYtMS4wNkw4IDguOTM5bDMuNzItMy43MTlhLjc0OS43NDkgMCAwIDEgMS4wNiAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgPC9idXR0b24+XG4gICAgICA8ZGl2IGNsYXNzPVwiSGVhZGVyTWVudS1kcm9wZG93biBkcm9wZG93bi1tZW51IHJvdW5kZWQgbS0wIHAtMCBweS0yIHB5LWxnLTQgcG9zaXRpb24tcmVsYXRpdmUgcG9zaXRpb24tbGctYWJzb2x1dGUgbGVmdC0wIGxlZnQtbGctbjMgZC1sZy1mbGV4IGRyb3Bkb3duLW1lbnUtd2lkZVwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJweC1sZy00IGJvcmRlci1sZy1yaWdodCBtYi00IG1iLWxnLTAgcHItbGctN1wiPlxuICAgICAgICAgICAgPHVsIGNsYXNzPVwibGlzdC1zdHlsZS1ub25lIGY1XCI+XG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeSBkLWZsZXggZmxleC1pdGVtcy1jZW50ZXIgTGluay0taGFzLWRlc2NyaXB0aW9uIHBiLWxnLTNcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtsb2NhdGlvbiZxdW90OzomcXVvdDtuYXZiYXImcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2FjdGlvbnMmcXVvdDssJnF1b3Q7Y29udGV4dCZxdW90OzomcXVvdDtwcm9kdWN0X3N1Ym5hdiZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7bGluayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDthY3Rpb25zX2xpbmtfcHJvZHVjdF9zdWJuYXZfbmF2YmFyJnF1b3Q7fVwiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vZmVhdHVyZXMvYWN0aW9uc1wiPlxuICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIyNFwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24td29ya2Zsb3cgY29sb3ItZmctc3VidGxlIG1yLTNcIj5cbiAgICA8cGF0aCBkPVwiTTEgM2EyIDIgMCAwIDEgMi0yaDYuNWEyIDIgMCAwIDEgMiAydjYuNWEyIDIgMCAwIDEtMiAySDd2NC4wNjNDNyAxNi4zNTUgNy42NDQgMTcgOC40MzggMTdIMTIuNXYtMi41YTIgMiAwIDAgMSAyLTJIMjFhMiAyIDAgMCAxIDIgMlYyMWEyIDIgMCAwIDEtMiAyaC02LjVhMiAyIDAgMCAxLTItMnYtMi41SDguNDM3QTIuOTM5IDIuOTM5IDAgMCAxIDUuNSAxNS41NjJWMTEuNUgzYTIgMiAwIDAgMS0yLTJabTItLjVhLjUuNSAwIDAgMC0uNS41djYuNWEuNS41IDAgMCAwIC41LjVoNi41YS41LjUgMCAwIDAgLjUtLjVWM2EuNS41IDAgMCAwLS41LS41Wk0xNC41IDE0YS41LjUgMCAwIDAtLjUuNVYyMWEuNS41IDAgMCAwIC41LjVIMjFhLjUuNSAwIDAgMCAuNS0uNXYtNi41YS41LjUgMCAwIDAtLjUtLjVaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICA8ZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sb3ItZmctZGVmYXVsdCBoNFwiPkFjdGlvbnM8L2Rpdj5cbiAgICAgICAgQXV0b21hdGUgYW55IHdvcmtmbG93XG4gICAgICA8L2Rpdj5cblxuICAgIFxuPC9hPjwvbGk+XG5cbiAgICAgICAgICAgICAgICA8bGk+XG4gIDxhIGNsYXNzPVwiSGVhZGVyTWVudS1kcm9wZG93bi1saW5rIGQtYmxvY2sgbm8tdW5kZXJsaW5lIHBvc2l0aW9uLXJlbGF0aXZlIHB5LTIgTGluay0tc2Vjb25kYXJ5IGQtZmxleCBmbGV4LWl0ZW1zLWNlbnRlciBMaW5rLS1oYXMtZGVzY3JpcHRpb24gcGItbGctM1wiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2xvY2F0aW9uJnF1b3Q7OiZxdW90O25hdmJhciZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7cGFja2FnZXMmcXVvdDssJnF1b3Q7Y29udGV4dCZxdW90OzomcXVvdDtwcm9kdWN0X3N1Ym5hdiZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7bGluayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDtwYWNrYWdlc19saW5rX3Byb2R1Y3Rfc3VibmF2X25hdmJhciZxdW90O31cIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL2ZlYXR1cmVzL3BhY2thZ2VzXCI+XG4gICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjI0XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1wYWNrYWdlIGNvbG9yLWZnLXN1YnRsZSBtci0zXCI+XG4gICAgPHBhdGggZD1cIk0xMi44NzYuNjRWLjYzOWw4LjI1IDQuNzYzYy41NDEuMzEzLjg3NS44OS44NzUgMS41MTV2OS41MjVhMS43NSAxLjc1IDAgMCAxLS44NzUgMS41MTZsLTguMjUgNC43NjJhMS43NDggMS43NDggMCAwIDEtMS43NSAwbC04LjI1LTQuNzYzYTEuNzUgMS43NSAwIDAgMS0uODc1LTEuNTE1VjYuOTE3YzAtLjYyNS4zMzQtMS4yMDIuODc1LTEuNTE1TDExLjEyNi42NGExLjc0OCAxLjc0OCAwIDAgMSAxLjc1IDBabS0xIDEuMjk4TDQuMjUxIDYuMzRsNy43NSA0LjQ3NCA3Ljc1LTQuNDc0LTcuNjI1LTQuNDAyYS4yNDguMjQ4IDAgMCAwLS4yNSAwWm0uODc1IDE5LjEyMyA3LjYyNS00LjQwMmEuMjUuMjUgMCAwIDAgLjEyNS0uMjE2VjcuNjM5bC03Ljc1IDQuNDc0Wk0zLjUwMSA3LjY0djguODAzYzAgLjA5LjA0OC4xNzIuMTI1LjIxNmw3LjYyNSA0LjQwMnYtOC45NDdaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICA8ZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sb3ItZmctZGVmYXVsdCBoNFwiPlBhY2thZ2VzPC9kaXY+XG4gICAgICAgIEhvc3QgYW5kIG1hbmFnZSBwYWNrYWdlc1xuICAgICAgPC9kaXY+XG5cbiAgICBcbjwvYT48L2xpPlxuXG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeSBkLWZsZXggZmxleC1pdGVtcy1jZW50ZXIgTGluay0taGFzLWRlc2NyaXB0aW9uIHBiLWxnLTNcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtsb2NhdGlvbiZxdW90OzomcXVvdDtuYXZiYXImcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O3NlY3VyaXR5JnF1b3Q7LCZxdW90O2NvbnRleHQmcXVvdDs6JnF1b3Q7cHJvZHVjdF9zdWJuYXYmcXVvdDssJnF1b3Q7dGFnJnF1b3Q7OiZxdW90O2xpbmsmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7c2VjdXJpdHlfbGlua19wcm9kdWN0X3N1Ym5hdl9uYXZiYXImcXVvdDt9XCIgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9mZWF0dXJlcy9zZWN1cml0eVwiPlxuICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIyNFwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tc2hpZWxkLWNoZWNrIGNvbG9yLWZnLXN1YnRsZSBtci0zXCI+XG4gICAgPHBhdGggZD1cIk0xNi41MyA5Ljc4YS43NS43NSAwIDAgMC0xLjA2LTEuMDZMMTEgMTMuMTlsLTEuOTctMS45N2EuNzUuNzUgMCAwIDAtMS4wNiAxLjA2bDIuNSAyLjVhLjc1Ljc1IDAgMCAwIDEuMDYgMGw1LTVaXCI+PC9wYXRoPjxwYXRoIGQ9XCJtMTIuNTQuNjM3IDguMjUgMi42NzVBMS43NSAxLjc1IDAgMCAxIDIyIDQuOTc2VjEwYzAgNi4xOS0zLjc3MSAxMC43MDQtOS40MDEgMTIuODNhMS43MDQgMS43MDQgMCAwIDEtMS4xOTggMEM1Ljc3IDIwLjcwNSAyIDE2LjE5IDIgMTBWNC45NzZjMC0uNzU4LjQ4OS0xLjQzIDEuMjEtMS42NjRMMTEuNDYuNjM3YTEuNzQ4IDEuNzQ4IDAgMCAxIDEuMDggMFptLS42MTcgMS40MjYtOC4yNSAyLjY3NmEuMjQ5LjI0OSAwIDAgMC0uMTczLjIzN1YxMGMwIDUuNDYgMy4yOCA5LjQ4MyA4LjQzIDExLjQyNmEuMTk5LjE5OSAwIDAgMCAuMTQgMEMxNy4yMiAxOS40ODMgMjAuNSAxNS40NjEgMjAuNSAxMFY0Ljk3NmEuMjUuMjUgMCAwIDAtLjE3My0uMjM3bC04LjI1LTIuNjc2YS4yNTMuMjUzIDAgMCAwLS4xNTQgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2xvci1mZy1kZWZhdWx0IGg0XCI+U2VjdXJpdHk8L2Rpdj5cbiAgICAgICAgRmluZCBhbmQgZml4IHZ1bG5lcmFiaWxpdGllc1xuICAgICAgPC9kaXY+XG5cbiAgICBcbjwvYT48L2xpPlxuXG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeSBkLWZsZXggZmxleC1pdGVtcy1jZW50ZXIgTGluay0taGFzLWRlc2NyaXB0aW9uIHBiLWxnLTNcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtsb2NhdGlvbiZxdW90OzomcXVvdDtuYXZiYXImcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NvZGVzcGFjZXMmcXVvdDssJnF1b3Q7Y29udGV4dCZxdW90OzomcXVvdDtwcm9kdWN0X3N1Ym5hdiZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7bGluayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDtjb2Rlc3BhY2VzX2xpbmtfcHJvZHVjdF9zdWJuYXZfbmF2YmFyJnF1b3Q7fVwiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vZmVhdHVyZXMvY29kZXNwYWNlc1wiPlxuICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIyNFwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tY29kZXNwYWNlcyBjb2xvci1mZy1zdWJ0bGUgbXItM1wiPlxuICAgIDxwYXRoIGQ9XCJNMy41IDMuNzVDMy41IDIuNzg0IDQuMjg0IDIgNS4yNSAyaDEzLjVjLjk2NiAwIDEuNzUuNzg0IDEuNzUgMS43NXY3LjVBMS43NSAxLjc1IDAgMCAxIDE4Ljc1IDEzSDUuMjVhMS43NSAxLjc1IDAgMCAxLTEuNzUtMS43NVptLTIgMTJjMC0uOTY2Ljc4NC0xLjc1IDEuNzUtMS43NWgxNy41Yy45NjYgMCAxLjc1Ljc4NCAxLjc1IDEuNzV2NGExLjc1IDEuNzUgMCAwIDEtMS43NSAxLjc1SDMuMjVhMS43NSAxLjc1IDAgMCAxLTEuNzUtMS43NVpNNS4yNSAzLjVhLjI1LjI1IDAgMCAwLS4yNS4yNXY3LjVjMCAuMTM4LjExMi4yNS4yNS4yNWgxMy41YS4yNS4yNSAwIDAgMCAuMjUtLjI1di03LjVhLjI1LjI1IDAgMCAwLS4yNS0uMjVabS0yIDEyYS4yNS4yNSAwIDAgMC0uMjUuMjV2NGMwIC4xMzguMTEyLjI1LjI1LjI1aDE3LjVhLjI1LjI1IDAgMCAwIC4yNS0uMjV2LTRhLjI1LjI1IDAgMCAwLS4yNS0uMjVaXCI+PC9wYXRoPjxwYXRoIGQ9XCJNMTAgMTcuNzVhLjc1Ljc1IDAgMCAxIC43NS0uNzVoNi41YS43NS43NSAwIDAgMSAwIDEuNWgtNi41YS43NS43NSAwIDAgMS0uNzUtLjc1Wm0tNCAwYS43NS43NSAwIDAgMSAuNzUtLjc1aC41YS43NS43NSAwIDAgMSAwIDEuNWgtLjVhLjc1Ljc1IDAgMCAxLS43NS0uNzVaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICA8ZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sb3ItZmctZGVmYXVsdCBoNFwiPkNvZGVzcGFjZXM8L2Rpdj5cbiAgICAgICAgSW5zdGFudCBkZXYgZW52aXJvbm1lbnRzXG4gICAgICA8L2Rpdj5cblxuICAgIFxuPC9hPjwvbGk+XG5cbiAgICAgICAgICAgICAgICA8bGk+XG4gIDxhIGNsYXNzPVwiSGVhZGVyTWVudS1kcm9wZG93bi1saW5rIGQtYmxvY2sgbm8tdW5kZXJsaW5lIHBvc2l0aW9uLXJlbGF0aXZlIHB5LTIgTGluay0tc2Vjb25kYXJ5IGQtZmxleCBmbGV4LWl0ZW1zLWNlbnRlciBMaW5rLS1oYXMtZGVzY3JpcHRpb24gcGItbGctM1wiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2xvY2F0aW9uJnF1b3Q7OiZxdW90O25hdmJhciZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Z2l0aHViX2NvcGlsb3QmcXVvdDssJnF1b3Q7Y29udGV4dCZxdW90OzomcXVvdDtwcm9kdWN0X3N1Ym5hdiZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7bGluayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDtnaXRodWJfY29waWxvdF9saW5rX3Byb2R1Y3Rfc3VibmF2X25hdmJhciZxdW90O31cIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL2ZlYXR1cmVzL2NvcGlsb3RcIj5cbiAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMjRcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWNvcGlsb3QgY29sb3ItZmctc3VidGxlIG1yLTNcIj5cbiAgICA8cGF0aCBkPVwiTTIzLjkyMiAxNi45OTJjLS44NjEgMS40OTUtNS44NTkgNS4wMjMtMTEuOTIyIDUuMDIzLTYuMDYzIDAtMTEuMDYxLTMuNTI4LTExLjkyMi01LjAyM0EuNjQxLjY0MSAwIDAgMSAwIDE2LjczNnYtMi44NjlhLjg0MS44NDEgMCAwIDEgLjA1My0uMjJjLjM3Mi0uOTM1IDEuMzQ3LTIuMjkyIDIuNjA1LTIuNjU2LjE2Ny0uNDI5LjQxNC0xLjA1NS42NDQtMS41MTdhMTAuMTk1IDEwLjE5NSAwIDAgMS0uMDUyLTEuMDg2YzAtMS4zMzEuMjgyLTIuNDk5IDEuMTMyLTMuMzY4LjM5Ny0uNDA2Ljg5LS43MTcgMS40NzQtLjk1MiAxLjM5OS0xLjEzNiAzLjM5Mi0yLjA5MyA2LjEyMi0yLjA5MyAyLjczMSAwIDQuNzY3Ljk1NyA2LjE2NiAyLjA5My41ODQuMjM1IDEuMDc3LjU0NiAxLjQ3NC45NTIuODUuODY5IDEuMTMyIDIuMDM3IDEuMTMyIDMuMzY4IDAgLjM2OC0uMDE0LjczMy0uMDUyIDEuMDg2LjIzLjQ2Mi40NzcgMS4wODguNjQ0IDEuNTE3IDEuMjU4LjM2NCAyLjIzMyAxLjcyMSAyLjYwNSAyLjY1NmEuODMyLjgzMiAwIDAgMSAuMDUzLjIydjIuODY5YS42NDEuNjQxIDAgMCAxLS4wNzguMjU2Wk0xMi4xNzIgMTFoLS4zNDRhNC4zMjMgNC4zMjMgMCAwIDEtLjM1NS41MDhDMTAuNzAzIDEyLjQ1NSA5LjU1NSAxMyA3Ljk2NSAxM2MtMS43MjUgMC0yLjk4OS0uMzU5LTMuNzgyLTEuMjU5YTIuMDA1IDIuMDA1IDAgMCAxLS4wODUtLjEwNEw0IDExLjc0MXY2LjU4NWMxLjQzNS43NzkgNC41MTQgMi4xNzkgOCAyLjE3OSAzLjQ4NiAwIDYuNTY1LTEuNCA4LTIuMTc5di02LjU4NWwtLjA5OC0uMTA0cy0uMDMzLjA0NS0uMDg1LjEwNGMtLjc5My45LTIuMDU3IDEuMjU5LTMuNzgyIDEuMjU5LTEuNTkgMC0yLjczOC0uNTQ1LTMuNTA4LTEuNDkyYTQuMzIzIDQuMzIzIDAgMCAxLS4zNTUtLjUwOGgtLjAxNi4wMTZabS42NDEtMi45MzVjLjEzNiAxLjA1Ny40MDMgMS45MTMuODc4IDIuNDk3LjQ0Mi41NDQgMS4xMzQuOTM4IDIuMzQ0LjkzOCAxLjU3MyAwIDIuMjkyLS4zMzcgMi42NTctLjc1MS4zODQtLjQzNS41NTgtMS4xNS41NTgtMi4zNjEgMC0xLjE0LS4yNDMtMS44NDctLjcwNS0yLjMxOS0uNDc3LS40ODgtMS4zMTktLjg2Mi0yLjgyNC0xLjAyNS0xLjQ4Ny0uMTYxLTIuMTkyLjEzOC0yLjUzMy41MjktLjI2OS4zMDctLjQzNy44MDgtLjQzOCAxLjU3OHYuMDIxYzAgLjI2NS4wMjEuNTYyLjA2My44OTNabS0xLjYyNiAwYy4wNDItLjMzMS4wNjMtLjYyOC4wNjMtLjg5NHYtLjAyYy0uMDAxLS43Ny0uMTY5LTEuMjcxLS40MzgtMS41NzgtLjM0MS0uMzkxLTEuMDQ2LS42OS0yLjUzMy0uNTI5LTEuNTA1LjE2My0yLjM0Ny41MzctMi44MjQgMS4wMjUtLjQ2Mi40NzItLjcwNSAxLjE3OS0uNzA1IDIuMzE5IDAgMS4yMTEuMTc1IDEuOTI2LjU1OCAyLjM2MS4zNjUuNDE0IDEuMDg0Ljc1MSAyLjY1Ny43NTEgMS4yMSAwIDEuOTAyLS4zOTQgMi4zNDQtLjkzOC40NzUtLjU4NC43NDItMS40NC44NzgtMi40OTdaXCI+PC9wYXRoPjxwYXRoIGQ9XCJNMTQuNSAxNC4yNWExIDEgMCAwIDEgMSAxdjJhMSAxIDAgMCAxLTIgMHYtMmExIDEgMCAwIDEgMS0xWm0tNSAwYTEgMSAwIDAgMSAxIDF2MmExIDEgMCAwIDEtMiAwdi0yYTEgMSAwIDAgMSAxLTFaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICA8ZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sb3ItZmctZGVmYXVsdCBoNFwiPkdpdEh1YiBDb3BpbG90PC9kaXY+XG4gICAgICAgIFdyaXRlIGJldHRlciBjb2RlIHdpdGggQUlcbiAgICAgIDwvZGl2PlxuXG4gICAgXG48L2E+PC9saT5cblxuICAgICAgICAgICAgICAgIDxsaT5cbiAgPGEgY2xhc3M9XCJIZWFkZXJNZW51LWRyb3Bkb3duLWxpbmsgZC1ibG9jayBuby11bmRlcmxpbmUgcG9zaXRpb24tcmVsYXRpdmUgcHktMiBMaW5rLS1zZWNvbmRhcnkgZC1mbGV4IGZsZXgtaXRlbXMtY2VudGVyIExpbmstLWhhcy1kZXNjcmlwdGlvbiBwYi1sZy0zXCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7bG9jYXRpb24mcXVvdDs6JnF1b3Q7bmF2YmFyJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjb2RlX3JldmlldyZxdW90OywmcXVvdDtjb250ZXh0JnF1b3Q7OiZxdW90O3Byb2R1Y3Rfc3VibmF2JnF1b3Q7LCZxdW90O3RhZyZxdW90OzomcXVvdDtsaW5rJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O2NvZGVfcmV2aWV3X2xpbmtfcHJvZHVjdF9zdWJuYXZfbmF2YmFyJnF1b3Q7fVwiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vZmVhdHVyZXMvY29kZS1yZXZpZXdcIj5cbiAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMjRcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWNvZGUtcmV2aWV3IGNvbG9yLWZnLXN1YnRsZSBtci0zXCI+XG4gICAgPHBhdGggZD1cIk0xMC4zIDYuNzRhLjc1Ljc1IDAgMCAxLS4wNCAxLjA2bC0yLjkwOCAyLjcgMi45MDggMi43YS43NS43NSAwIDEgMS0xLjAyIDEuMWwtMy41LTMuMjVhLjc1Ljc1IDAgMCAxIDAtMS4xbDMuNS0zLjI1YS43NS43NSAwIDAgMSAxLjA2LjA0Wm0zLjQ0IDEuMDZhLjc1Ljc1IDAgMSAxIDEuMDItMS4xbDMuNSAzLjI1YS43NS43NSAwIDAgMSAwIDEuMWwtMy41IDMuMjVhLjc1Ljc1IDAgMSAxLTEuMDItMS4xbDIuOTA4LTIuNy0yLjkwOC0yLjdaXCI+PC9wYXRoPjxwYXRoIGQ9XCJNMS41IDQuMjVjMC0uOTY2Ljc4NC0xLjc1IDEuNzUtMS43NWgxNy41Yy45NjYgMCAxLjc1Ljc4NCAxLjc1IDEuNzV2MTIuNWExLjc1IDEuNzUgMCAwIDEtMS43NSAxLjc1aC05LjY5bC0zLjU3MyAzLjU3M0ExLjQ1OCAxLjQ1OCAwIDAgMSA1IDIxLjA0M1YxOC41SDMuMjVhMS43NSAxLjc1IDAgMCAxLTEuNzUtMS43NVpNMy4yNSA0YS4yNS4yNSAwIDAgMC0uMjUuMjV2MTIuNWMwIC4xMzguMTEyLjI1LjI1LjI1aDIuNWEuNzUuNzUgMCAwIDEgLjc1Ljc1djMuMTlsMy43Mi0zLjcyYS43NDkuNzQ5IDAgMCAxIC41My0uMjJoMTBhLjI1LjI1IDAgMCAwIC4yNS0uMjVWNC4yNWEuMjUuMjUgMCAwIDAtLjI1LS4yNVpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2xvci1mZy1kZWZhdWx0IGg0XCI+Q29kZSByZXZpZXc8L2Rpdj5cbiAgICAgICAgTWFuYWdlIGNvZGUgY2hhbmdlc1xuICAgICAgPC9kaXY+XG5cbiAgICBcbjwvYT48L2xpPlxuXG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeSBkLWZsZXggZmxleC1pdGVtcy1jZW50ZXIgTGluay0taGFzLWRlc2NyaXB0aW9uIHBiLWxnLTNcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtsb2NhdGlvbiZxdW90OzomcXVvdDtuYXZiYXImcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2lzc3VlcyZxdW90OywmcXVvdDtjb250ZXh0JnF1b3Q7OiZxdW90O3Byb2R1Y3Rfc3VibmF2JnF1b3Q7LCZxdW90O3RhZyZxdW90OzomcXVvdDtsaW5rJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O2lzc3Vlc19saW5rX3Byb2R1Y3Rfc3VibmF2X25hdmJhciZxdW90O31cIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL2ZlYXR1cmVzL2lzc3Vlc1wiPlxuICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIyNFwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24taXNzdWUtb3BlbmVkIGNvbG9yLWZnLXN1YnRsZSBtci0zXCI+XG4gICAgPHBhdGggZD1cIk0xMiAxYzYuMDc1IDAgMTEgNC45MjUgMTEgMTFzLTQuOTI1IDExLTExIDExUzEgMTguMDc1IDEgMTIgNS45MjUgMSAxMiAxWk0yLjUgMTJhOS41IDkuNSAwIDAgMCA5LjUgOS41IDkuNSA5LjUgMCAwIDAgOS41LTkuNUE5LjUgOS41IDAgMCAwIDEyIDIuNSA5LjUgOS41IDAgMCAwIDIuNSAxMlptOS41IDJhMiAyIDAgMSAxLS4wMDEtMy45OTlBMiAyIDAgMCAxIDEyIDE0WlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgPGRpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbG9yLWZnLWRlZmF1bHQgaDRcIj5Jc3N1ZXM8L2Rpdj5cbiAgICAgICAgUGxhbiBhbmQgdHJhY2sgd29ya1xuICAgICAgPC9kaXY+XG5cbiAgICBcbjwvYT48L2xpPlxuXG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeSBkLWZsZXggZmxleC1pdGVtcy1jZW50ZXIgTGluay0taGFzLWRlc2NyaXB0aW9uXCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7bG9jYXRpb24mcXVvdDs6JnF1b3Q7bmF2YmFyJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtkaXNjdXNzaW9ucyZxdW90OywmcXVvdDtjb250ZXh0JnF1b3Q7OiZxdW90O3Byb2R1Y3Rfc3VibmF2JnF1b3Q7LCZxdW90O3RhZyZxdW90OzomcXVvdDtsaW5rJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O2Rpc2N1c3Npb25zX2xpbmtfcHJvZHVjdF9zdWJuYXZfbmF2YmFyJnF1b3Q7fVwiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vZmVhdHVyZXMvZGlzY3Vzc2lvbnNcIj5cbiAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMjRcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWNvbW1lbnQtZGlzY3Vzc2lvbiBjb2xvci1mZy1zdWJ0bGUgbXItM1wiPlxuICAgIDxwYXRoIGQ9XCJNMS43NSAxaDEyLjVjLjk2NiAwIDEuNzUuNzg0IDEuNzUgMS43NXY5LjVBMS43NSAxLjc1IDAgMCAxIDE0LjI1IDE0SDguMDYxbC0yLjU3NCAyLjU3M0ExLjQ1OCAxLjQ1OCAwIDAgMSAzIDE1LjU0M1YxNEgxLjc1QTEuNzUgMS43NSAwIDAgMSAwIDEyLjI1di05LjVDMCAxLjc4NC43ODQgMSAxLjc1IDFaTTEuNSAyLjc1djkuNWMwIC4xMzguMTEyLjI1LjI1LjI1aDJhLjc1Ljc1IDAgMCAxIC43NS43NXYyLjE5bDIuNzItMi43MmEuNzQ5Ljc0OSAwIDAgMSAuNTMtLjIyaDYuNWEuMjUuMjUgMCAwIDAgLjI1LS4yNXYtOS41YS4yNS4yNSAwIDAgMC0uMjUtLjI1SDEuNzVhLjI1LjI1IDAgMCAwLS4yNS4yNVpcIj48L3BhdGg+PHBhdGggZD1cIk0yMi41IDguNzVhLjI1LjI1IDAgMCAwLS4yNS0uMjVoLTMuNWEuNzUuNzUgMCAwIDEgMC0xLjVoMy41Yy45NjYgMCAxLjc1Ljc4NCAxLjc1IDEuNzV2OS41QTEuNzUgMS43NSAwIDAgMSAyMi4yNSAyMEgyMXYxLjU0M2ExLjQ1NyAxLjQ1NyAwIDAgMS0yLjQ4NyAxLjAzTDE1LjkzOSAyMEgxMC43NUExLjc1IDEuNzUgMCAwIDEgOSAxOC4yNXYtMS40NjVhLjc1Ljc1IDAgMCAxIDEuNSAwdjEuNDY1YzAgLjEzOC4xMTIuMjUuMjUuMjVoNS41YS43NS43NSAwIDAgMSAuNTMuMjJsMi43MiAyLjcydi0yLjE5YS43NS43NSAwIDAgMSAuNzUtLjc1aDJhLjI1LjI1IDAgMCAwIC4yNS0uMjV2LTkuNVpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2xvci1mZy1kZWZhdWx0IGg0XCI+RGlzY3Vzc2lvbnM8L2Rpdj5cbiAgICAgICAgQ29sbGFib3JhdGUgb3V0c2lkZSBvZiBjb2RlXG4gICAgICA8L2Rpdj5cblxuICAgIFxuPC9hPjwvbGk+XG5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInB4LWxnLTRcIj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJkLWJsb2NrIGg0IGNvbG9yLWZnLWRlZmF1bHQgbXktMVwiIGlkPVwicHJvZHVjdC1leHBsb3JlLWhlYWRpbmdcIj5FeHBsb3JlPC9zcGFuPlxuICAgICAgICAgICAgPHVsIGNsYXNzPVwibGlzdC1zdHlsZS1ub25lIGY1XCIgYXJpYS1sYWJlbGxlZGJ5PVwicHJvZHVjdC1leHBsb3JlLWhlYWRpbmdcIj5cbiAgICAgICAgICAgICAgICA8bGk+XG4gIDxhIGNsYXNzPVwiSGVhZGVyTWVudS1kcm9wZG93bi1saW5rIGQtYmxvY2sgbm8tdW5kZXJsaW5lIHBvc2l0aW9uLXJlbGF0aXZlIHB5LTIgTGluay0tc2Vjb25kYXJ5XCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7bG9jYXRpb24mcXVvdDs6JnF1b3Q7bmF2YmFyJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDthbGxfZmVhdHVyZXMmcXVvdDssJnF1b3Q7Y29udGV4dCZxdW90OzomcXVvdDtwcm9kdWN0X3N1Ym5hdiZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7bGluayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDthbGxfZmVhdHVyZXNfbGlua19wcm9kdWN0X3N1Ym5hdl9uYXZiYXImcXVvdDt9XCIgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9mZWF0dXJlc1wiPlxuICAgICAgQWxsIGZlYXR1cmVzXG5cbiAgICBcbjwvYT48L2xpPlxuXG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeSBMaW5rLS1leHRlcm5hbFwiIHRhcmdldD1cIl9ibGFua1wiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2xvY2F0aW9uJnF1b3Q7OiZxdW90O25hdmJhciZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7ZG9jdW1lbnRhdGlvbiZxdW90OywmcXVvdDtjb250ZXh0JnF1b3Q7OiZxdW90O3Byb2R1Y3Rfc3VibmF2JnF1b3Q7LCZxdW90O3RhZyZxdW90OzomcXVvdDtsaW5rJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O2RvY3VtZW50YXRpb25fbGlua19wcm9kdWN0X3N1Ym5hdl9uYXZiYXImcXVvdDt9XCIgaHJlZj1cImh0dHBzOi8vZG9jcy5naXRodWIuY29tXCI+XG4gICAgICBEb2N1bWVudGF0aW9uXG5cbiAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1saW5rLWV4dGVybmFsIEhlYWRlck1lbnUtZXh0ZXJuYWwtaWNvbiBjb2xvci1mZy1zdWJ0bGVcIj5cbiAgICA8cGF0aCBkPVwiTTMuNzUgMmgzLjVhLjc1Ljc1IDAgMCAxIDAgMS41aC0zLjVhLjI1LjI1IDAgMCAwLS4yNS4yNXY4LjVjMCAuMTM4LjExMi4yNS4yNS4yNWg4LjVhLjI1LjI1IDAgMCAwIC4yNS0uMjV2LTMuNWEuNzUuNzUgMCAwIDEgMS41IDB2My41QTEuNzUgMS43NSAwIDAgMSAxMi4yNSAxNGgtOC41QTEuNzUgMS43NSAwIDAgMSAyIDEyLjI1di04LjVDMiAyLjc4NCAyLjc4NCAyIDMuNzUgMlptNi44NTQtMWg0LjE0NmEuMjUuMjUgMCAwIDEgLjI1LjI1djQuMTQ2YS4yNS4yNSAwIDAgMS0uNDI3LjE3N0wxMy4wMyA0LjAzIDkuMjggNy43OGEuNzUxLjc1MSAwIDAgMS0xLjA0Mi0uMDE4Ljc1MS43NTEgMCAwIDEtLjAxOC0xLjA0MmwzLjc1LTMuNzUtMS41NDMtMS41NDNBLjI1LjI1IDAgMCAxIDEwLjYwNCAxWlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC9hPjwvbGk+XG5cbiAgICAgICAgICAgICAgICA8bGk+XG4gIDxhIGNsYXNzPVwiSGVhZGVyTWVudS1kcm9wZG93bi1saW5rIGQtYmxvY2sgbm8tdW5kZXJsaW5lIHBvc2l0aW9uLXJlbGF0aXZlIHB5LTIgTGluay0tc2Vjb25kYXJ5IExpbmstLWV4dGVybmFsXCIgdGFyZ2V0PVwiX2JsYW5rXCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7bG9jYXRpb24mcXVvdDs6JnF1b3Q7bmF2YmFyJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtnaXRodWJfc2tpbGxzJnF1b3Q7LCZxdW90O2NvbnRleHQmcXVvdDs6JnF1b3Q7cHJvZHVjdF9zdWJuYXYmcXVvdDssJnF1b3Q7dGFnJnF1b3Q7OiZxdW90O2xpbmsmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7Z2l0aHViX3NraWxsc19saW5rX3Byb2R1Y3Rfc3VibmF2X25hdmJhciZxdW90O31cIiBocmVmPVwiaHR0cHM6Ly9za2lsbHMuZ2l0aHViLmNvbVwiPlxuICAgICAgR2l0SHViIFNraWxsc1xuXG4gICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tbGluay1leHRlcm5hbCBIZWFkZXJNZW51LWV4dGVybmFsLWljb24gY29sb3ItZmctc3VidGxlXCI+XG4gICAgPHBhdGggZD1cIk0zLjc1IDJoMy41YS43NS43NSAwIDAgMSAwIDEuNWgtMy41YS4yNS4yNSAwIDAgMC0uMjUuMjV2OC41YzAgLjEzOC4xMTIuMjUuMjUuMjVoOC41YS4yNS4yNSAwIDAgMCAuMjUtLjI1di0zLjVhLjc1Ljc1IDAgMCAxIDEuNSAwdjMuNUExLjc1IDEuNzUgMCAwIDEgMTIuMjUgMTRoLTguNUExLjc1IDEuNzUgMCAwIDEgMiAxMi4yNXYtOC41QzIgMi43ODQgMi43ODQgMiAzLjc1IDJabTYuODU0LTFoNC4xNDZhLjI1LjI1IDAgMCAxIC4yNS4yNXY0LjE0NmEuMjUuMjUgMCAwIDEtLjQyNy4xNzdMMTMuMDMgNC4wMyA5LjI4IDcuNzhhLjc1MS43NTEgMCAwIDEtMS4wNDItLjAxOC43NTEuNzUxIDAgMCAxLS4wMTgtMS4wNDJsMy43NS0zLjc1LTEuNTQzLTEuNTQzQS4yNS4yNSAwIDAgMSAxMC42MDQgMVpcIj48L3BhdGg+XG48L3N2Zz5cbjwvYT48L2xpPlxuXG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeSBMaW5rLS1leHRlcm5hbFwiIHRhcmdldD1cIl9ibGFua1wiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2xvY2F0aW9uJnF1b3Q7OiZxdW90O25hdmJhciZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7YmxvZyZxdW90OywmcXVvdDtjb250ZXh0JnF1b3Q7OiZxdW90O3Byb2R1Y3Rfc3VibmF2JnF1b3Q7LCZxdW90O3RhZyZxdW90OzomcXVvdDtsaW5rJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O2Jsb2dfbGlua19wcm9kdWN0X3N1Ym5hdl9uYXZiYXImcXVvdDt9XCIgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmJsb2dcIj5cbiAgICAgIEJsb2dcblxuICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWxpbmstZXh0ZXJuYWwgSGVhZGVyTWVudS1leHRlcm5hbC1pY29uIGNvbG9yLWZnLXN1YnRsZVwiPlxuICAgIDxwYXRoIGQ9XCJNMy43NSAyaDMuNWEuNzUuNzUgMCAwIDEgMCAxLjVoLTMuNWEuMjUuMjUgMCAwIDAtLjI1LjI1djguNWMwIC4xMzguMTEyLjI1LjI1LjI1aDguNWEuMjUuMjUgMCAwIDAgLjI1LS4yNXYtMy41YS43NS43NSAwIDAgMSAxLjUgMHYzLjVBMS43NSAxLjc1IDAgMCAxIDEyLjI1IDE0aC04LjVBMS43NSAxLjc1IDAgMCAxIDIgMTIuMjV2LTguNUMyIDIuNzg0IDIuNzg0IDIgMy43NSAyWm02Ljg1NC0xaDQuMTQ2YS4yNS4yNSAwIDAgMSAuMjUuMjV2NC4xNDZhLjI1LjI1IDAgMCAxLS40MjcuMTc3TDEzLjAzIDQuMDMgOS4yOCA3Ljc4YS43NTEuNzUxIDAgMCAxLTEuMDQyLS4wMTguNzUxLjc1MSAwIDAgMS0uMDE4LTEuMDQybDMuNzUtMy43NS0xLjU0My0xLjU0M0EuMjUuMjUgMCAwIDEgMTAuNjA0IDFaXCI+PC9wYXRoPlxuPC9zdmc+XG48L2E+PC9saT5cblxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuPC9saT5cblxuXG4gICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwiSGVhZGVyTWVudS1pdGVtIHBvc2l0aW9uLXJlbGF0aXZlIGZsZXgtd3JhcCBmbGV4LWp1c3RpZnktYmV0d2VlbiBmbGV4LWl0ZW1zLWNlbnRlciBkLWJsb2NrIGQtbGctZmxleCBmbGV4LWxnLW5vd3JhcCBmbGV4LWxnLWl0ZW1zLWNlbnRlciBqcy1kZXRhaWxzLWNvbnRhaW5lciBqcy1oZWFkZXItbWVudS1pdGVtXCI+XG4gICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cIkhlYWRlck1lbnUtbGluayBib3JkZXItMCB3aWR0aC1mdWxsIHdpZHRoLWxnLWF1dG8gcHgtMCBweC1sZy0yIHB5LWxnLTIgbm8td3JhcCBkLWZsZXggZmxleC1pdGVtcy1jZW50ZXIgZmxleC1qdXN0aWZ5LWJldHdlZW4ganMtZGV0YWlscy10YXJnZXRcIiBhcmlhLWV4cGFuZGVkPVwiZmFsc2VcIj5cbiAgICAgICAgU29sdXRpb25zXG4gICAgICAgIDxzdmcgb3BhY2l0eT1cIjAuNVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1jaGV2cm9uLWRvd24gSGVhZGVyTWVudS1pY29uIG1sLTFcIj5cbiAgICA8cGF0aCBkPVwiTTEyLjc4IDUuMjJhLjc0OS43NDkgMCAwIDEgMCAxLjA2bC00LjI1IDQuMjVhLjc0OS43NDkgMCAwIDEtMS4wNiAwTDMuMjIgNi4yOGEuNzQ5Ljc0OSAwIDEgMSAxLjA2LTEuMDZMOCA4LjkzOWwzLjcyLTMuNzE5YS43NDkuNzQ5IDAgMCAxIDEuMDYgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgIDwvYnV0dG9uPlxuICAgICAgPGRpdiBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24gZHJvcGRvd24tbWVudSByb3VuZGVkIG0tMCBwLTAgcHktMiBweS1sZy00IHBvc2l0aW9uLXJlbGF0aXZlIHBvc2l0aW9uLWxnLWFic29sdXRlIGxlZnQtMCBsZWZ0LWxnLW4zIHB4LWxnLTRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiYm9yZGVyLWJvdHRvbSBwYi0zIG1iLTNcIj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJkLWJsb2NrIGg0IGNvbG9yLWZnLWRlZmF1bHQgbXktMVwiIGlkPVwic29sdXRpb25zLWJ5LXNpemUtaGVhZGluZ1wiPkJ5IHNpemU8L3NwYW4+XG4gICAgICAgICAgICA8dWwgY2xhc3M9XCJsaXN0LXN0eWxlLW5vbmUgZjVcIiBhcmlhLWxhYmVsbGVkYnk9XCJzb2x1dGlvbnMtYnktc2l6ZS1oZWFkaW5nXCI+XG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeVwiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2xvY2F0aW9uJnF1b3Q7OiZxdW90O25hdmJhciZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7ZW50ZXJwcmlzZSZxdW90OywmcXVvdDtjb250ZXh0JnF1b3Q7OiZxdW90O3NvbHV0aW9uc19zdWJuYXYmcXVvdDssJnF1b3Q7dGFnJnF1b3Q7OiZxdW90O2xpbmsmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7ZW50ZXJwcmlzZV9saW5rX3NvbHV0aW9uc19zdWJuYXZfbmF2YmFyJnF1b3Q7fVwiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vZW50ZXJwcmlzZVwiPlxuICAgICAgRW50ZXJwcmlzZVxuXG4gICAgXG48L2E+PC9saT5cblxuICAgICAgICAgICAgICAgIDxsaT5cbiAgPGEgY2xhc3M9XCJIZWFkZXJNZW51LWRyb3Bkb3duLWxpbmsgZC1ibG9jayBuby11bmRlcmxpbmUgcG9zaXRpb24tcmVsYXRpdmUgcHktMiBMaW5rLS1zZWNvbmRhcnlcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtsb2NhdGlvbiZxdW90OzomcXVvdDtuYXZiYXImcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O3RlYW1zJnF1b3Q7LCZxdW90O2NvbnRleHQmcXVvdDs6JnF1b3Q7c29sdXRpb25zX3N1Ym5hdiZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7bGluayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0ZWFtc19saW5rX3NvbHV0aW9uc19zdWJuYXZfbmF2YmFyJnF1b3Q7fVwiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vdGVhbVwiPlxuICAgICAgVGVhbXNcblxuICAgIFxuPC9hPjwvbGk+XG5cbiAgICAgICAgICAgICAgICA8bGk+XG4gIDxhIGNsYXNzPVwiSGVhZGVyTWVudS1kcm9wZG93bi1saW5rIGQtYmxvY2sgbm8tdW5kZXJsaW5lIHBvc2l0aW9uLXJlbGF0aXZlIHB5LTIgTGluay0tc2Vjb25kYXJ5XCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7bG9jYXRpb24mcXVvdDs6JnF1b3Q7bmF2YmFyJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtzdGFydHVwcyZxdW90OywmcXVvdDtjb250ZXh0JnF1b3Q7OiZxdW90O3NvbHV0aW9uc19zdWJuYXYmcXVvdDssJnF1b3Q7dGFnJnF1b3Q7OiZxdW90O2xpbmsmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7c3RhcnR1cHNfbGlua19zb2x1dGlvbnNfc3VibmF2X25hdmJhciZxdW90O31cIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL2VudGVycHJpc2Uvc3RhcnR1cHNcIj5cbiAgICAgIFN0YXJ0dXBzXG5cbiAgICBcbjwvYT48L2xpPlxuXG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJib3JkZXItYm90dG9tIHBiLTMgbWItM1wiPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImQtYmxvY2sgaDQgY29sb3ItZmctZGVmYXVsdCBteS0xXCIgaWQ9XCJzb2x1dGlvbnMtYnktaW5kdXN0cnktaGVhZGluZ1wiPkJ5IGluZHVzdHJ5PC9zcGFuPlxuICAgICAgICAgICAgPHVsIGNsYXNzPVwibGlzdC1zdHlsZS1ub25lIGY1XCIgYXJpYS1sYWJlbGxlZGJ5PVwic29sdXRpb25zLWJ5LWluZHVzdHJ5LWhlYWRpbmdcIj5cbiAgICAgICAgICAgICAgICA8bGk+XG4gIDxhIGNsYXNzPVwiSGVhZGVyTWVudS1kcm9wZG93bi1saW5rIGQtYmxvY2sgbm8tdW5kZXJsaW5lIHBvc2l0aW9uLXJlbGF0aXZlIHB5LTIgTGluay0tc2Vjb25kYXJ5XCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7bG9jYXRpb24mcXVvdDs6JnF1b3Q7bmF2YmFyJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtoZWFsdGhjYXJlJnF1b3Q7LCZxdW90O2NvbnRleHQmcXVvdDs6JnF1b3Q7c29sdXRpb25zX3N1Ym5hdiZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7bGluayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDtoZWFsdGhjYXJlX2xpbmtfc29sdXRpb25zX3N1Ym5hdl9uYXZiYXImcXVvdDt9XCIgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9zb2x1dGlvbnMvaW5kdXN0cmllcy9oZWFsdGhjYXJlXCI+XG4gICAgICBIZWFsdGhjYXJlXG5cbiAgICBcbjwvYT48L2xpPlxuXG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeVwiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2xvY2F0aW9uJnF1b3Q7OiZxdW90O25hdmJhciZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7ZmluYW5jaWFsX3NlcnZpY2VzJnF1b3Q7LCZxdW90O2NvbnRleHQmcXVvdDs6JnF1b3Q7c29sdXRpb25zX3N1Ym5hdiZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7bGluayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDtmaW5hbmNpYWxfc2VydmljZXNfbGlua19zb2x1dGlvbnNfc3VibmF2X25hdmJhciZxdW90O31cIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL3NvbHV0aW9ucy9pbmR1c3RyaWVzL2ZpbmFuY2lhbC1zZXJ2aWNlc1wiPlxuICAgICAgRmluYW5jaWFsIHNlcnZpY2VzXG5cbiAgICBcbjwvYT48L2xpPlxuXG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeVwiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2xvY2F0aW9uJnF1b3Q7OiZxdW90O25hdmJhciZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7bWFudWZhY3R1cmluZyZxdW90OywmcXVvdDtjb250ZXh0JnF1b3Q7OiZxdW90O3NvbHV0aW9uc19zdWJuYXYmcXVvdDssJnF1b3Q7dGFnJnF1b3Q7OiZxdW90O2xpbmsmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7bWFudWZhY3R1cmluZ19saW5rX3NvbHV0aW9uc19zdWJuYXZfbmF2YmFyJnF1b3Q7fVwiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vc29sdXRpb25zL2luZHVzdHJpZXMvbWFudWZhY3R1cmluZ1wiPlxuICAgICAgTWFudWZhY3R1cmluZ1xuXG4gICAgXG48L2E+PC9saT5cblxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiXCI+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZC1ibG9jayBoNCBjb2xvci1mZy1kZWZhdWx0IG15LTFcIiBpZD1cInNvbHV0aW9ucy1ieS11c2UtY2FzZS1oZWFkaW5nXCI+QnkgdXNlIGNhc2U8L3NwYW4+XG4gICAgICAgICAgICA8dWwgY2xhc3M9XCJsaXN0LXN0eWxlLW5vbmUgZjVcIiBhcmlhLWxhYmVsbGVkYnk9XCJzb2x1dGlvbnMtYnktdXNlLWNhc2UtaGVhZGluZ1wiPlxuICAgICAgICAgICAgICAgIDxsaT5cbiAgPGEgY2xhc3M9XCJIZWFkZXJNZW51LWRyb3Bkb3duLWxpbmsgZC1ibG9jayBuby11bmRlcmxpbmUgcG9zaXRpb24tcmVsYXRpdmUgcHktMiBMaW5rLS1zZWNvbmRhcnlcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtsb2NhdGlvbiZxdW90OzomcXVvdDtuYXZiYXImcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NpX2NkX2FtcF9hdXRvbWF0aW9uJnF1b3Q7LCZxdW90O2NvbnRleHQmcXVvdDs6JnF1b3Q7c29sdXRpb25zX3N1Ym5hdiZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7bGluayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDtjaV9jZF9hbXBfYXV0b21hdGlvbl9saW5rX3NvbHV0aW9uc19zdWJuYXZfbmF2YmFyJnF1b3Q7fVwiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vc29sdXRpb25zL2NpLWNkXCI+XG4gICAgICBDSS9DRCAmYW1wOyBBdXRvbWF0aW9uXG5cbiAgICBcbjwvYT48L2xpPlxuXG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeVwiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2xvY2F0aW9uJnF1b3Q7OiZxdW90O25hdmJhciZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7ZGV2b3BzJnF1b3Q7LCZxdW90O2NvbnRleHQmcXVvdDs6JnF1b3Q7c29sdXRpb25zX3N1Ym5hdiZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7bGluayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDtkZXZvcHNfbGlua19zb2x1dGlvbnNfc3VibmF2X25hdmJhciZxdW90O31cIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL3NvbHV0aW9ucy9kZXZvcHNcIj5cbiAgICAgIERldk9wc1xuXG4gICAgXG48L2E+PC9saT5cblxuICAgICAgICAgICAgICAgIDxsaT5cbiAgPGEgY2xhc3M9XCJIZWFkZXJNZW51LWRyb3Bkb3duLWxpbmsgZC1ibG9jayBuby11bmRlcmxpbmUgcG9zaXRpb24tcmVsYXRpdmUgcHktMiBMaW5rLS1zZWNvbmRhcnlcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtsb2NhdGlvbiZxdW90OzomcXVvdDtuYXZiYXImcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2RldnNlY29wcyZxdW90OywmcXVvdDtjb250ZXh0JnF1b3Q7OiZxdW90O3NvbHV0aW9uc19zdWJuYXYmcXVvdDssJnF1b3Q7dGFnJnF1b3Q7OiZxdW90O2xpbmsmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7ZGV2c2Vjb3BzX2xpbmtfc29sdXRpb25zX3N1Ym5hdl9uYXZiYXImcXVvdDt9XCIgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9zb2x1dGlvbnMvZGV2c2Vjb3BzXCI+XG4gICAgICBEZXZTZWNPcHNcblxuICAgIFxuPC9hPjwvbGk+XG5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbjwvbGk+XG5cbiAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cIkhlYWRlck1lbnUtaXRlbSBwb3NpdGlvbi1yZWxhdGl2ZSBmbGV4LXdyYXAgZmxleC1qdXN0aWZ5LWJldHdlZW4gZmxleC1pdGVtcy1jZW50ZXIgZC1ibG9jayBkLWxnLWZsZXggZmxleC1sZy1ub3dyYXAgZmxleC1sZy1pdGVtcy1jZW50ZXIganMtZGV0YWlscy1jb250YWluZXIganMtaGVhZGVyLW1lbnUtaXRlbVwiPlxuICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJIZWFkZXJNZW51LWxpbmsgYm9yZGVyLTAgd2lkdGgtZnVsbCB3aWR0aC1sZy1hdXRvIHB4LTAgcHgtbGctMiBweS1sZy0yIG5vLXdyYXAgZC1mbGV4IGZsZXgtaXRlbXMtY2VudGVyIGZsZXgtanVzdGlmeS1iZXR3ZWVuIGpzLWRldGFpbHMtdGFyZ2V0XCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCI+XG4gICAgICAgIFJlc291cmNlc1xuICAgICAgICA8c3ZnIG9wYWNpdHk9XCIwLjVcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tY2hldnJvbi1kb3duIEhlYWRlck1lbnUtaWNvbiBtbC0xXCI+XG4gICAgPHBhdGggZD1cIk0xMi43OCA1LjIyYS43NDkuNzQ5IDAgMCAxIDAgMS4wNmwtNC4yNSA0LjI1YS43NDkuNzQ5IDAgMCAxLTEuMDYgMEwzLjIyIDYuMjhhLjc0OS43NDkgMCAxIDEgMS4wNi0xLjA2TDggOC45MzlsMy43Mi0zLjcxOWEuNzQ5Ljc0OSAwIDAgMSAxLjA2IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICA8L2J1dHRvbj5cbiAgICAgIDxkaXYgY2xhc3M9XCJIZWFkZXJNZW51LWRyb3Bkb3duIGRyb3Bkb3duLW1lbnUgcm91bmRlZCBtLTAgcC0wIHB5LTIgcHktbGctNCBwb3NpdGlvbi1yZWxhdGl2ZSBwb3NpdGlvbi1sZy1hYnNvbHV0ZSBsZWZ0LTAgbGVmdC1sZy1uMyBkLWxnLWZsZXggZHJvcGRvd24tbWVudS13aWRlXCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInB4LWxnLTQgYm9yZGVyLWxnLXJpZ2h0IG1iLTQgbWItbGctMCBwci1sZy03XCI+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZC1ibG9jayBoNCBjb2xvci1mZy1kZWZhdWx0IG15LTFcIiBpZD1cInJlc291cmNlcy10b3BpY3MtaGVhZGluZ1wiPlRvcGljczwvc3Bhbj5cbiAgICAgICAgICAgIDx1bCBjbGFzcz1cImxpc3Qtc3R5bGUtbm9uZSBmNVwiIGFyaWEtbGFiZWxsZWRieT1cInJlc291cmNlcy10b3BpY3MtaGVhZGluZ1wiPlxuICAgICAgICAgICAgICAgIDxsaT5cbiAgPGEgY2xhc3M9XCJIZWFkZXJNZW51LWRyb3Bkb3duLWxpbmsgZC1ibG9jayBuby11bmRlcmxpbmUgcG9zaXRpb24tcmVsYXRpdmUgcHktMiBMaW5rLS1zZWNvbmRhcnlcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtsb2NhdGlvbiZxdW90OzomcXVvdDtuYXZiYXImcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2FpJnF1b3Q7LCZxdW90O2NvbnRleHQmcXVvdDs6JnF1b3Q7cmVzb3VyY2VzX3N1Ym5hdiZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7bGluayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDthaV9saW5rX3Jlc291cmNlc19zdWJuYXZfbmF2YmFyJnF1b3Q7fVwiIGhyZWY9XCIvcmVzb3VyY2VzL2FydGljbGVzL2FpXCI+XG4gICAgICBBSVxuXG4gICAgXG48L2E+PC9saT5cblxuICAgICAgICAgICAgICAgIDxsaT5cbiAgPGEgY2xhc3M9XCJIZWFkZXJNZW51LWRyb3Bkb3duLWxpbmsgZC1ibG9jayBuby11bmRlcmxpbmUgcG9zaXRpb24tcmVsYXRpdmUgcHktMiBMaW5rLS1zZWNvbmRhcnlcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtsb2NhdGlvbiZxdW90OzomcXVvdDtuYXZiYXImcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2Rldm9wcyZxdW90OywmcXVvdDtjb250ZXh0JnF1b3Q7OiZxdW90O3Jlc291cmNlc19zdWJuYXYmcXVvdDssJnF1b3Q7dGFnJnF1b3Q7OiZxdW90O2xpbmsmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7ZGV2b3BzX2xpbmtfcmVzb3VyY2VzX3N1Ym5hdl9uYXZiYXImcXVvdDt9XCIgaHJlZj1cIi9yZXNvdXJjZXMvYXJ0aWNsZXMvZGV2b3BzXCI+XG4gICAgICBEZXZPcHNcblxuICAgIFxuPC9hPjwvbGk+XG5cbiAgICAgICAgICAgICAgICA8bGk+XG4gIDxhIGNsYXNzPVwiSGVhZGVyTWVudS1kcm9wZG93bi1saW5rIGQtYmxvY2sgbm8tdW5kZXJsaW5lIHBvc2l0aW9uLXJlbGF0aXZlIHB5LTIgTGluay0tc2Vjb25kYXJ5XCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7bG9jYXRpb24mcXVvdDs6JnF1b3Q7bmF2YmFyJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtzZWN1cml0eSZxdW90OywmcXVvdDtjb250ZXh0JnF1b3Q7OiZxdW90O3Jlc291cmNlc19zdWJuYXYmcXVvdDssJnF1b3Q7dGFnJnF1b3Q7OiZxdW90O2xpbmsmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7c2VjdXJpdHlfbGlua19yZXNvdXJjZXNfc3VibmF2X25hdmJhciZxdW90O31cIiBocmVmPVwiL3Jlc291cmNlcy9hcnRpY2xlcy9zZWN1cml0eVwiPlxuICAgICAgU2VjdXJpdHlcblxuICAgIFxuPC9hPjwvbGk+XG5cbiAgICAgICAgICAgICAgICA8bGk+XG4gIDxhIGNsYXNzPVwiSGVhZGVyTWVudS1kcm9wZG93bi1saW5rIGQtYmxvY2sgbm8tdW5kZXJsaW5lIHBvc2l0aW9uLXJlbGF0aXZlIHB5LTIgTGluay0tc2Vjb25kYXJ5XCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7bG9jYXRpb24mcXVvdDs6JnF1b3Q7bmF2YmFyJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtzb2Z0d2FyZV9kZXZlbG9wbWVudCZxdW90OywmcXVvdDtjb250ZXh0JnF1b3Q7OiZxdW90O3Jlc291cmNlc19zdWJuYXYmcXVvdDssJnF1b3Q7dGFnJnF1b3Q7OiZxdW90O2xpbmsmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7c29mdHdhcmVfZGV2ZWxvcG1lbnRfbGlua19yZXNvdXJjZXNfc3VibmF2X25hdmJhciZxdW90O31cIiBocmVmPVwiL3Jlc291cmNlcy9hcnRpY2xlcy9zb2Z0d2FyZS1kZXZlbG9wbWVudFwiPlxuICAgICAgU29mdHdhcmUgRGV2ZWxvcG1lbnRcblxuICAgIFxuPC9hPjwvbGk+XG5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInB4LWxnLTRcIj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJkLWJsb2NrIGg0IGNvbG9yLWZnLWRlZmF1bHQgbXktMVwiIGlkPVwicmVzb3VyY2VzLWV4cGxvcmUtaGVhZGluZ1wiPkV4cGxvcmU8L3NwYW4+XG4gICAgICAgICAgICA8dWwgY2xhc3M9XCJsaXN0LXN0eWxlLW5vbmUgZjVcIiBhcmlhLWxhYmVsbGVkYnk9XCJyZXNvdXJjZXMtZXhwbG9yZS1oZWFkaW5nXCI+XG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeSBMaW5rLS1leHRlcm5hbFwiIHRhcmdldD1cIl9ibGFua1wiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2xvY2F0aW9uJnF1b3Q7OiZxdW90O25hdmJhciZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7bGVhcm5pbmdfcGF0aHdheXMmcXVvdDssJnF1b3Q7Y29udGV4dCZxdW90OzomcXVvdDtyZXNvdXJjZXNfc3VibmF2JnF1b3Q7LCZxdW90O3RhZyZxdW90OzomcXVvdDtsaW5rJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O2xlYXJuaW5nX3BhdGh3YXlzX2xpbmtfcmVzb3VyY2VzX3N1Ym5hdl9uYXZiYXImcXVvdDt9XCIgaHJlZj1cImh0dHBzOi8vcmVzb3VyY2VzLmdpdGh1Yi5jb20vbGVhcm4vcGF0aHdheXNcIj5cbiAgICAgIExlYXJuaW5nIFBhdGh3YXlzXG5cbiAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1saW5rLWV4dGVybmFsIEhlYWRlck1lbnUtZXh0ZXJuYWwtaWNvbiBjb2xvci1mZy1zdWJ0bGVcIj5cbiAgICA8cGF0aCBkPVwiTTMuNzUgMmgzLjVhLjc1Ljc1IDAgMCAxIDAgMS41aC0zLjVhLjI1LjI1IDAgMCAwLS4yNS4yNXY4LjVjMCAuMTM4LjExMi4yNS4yNS4yNWg4LjVhLjI1LjI1IDAgMCAwIC4yNS0uMjV2LTMuNWEuNzUuNzUgMCAwIDEgMS41IDB2My41QTEuNzUgMS43NSAwIDAgMSAxMi4yNSAxNGgtOC41QTEuNzUgMS43NSAwIDAgMSAyIDEyLjI1di04LjVDMiAyLjc4NCAyLjc4NCAyIDMuNzUgMlptNi44NTQtMWg0LjE0NmEuMjUuMjUgMCAwIDEgLjI1LjI1djQuMTQ2YS4yNS4yNSAwIDAgMS0uNDI3LjE3N0wxMy4wMyA0LjAzIDkuMjggNy43OGEuNzUxLjc1MSAwIDAgMS0xLjA0Mi0uMDE4Ljc1MS43NTEgMCAwIDEtLjAxOC0xLjA0MmwzLjc1LTMuNzUtMS41NDMtMS41NDNBLjI1LjI1IDAgMCAxIDEwLjYwNCAxWlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC9hPjwvbGk+XG5cbiAgICAgICAgICAgICAgICA8bGk+XG4gIDxhIGNsYXNzPVwiSGVhZGVyTWVudS1kcm9wZG93bi1saW5rIGQtYmxvY2sgbm8tdW5kZXJsaW5lIHBvc2l0aW9uLXJlbGF0aXZlIHB5LTIgTGluay0tc2Vjb25kYXJ5IExpbmstLWV4dGVybmFsXCIgdGFyZ2V0PVwiX2JsYW5rXCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7bG9jYXRpb24mcXVvdDs6JnF1b3Q7bmF2YmFyJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDt3aGl0ZV9wYXBlcnNfZWJvb2tzX3dlYmluYXJzJnF1b3Q7LCZxdW90O2NvbnRleHQmcXVvdDs6JnF1b3Q7cmVzb3VyY2VzX3N1Ym5hdiZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7bGluayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt3aGl0ZV9wYXBlcnNfZWJvb2tzX3dlYmluYXJzX2xpbmtfcmVzb3VyY2VzX3N1Ym5hdl9uYXZiYXImcXVvdDt9XCIgaHJlZj1cImh0dHBzOi8vcmVzb3VyY2VzLmdpdGh1Yi5jb21cIj5cbiAgICAgIFdoaXRlIHBhcGVycywgRWJvb2tzLCBXZWJpbmFyc1xuXG4gICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tbGluay1leHRlcm5hbCBIZWFkZXJNZW51LWV4dGVybmFsLWljb24gY29sb3ItZmctc3VidGxlXCI+XG4gICAgPHBhdGggZD1cIk0zLjc1IDJoMy41YS43NS43NSAwIDAgMSAwIDEuNWgtMy41YS4yNS4yNSAwIDAgMC0uMjUuMjV2OC41YzAgLjEzOC4xMTIuMjUuMjUuMjVoOC41YS4yNS4yNSAwIDAgMCAuMjUtLjI1di0zLjVhLjc1Ljc1IDAgMCAxIDEuNSAwdjMuNUExLjc1IDEuNzUgMCAwIDEgMTIuMjUgMTRoLTguNUExLjc1IDEuNzUgMCAwIDEgMiAxMi4yNXYtOC41QzIgMi43ODQgMi43ODQgMiAzLjc1IDJabTYuODU0LTFoNC4xNDZhLjI1LjI1IDAgMCAxIC4yNS4yNXY0LjE0NmEuMjUuMjUgMCAwIDEtLjQyNy4xNzdMMTMuMDMgNC4wMyA5LjI4IDcuNzhhLjc1MS43NTEgMCAwIDEtMS4wNDItLjAxOC43NTEuNzUxIDAgMCAxLS4wMTgtMS4wNDJsMy43NS0zLjc1LTEuNTQzLTEuNTQzQS4yNS4yNSAwIDAgMSAxMC42MDQgMVpcIj48L3BhdGg+XG48L3N2Zz5cbjwvYT48L2xpPlxuXG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeVwiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2xvY2F0aW9uJnF1b3Q7OiZxdW90O25hdmJhciZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y3VzdG9tZXJfc3RvcmllcyZxdW90OywmcXVvdDtjb250ZXh0JnF1b3Q7OiZxdW90O3Jlc291cmNlc19zdWJuYXYmcXVvdDssJnF1b3Q7dGFnJnF1b3Q7OiZxdW90O2xpbmsmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7Y3VzdG9tZXJfc3Rvcmllc19saW5rX3Jlc291cmNlc19zdWJuYXZfbmF2YmFyJnF1b3Q7fVwiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vY3VzdG9tZXItc3Rvcmllc1wiPlxuICAgICAgQ3VzdG9tZXIgU3Rvcmllc1xuXG4gICAgXG48L2E+PC9saT5cblxuICAgICAgICAgICAgICAgIDxsaT5cbiAgPGEgY2xhc3M9XCJIZWFkZXJNZW51LWRyb3Bkb3duLWxpbmsgZC1ibG9jayBuby11bmRlcmxpbmUgcG9zaXRpb24tcmVsYXRpdmUgcHktMiBMaW5rLS1zZWNvbmRhcnkgTGluay0tZXh0ZXJuYWxcIiB0YXJnZXQ9XCJfYmxhbmtcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtsb2NhdGlvbiZxdW90OzomcXVvdDtuYXZiYXImcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O3BhcnRuZXJzJnF1b3Q7LCZxdW90O2NvbnRleHQmcXVvdDs6JnF1b3Q7cmVzb3VyY2VzX3N1Ym5hdiZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7bGluayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDtwYXJ0bmVyc19saW5rX3Jlc291cmNlc19zdWJuYXZfbmF2YmFyJnF1b3Q7fVwiIGhyZWY9XCJodHRwczovL3BhcnRuZXIuZ2l0aHViLmNvbVwiPlxuICAgICAgUGFydG5lcnNcblxuICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWxpbmstZXh0ZXJuYWwgSGVhZGVyTWVudS1leHRlcm5hbC1pY29uIGNvbG9yLWZnLXN1YnRsZVwiPlxuICAgIDxwYXRoIGQ9XCJNMy43NSAyaDMuNWEuNzUuNzUgMCAwIDEgMCAxLjVoLTMuNWEuMjUuMjUgMCAwIDAtLjI1LjI1djguNWMwIC4xMzguMTEyLjI1LjI1LjI1aDguNWEuMjUuMjUgMCAwIDAgLjI1LS4yNXYtMy41YS43NS43NSAwIDAgMSAxLjUgMHYzLjVBMS43NSAxLjc1IDAgMCAxIDEyLjI1IDE0aC04LjVBMS43NSAxLjc1IDAgMCAxIDIgMTIuMjV2LTguNUMyIDIuNzg0IDIuNzg0IDIgMy43NSAyWm02Ljg1NC0xaDQuMTQ2YS4yNS4yNSAwIDAgMSAuMjUuMjV2NC4xNDZhLjI1LjI1IDAgMCAxLS40MjcuMTc3TDEzLjAzIDQuMDMgOS4yOCA3Ljc4YS43NTEuNzUxIDAgMCAxLTEuMDQyLS4wMTguNzUxLjc1MSAwIDAgMS0uMDE4LTEuMDQybDMuNzUtMy43NS0xLjU0My0xLjU0M0EuMjUuMjUgMCAwIDEgMTAuNjA0IDFaXCI+PC9wYXRoPlxuPC9zdmc+XG48L2E+PC9saT5cblxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuPC9saT5cblxuXG4gICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwiSGVhZGVyTWVudS1pdGVtIHBvc2l0aW9uLXJlbGF0aXZlIGZsZXgtd3JhcCBmbGV4LWp1c3RpZnktYmV0d2VlbiBmbGV4LWl0ZW1zLWNlbnRlciBkLWJsb2NrIGQtbGctZmxleCBmbGV4LWxnLW5vd3JhcCBmbGV4LWxnLWl0ZW1zLWNlbnRlciBqcy1kZXRhaWxzLWNvbnRhaW5lciBqcy1oZWFkZXItbWVudS1pdGVtXCI+XG4gICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cIkhlYWRlck1lbnUtbGluayBib3JkZXItMCB3aWR0aC1mdWxsIHdpZHRoLWxnLWF1dG8gcHgtMCBweC1sZy0yIHB5LWxnLTIgbm8td3JhcCBkLWZsZXggZmxleC1pdGVtcy1jZW50ZXIgZmxleC1qdXN0aWZ5LWJldHdlZW4ganMtZGV0YWlscy10YXJnZXRcIiBhcmlhLWV4cGFuZGVkPVwiZmFsc2VcIj5cbiAgICAgICAgT3BlbiBTb3VyY2VcbiAgICAgICAgPHN2ZyBvcGFjaXR5PVwiMC41XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWNoZXZyb24tZG93biBIZWFkZXJNZW51LWljb24gbWwtMVwiPlxuICAgIDxwYXRoIGQ9XCJNMTIuNzggNS4yMmEuNzQ5Ljc0OSAwIDAgMSAwIDEuMDZsLTQuMjUgNC4yNWEuNzQ5Ljc0OSAwIDAgMS0xLjA2IDBMMy4yMiA2LjI4YS43NDkuNzQ5IDAgMSAxIDEuMDYtMS4wNkw4IDguOTM5bDMuNzItMy43MTlhLjc0OS43NDkgMCAwIDEgMS4wNiAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgPC9idXR0b24+XG4gICAgICA8ZGl2IGNsYXNzPVwiSGVhZGVyTWVudS1kcm9wZG93biBkcm9wZG93bi1tZW51IHJvdW5kZWQgbS0wIHAtMCBweS0yIHB5LWxnLTQgcG9zaXRpb24tcmVsYXRpdmUgcG9zaXRpb24tbGctYWJzb2x1dGUgbGVmdC0wIGxlZnQtbGctbjMgcHgtbGctNFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJib3JkZXItYm90dG9tIHBiLTMgbWItM1wiPlxuICAgICAgICAgICAgPHVsIGNsYXNzPVwibGlzdC1zdHlsZS1ub25lIGY1XCI+XG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeSBkLWZsZXggZmxleC1pdGVtcy1jZW50ZXIgTGluay0taGFzLWRlc2NyaXB0aW9uXCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7bG9jYXRpb24mcXVvdDs6JnF1b3Q7bmF2YmFyJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtnaXRodWJfc3BvbnNvcnMmcXVvdDssJnF1b3Q7Y29udGV4dCZxdW90OzomcXVvdDtvcGVuX3NvdXJjZV9zdWJuYXYmcXVvdDssJnF1b3Q7dGFnJnF1b3Q7OiZxdW90O2xpbmsmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7Z2l0aHViX3Nwb25zb3JzX2xpbmtfb3Blbl9zb3VyY2Vfc3VibmF2X25hdmJhciZxdW90O31cIiBocmVmPVwiL3Nwb25zb3JzXCI+XG4gICAgICBcbiAgICAgIDxkaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2xvci1mZy1kZWZhdWx0IGg0XCI+R2l0SHViIFNwb25zb3JzPC9kaXY+XG4gICAgICAgIEZ1bmQgb3BlbiBzb3VyY2UgZGV2ZWxvcGVyc1xuICAgICAgPC9kaXY+XG5cbiAgICBcbjwvYT48L2xpPlxuXG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJib3JkZXItYm90dG9tIHBiLTMgbWItM1wiPlxuICAgICAgICAgICAgPHVsIGNsYXNzPVwibGlzdC1zdHlsZS1ub25lIGY1XCI+XG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeSBkLWZsZXggZmxleC1pdGVtcy1jZW50ZXIgTGluay0taGFzLWRlc2NyaXB0aW9uXCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7bG9jYXRpb24mcXVvdDs6JnF1b3Q7bmF2YmFyJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDt0aGVfcmVhZG1lX3Byb2plY3QmcXVvdDssJnF1b3Q7Y29udGV4dCZxdW90OzomcXVvdDtvcGVuX3NvdXJjZV9zdWJuYXYmcXVvdDssJnF1b3Q7dGFnJnF1b3Q7OiZxdW90O2xpbmsmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGhlX3JlYWRtZV9wcm9qZWN0X2xpbmtfb3Blbl9zb3VyY2Vfc3VibmF2X25hdmJhciZxdW90O31cIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL3JlYWRtZVwiPlxuICAgICAgXG4gICAgICA8ZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sb3ItZmctZGVmYXVsdCBoNFwiPlRoZSBSZWFkTUUgUHJvamVjdDwvZGl2PlxuICAgICAgICBHaXRIdWIgY29tbXVuaXR5IGFydGljbGVzXG4gICAgICA8L2Rpdj5cblxuICAgIFxuPC9hPjwvbGk+XG5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cIlwiPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImQtYmxvY2sgaDQgY29sb3ItZmctZGVmYXVsdCBteS0xXCIgaWQ9XCJvcGVuLXNvdXJjZS1yZXBvc2l0b3JpZXMtaGVhZGluZ1wiPlJlcG9zaXRvcmllczwvc3Bhbj5cbiAgICAgICAgICAgIDx1bCBjbGFzcz1cImxpc3Qtc3R5bGUtbm9uZSBmNVwiIGFyaWEtbGFiZWxsZWRieT1cIm9wZW4tc291cmNlLXJlcG9zaXRvcmllcy1oZWFkaW5nXCI+XG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeVwiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2xvY2F0aW9uJnF1b3Q7OiZxdW90O25hdmJhciZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7dG9waWNzJnF1b3Q7LCZxdW90O2NvbnRleHQmcXVvdDs6JnF1b3Q7b3Blbl9zb3VyY2Vfc3VibmF2JnF1b3Q7LCZxdW90O3RhZyZxdW90OzomcXVvdDtsaW5rJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RvcGljc19saW5rX29wZW5fc291cmNlX3N1Ym5hdl9uYXZiYXImcXVvdDt9XCIgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS90b3BpY3NcIj5cbiAgICAgIFRvcGljc1xuXG4gICAgXG48L2E+PC9saT5cblxuICAgICAgICAgICAgICAgIDxsaT5cbiAgPGEgY2xhc3M9XCJIZWFkZXJNZW51LWRyb3Bkb3duLWxpbmsgZC1ibG9jayBuby11bmRlcmxpbmUgcG9zaXRpb24tcmVsYXRpdmUgcHktMiBMaW5rLS1zZWNvbmRhcnlcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtsb2NhdGlvbiZxdW90OzomcXVvdDtuYXZiYXImcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O3RyZW5kaW5nJnF1b3Q7LCZxdW90O2NvbnRleHQmcXVvdDs6JnF1b3Q7b3Blbl9zb3VyY2Vfc3VibmF2JnF1b3Q7LCZxdW90O3RhZyZxdW90OzomcXVvdDtsaW5rJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RyZW5kaW5nX2xpbmtfb3Blbl9zb3VyY2Vfc3VibmF2X25hdmJhciZxdW90O31cIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL3RyZW5kaW5nXCI+XG4gICAgICBUcmVuZGluZ1xuXG4gICAgXG48L2E+PC9saT5cblxuICAgICAgICAgICAgICAgIDxsaT5cbiAgPGEgY2xhc3M9XCJIZWFkZXJNZW51LWRyb3Bkb3duLWxpbmsgZC1ibG9jayBuby11bmRlcmxpbmUgcG9zaXRpb24tcmVsYXRpdmUgcHktMiBMaW5rLS1zZWNvbmRhcnlcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtsb2NhdGlvbiZxdW90OzomcXVvdDtuYXZiYXImcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NvbGxlY3Rpb25zJnF1b3Q7LCZxdW90O2NvbnRleHQmcXVvdDs6JnF1b3Q7b3Blbl9zb3VyY2Vfc3VibmF2JnF1b3Q7LCZxdW90O3RhZyZxdW90OzomcXVvdDtsaW5rJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O2NvbGxlY3Rpb25zX2xpbmtfb3Blbl9zb3VyY2Vfc3VibmF2X25hdmJhciZxdW90O31cIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL2NvbGxlY3Rpb25zXCI+XG4gICAgICBDb2xsZWN0aW9uc1xuXG4gICAgXG48L2E+PC9saT5cblxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuPC9saT5cblxuXG4gICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwiSGVhZGVyTWVudS1pdGVtIHBvc2l0aW9uLXJlbGF0aXZlIGZsZXgtd3JhcCBmbGV4LWp1c3RpZnktYmV0d2VlbiBmbGV4LWl0ZW1zLWNlbnRlciBkLWJsb2NrIGQtbGctZmxleCBmbGV4LWxnLW5vd3JhcCBmbGV4LWxnLWl0ZW1zLWNlbnRlciBqcy1kZXRhaWxzLWNvbnRhaW5lciBqcy1oZWFkZXItbWVudS1pdGVtXCI+XG4gICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cIkhlYWRlck1lbnUtbGluayBib3JkZXItMCB3aWR0aC1mdWxsIHdpZHRoLWxnLWF1dG8gcHgtMCBweC1sZy0yIHB5LWxnLTIgbm8td3JhcCBkLWZsZXggZmxleC1pdGVtcy1jZW50ZXIgZmxleC1qdXN0aWZ5LWJldHdlZW4ganMtZGV0YWlscy10YXJnZXRcIiBhcmlhLWV4cGFuZGVkPVwiZmFsc2VcIj5cbiAgICAgICAgRW50ZXJwcmlzZVxuICAgICAgICA8c3ZnIG9wYWNpdHk9XCIwLjVcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tY2hldnJvbi1kb3duIEhlYWRlck1lbnUtaWNvbiBtbC0xXCI+XG4gICAgPHBhdGggZD1cIk0xMi43OCA1LjIyYS43NDkuNzQ5IDAgMCAxIDAgMS4wNmwtNC4yNSA0LjI1YS43NDkuNzQ5IDAgMCAxLTEuMDYgMEwzLjIyIDYuMjhhLjc0OS43NDkgMCAxIDEgMS4wNi0xLjA2TDggOC45MzlsMy43Mi0zLjcxOWEuNzQ5Ljc0OSAwIDAgMSAxLjA2IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICA8L2J1dHRvbj5cbiAgICAgIDxkaXYgY2xhc3M9XCJIZWFkZXJNZW51LWRyb3Bkb3duIGRyb3Bkb3duLW1lbnUgcm91bmRlZCBtLTAgcC0wIHB5LTIgcHktbGctNCBwb3NpdGlvbi1yZWxhdGl2ZSBwb3NpdGlvbi1sZy1hYnNvbHV0ZSBsZWZ0LTAgbGVmdC1sZy1uMyBweC1sZy00XCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImJvcmRlci1ib3R0b20gcGItMyBtYi0zXCI+XG4gICAgICAgICAgICA8dWwgY2xhc3M9XCJsaXN0LXN0eWxlLW5vbmUgZjVcIj5cbiAgICAgICAgICAgICAgICA8bGk+XG4gIDxhIGNsYXNzPVwiSGVhZGVyTWVudS1kcm9wZG93bi1saW5rIGQtYmxvY2sgbm8tdW5kZXJsaW5lIHBvc2l0aW9uLXJlbGF0aXZlIHB5LTIgTGluay0tc2Vjb25kYXJ5IGQtZmxleCBmbGV4LWl0ZW1zLWNlbnRlciBMaW5rLS1oYXMtZGVzY3JpcHRpb25cIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtsb2NhdGlvbiZxdW90OzomcXVvdDtuYXZiYXImcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2VudGVycHJpc2VfcGxhdGZvcm0mcXVvdDssJnF1b3Q7Y29udGV4dCZxdW90OzomcXVvdDtlbnRlcnByaXNlX3N1Ym5hdiZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7bGluayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDtlbnRlcnByaXNlX3BsYXRmb3JtX2xpbmtfZW50ZXJwcmlzZV9zdWJuYXZfbmF2YmFyJnF1b3Q7fVwiIGhyZWY9XCIvZW50ZXJwcmlzZVwiPlxuICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIyNFwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tc3RhY2sgY29sb3ItZmctc3VidGxlIG1yLTNcIj5cbiAgICA8cGF0aCBkPVwiTTExLjA2MyAxLjQ1NmExLjc0OSAxLjc0OSAwIDAgMSAxLjg3NCAwbDguMzgzIDUuMzE2YTEuNzUxIDEuNzUxIDAgMCAxIDAgMi45NTZsLTguMzgzIDUuMzE2YTEuNzQ5IDEuNzQ5IDAgMCAxLTEuODc0IDBMMi42OCA5LjcyOGExLjc1MSAxLjc1MSAwIDAgMSAwLTIuOTU2Wm0xLjA3MSAxLjI2N2EuMjUuMjUgMCAwIDAtLjI2OCAwTDMuNDgzIDguMDM5YS4yNS4yNSAwIDAgMCAwIC40MjJsOC4zODMgNS4zMTZhLjI1LjI1IDAgMCAwIC4yNjggMGw4LjM4My01LjMxNmEuMjUuMjUgMCAwIDAgMC0uNDIyWlwiPjwvcGF0aD48cGF0aCBkPVwiTTEuODY3IDEyLjMyNGEuNzUuNzUgMCAwIDEgMS4wMzUtLjIzMmw4Ljk2NCA1LjY4NWEuMjUuMjUgMCAwIDAgLjI2OCAwbDguOTY0LTUuNjg1YS43NS43NSAwIDAgMSAuODA0IDEuMjY3bC04Ljk2NSA1LjY4NWExLjc0OSAxLjc0OSAwIDAgMS0xLjg3NCAwbC04Ljk2NS01LjY4NWEuNzUuNzUgMCAwIDEtLjIzMS0xLjAzNVpcIj48L3BhdGg+PHBhdGggZD1cIk0xLjg2NyAxNi4zMjRhLjc1Ljc1IDAgMCAxIDEuMDM1LS4yMzJsOC45NjQgNS42ODVhLjI1LjI1IDAgMCAwIC4yNjggMGw4Ljk2NC01LjY4NWEuNzUuNzUgMCAwIDEgLjgwNCAxLjI2N2wtOC45NjUgNS42ODVhMS43NDkgMS43NDkgMCAwIDEtMS44NzQgMGwtOC45NjUtNS42ODVhLjc1Ljc1IDAgMCAxLS4yMzEtMS4wMzVaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICA8ZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29sb3ItZmctZGVmYXVsdCBoNFwiPkVudGVycHJpc2UgcGxhdGZvcm08L2Rpdj5cbiAgICAgICAgQUktcG93ZXJlZCBkZXZlbG9wZXIgcGxhdGZvcm1cbiAgICAgIDwvZGl2PlxuXG4gICAgXG48L2E+PC9saT5cblxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiXCI+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZC1ibG9jayBoNCBjb2xvci1mZy1kZWZhdWx0IG15LTFcIiBpZD1cImVudGVycHJpc2UtYXZhaWxhYmxlLWFkZC1vbnMtaGVhZGluZ1wiPkF2YWlsYWJsZSBhZGQtb25zPC9zcGFuPlxuICAgICAgICAgICAgPHVsIGNsYXNzPVwibGlzdC1zdHlsZS1ub25lIGY1XCIgYXJpYS1sYWJlbGxlZGJ5PVwiZW50ZXJwcmlzZS1hdmFpbGFibGUtYWRkLW9ucy1oZWFkaW5nXCI+XG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeSBkLWZsZXggZmxleC1pdGVtcy1jZW50ZXIgTGluay0taGFzLWRlc2NyaXB0aW9uIHBiLWxnLTNcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtsb2NhdGlvbiZxdW90OzomcXVvdDtuYXZiYXImcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2FkdmFuY2VkX3NlY3VyaXR5JnF1b3Q7LCZxdW90O2NvbnRleHQmcXVvdDs6JnF1b3Q7ZW50ZXJwcmlzZV9zdWJuYXYmcXVvdDssJnF1b3Q7dGFnJnF1b3Q7OiZxdW90O2xpbmsmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7YWR2YW5jZWRfc2VjdXJpdHlfbGlua19lbnRlcnByaXNlX3N1Ym5hdl9uYXZiYXImcXVvdDt9XCIgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9lbnRlcnByaXNlL2FkdmFuY2VkLXNlY3VyaXR5XCI+XG4gICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjI0XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1zaGllbGQtY2hlY2sgY29sb3ItZmctc3VidGxlIG1yLTNcIj5cbiAgICA8cGF0aCBkPVwiTTE2LjUzIDkuNzhhLjc1Ljc1IDAgMCAwLTEuMDYtMS4wNkwxMSAxMy4xOWwtMS45Ny0xLjk3YS43NS43NSAwIDAgMC0xLjA2IDEuMDZsMi41IDIuNWEuNzUuNzUgMCAwIDAgMS4wNiAwbDUtNVpcIj48L3BhdGg+PHBhdGggZD1cIm0xMi41NC42MzcgOC4yNSAyLjY3NUExLjc1IDEuNzUgMCAwIDEgMjIgNC45NzZWMTBjMCA2LjE5LTMuNzcxIDEwLjcwNC05LjQwMSAxMi44M2ExLjcwNCAxLjcwNCAwIDAgMS0xLjE5OCAwQzUuNzcgMjAuNzA1IDIgMTYuMTkgMiAxMFY0Ljk3NmMwLS43NTguNDg5LTEuNDMgMS4yMS0xLjY2NEwxMS40Ni42MzdhMS43NDggMS43NDggMCAwIDEgMS4wOCAwWm0tLjYxNyAxLjQyNi04LjI1IDIuNjc2YS4yNDkuMjQ5IDAgMCAwLS4xNzMuMjM3VjEwYzAgNS40NiAzLjI4IDkuNDgzIDguNDMgMTEuNDI2YS4xOTkuMTk5IDAgMCAwIC4xNCAwQzE3LjIyIDE5LjQ4MyAyMC41IDE1LjQ2MSAyMC41IDEwVjQuOTc2YS4yNS4yNSAwIDAgMC0uMTczLS4yMzdsLTguMjUtMi42NzZhLjI1My4yNTMgMCAwIDAtLjE1NCAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgPGRpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbG9yLWZnLWRlZmF1bHQgaDRcIj5BZHZhbmNlZCBTZWN1cml0eTwvZGl2PlxuICAgICAgICBFbnRlcnByaXNlLWdyYWRlIHNlY3VyaXR5IGZlYXR1cmVzXG4gICAgICA8L2Rpdj5cblxuICAgIFxuPC9hPjwvbGk+XG5cbiAgICAgICAgICAgICAgICA8bGk+XG4gIDxhIGNsYXNzPVwiSGVhZGVyTWVudS1kcm9wZG93bi1saW5rIGQtYmxvY2sgbm8tdW5kZXJsaW5lIHBvc2l0aW9uLXJlbGF0aXZlIHB5LTIgTGluay0tc2Vjb25kYXJ5IGQtZmxleCBmbGV4LWl0ZW1zLWNlbnRlciBMaW5rLS1oYXMtZGVzY3JpcHRpb24gcGItbGctM1wiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2xvY2F0aW9uJnF1b3Q7OiZxdW90O25hdmJhciZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Z2l0aHViX2NvcGlsb3QmcXVvdDssJnF1b3Q7Y29udGV4dCZxdW90OzomcXVvdDtlbnRlcnByaXNlX3N1Ym5hdiZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7bGluayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDtnaXRodWJfY29waWxvdF9saW5rX2VudGVycHJpc2Vfc3VibmF2X25hdmJhciZxdW90O31cIiBocmVmPVwiL2ZlYXR1cmVzL2NvcGlsb3QjZW50ZXJwcmlzZVwiPlxuICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIyNFwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tY29waWxvdCBjb2xvci1mZy1zdWJ0bGUgbXItM1wiPlxuICAgIDxwYXRoIGQ9XCJNMjMuOTIyIDE2Ljk5MmMtLjg2MSAxLjQ5NS01Ljg1OSA1LjAyMy0xMS45MjIgNS4wMjMtNi4wNjMgMC0xMS4wNjEtMy41MjgtMTEuOTIyLTUuMDIzQS42NDEuNjQxIDAgMCAxIDAgMTYuNzM2di0yLjg2OWEuODQxLjg0MSAwIDAgMSAuMDUzLS4yMmMuMzcyLS45MzUgMS4zNDctMi4yOTIgMi42MDUtMi42NTYuMTY3LS40MjkuNDE0LTEuMDU1LjY0NC0xLjUxN2ExMC4xOTUgMTAuMTk1IDAgMCAxLS4wNTItMS4wODZjMC0xLjMzMS4yODItMi40OTkgMS4xMzItMy4zNjguMzk3LS40MDYuODktLjcxNyAxLjQ3NC0uOTUyIDEuMzk5LTEuMTM2IDMuMzkyLTIuMDkzIDYuMTIyLTIuMDkzIDIuNzMxIDAgNC43NjcuOTU3IDYuMTY2IDIuMDkzLjU4NC4yMzUgMS4wNzcuNTQ2IDEuNDc0Ljk1Mi44NS44NjkgMS4xMzIgMi4wMzcgMS4xMzIgMy4zNjggMCAuMzY4LS4wMTQuNzMzLS4wNTIgMS4wODYuMjMuNDYyLjQ3NyAxLjA4OC42NDQgMS41MTcgMS4yNTguMzY0IDIuMjMzIDEuNzIxIDIuNjA1IDIuNjU2YS44MzIuODMyIDAgMCAxIC4wNTMuMjJ2Mi44NjlhLjY0MS42NDEgMCAwIDEtLjA3OC4yNTZaTTEyLjE3MiAxMWgtLjM0NGE0LjMyMyA0LjMyMyAwIDAgMS0uMzU1LjUwOEMxMC43MDMgMTIuNDU1IDkuNTU1IDEzIDcuOTY1IDEzYy0xLjcyNSAwLTIuOTg5LS4zNTktMy43ODItMS4yNTlhMi4wMDUgMi4wMDUgMCAwIDEtLjA4NS0uMTA0TDQgMTEuNzQxdjYuNTg1YzEuNDM1Ljc3OSA0LjUxNCAyLjE3OSA4IDIuMTc5IDMuNDg2IDAgNi41NjUtMS40IDgtMi4xNzl2LTYuNTg1bC0uMDk4LS4xMDRzLS4wMzMuMDQ1LS4wODUuMTA0Yy0uNzkzLjktMi4wNTcgMS4yNTktMy43ODIgMS4yNTktMS41OSAwLTIuNzM4LS41NDUtMy41MDgtMS40OTJhNC4zMjMgNC4zMjMgMCAwIDEtLjM1NS0uNTA4aC0uMDE2LjAxNlptLjY0MS0yLjkzNWMuMTM2IDEuMDU3LjQwMyAxLjkxMy44NzggMi40OTcuNDQyLjU0NCAxLjEzNC45MzggMi4zNDQuOTM4IDEuNTczIDAgMi4yOTItLjMzNyAyLjY1Ny0uNzUxLjM4NC0uNDM1LjU1OC0xLjE1LjU1OC0yLjM2MSAwLTEuMTQtLjI0My0xLjg0Ny0uNzA1LTIuMzE5LS40NzctLjQ4OC0xLjMxOS0uODYyLTIuODI0LTEuMDI1LTEuNDg3LS4xNjEtMi4xOTIuMTM4LTIuNTMzLjUyOS0uMjY5LjMwNy0uNDM3LjgwOC0uNDM4IDEuNTc4di4wMjFjMCAuMjY1LjAyMS41NjIuMDYzLjg5M1ptLTEuNjI2IDBjLjA0Mi0uMzMxLjA2My0uNjI4LjA2My0uODk0di0uMDJjLS4wMDEtLjc3LS4xNjktMS4yNzEtLjQzOC0xLjU3OC0uMzQxLS4zOTEtMS4wNDYtLjY5LTIuNTMzLS41MjktMS41MDUuMTYzLTIuMzQ3LjUzNy0yLjgyNCAxLjAyNS0uNDYyLjQ3Mi0uNzA1IDEuMTc5LS43MDUgMi4zMTkgMCAxLjIxMS4xNzUgMS45MjYuNTU4IDIuMzYxLjM2NS40MTQgMS4wODQuNzUxIDIuNjU3Ljc1MSAxLjIxIDAgMS45MDItLjM5NCAyLjM0NC0uOTM4LjQ3NS0uNTg0Ljc0Mi0xLjQ0Ljg3OC0yLjQ5N1pcIj48L3BhdGg+PHBhdGggZD1cIk0xNC41IDE0LjI1YTEgMSAwIDAgMSAxIDF2MmExIDEgMCAwIDEtMiAwdi0yYTEgMSAwIDAgMSAxLTFabS01IDBhMSAxIDAgMCAxIDEgMXYyYTEgMSAwIDAgMS0yIDB2LTJhMSAxIDAgMCAxIDEtMVpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2xvci1mZy1kZWZhdWx0IGg0XCI+R2l0SHViIENvcGlsb3Q8L2Rpdj5cbiAgICAgICAgRW50ZXJwcmlzZS1ncmFkZSBBSSBmZWF0dXJlc1xuICAgICAgPC9kaXY+XG5cbiAgICBcbjwvYT48L2xpPlxuXG4gICAgICAgICAgICAgICAgPGxpPlxuICA8YSBjbGFzcz1cIkhlYWRlck1lbnUtZHJvcGRvd24tbGluayBkLWJsb2NrIG5vLXVuZGVybGluZSBwb3NpdGlvbi1yZWxhdGl2ZSBweS0yIExpbmstLXNlY29uZGFyeSBkLWZsZXggZmxleC1pdGVtcy1jZW50ZXIgTGluay0taGFzLWRlc2NyaXB0aW9uXCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7bG9jYXRpb24mcXVvdDs6JnF1b3Q7bmF2YmFyJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtwcmVtaXVtX3N1cHBvcnQmcXVvdDssJnF1b3Q7Y29udGV4dCZxdW90OzomcXVvdDtlbnRlcnByaXNlX3N1Ym5hdiZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7bGluayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDtwcmVtaXVtX3N1cHBvcnRfbGlua19lbnRlcnByaXNlX3N1Ym5hdl9uYXZiYXImcXVvdDt9XCIgaHJlZj1cIi9wcmVtaXVtLXN1cHBvcnRcIj5cbiAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMjRcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWNvbW1lbnQtZGlzY3Vzc2lvbiBjb2xvci1mZy1zdWJ0bGUgbXItM1wiPlxuICAgIDxwYXRoIGQ9XCJNMS43NSAxaDEyLjVjLjk2NiAwIDEuNzUuNzg0IDEuNzUgMS43NXY5LjVBMS43NSAxLjc1IDAgMCAxIDE0LjI1IDE0SDguMDYxbC0yLjU3NCAyLjU3M0ExLjQ1OCAxLjQ1OCAwIDAgMSAzIDE1LjU0M1YxNEgxLjc1QTEuNzUgMS43NSAwIDAgMSAwIDEyLjI1di05LjVDMCAxLjc4NC43ODQgMSAxLjc1IDFaTTEuNSAyLjc1djkuNWMwIC4xMzguMTEyLjI1LjI1LjI1aDJhLjc1Ljc1IDAgMCAxIC43NS43NXYyLjE5bDIuNzItMi43MmEuNzQ5Ljc0OSAwIDAgMSAuNTMtLjIyaDYuNWEuMjUuMjUgMCAwIDAgLjI1LS4yNXYtOS41YS4yNS4yNSAwIDAgMC0uMjUtLjI1SDEuNzVhLjI1LjI1IDAgMCAwLS4yNS4yNVpcIj48L3BhdGg+PHBhdGggZD1cIk0yMi41IDguNzVhLjI1LjI1IDAgMCAwLS4yNS0uMjVoLTMuNWEuNzUuNzUgMCAwIDEgMC0xLjVoMy41Yy45NjYgMCAxLjc1Ljc4NCAxLjc1IDEuNzV2OS41QTEuNzUgMS43NSAwIDAgMSAyMi4yNSAyMEgyMXYxLjU0M2ExLjQ1NyAxLjQ1NyAwIDAgMS0yLjQ4NyAxLjAzTDE1LjkzOSAyMEgxMC43NUExLjc1IDEuNzUgMCAwIDEgOSAxOC4yNXYtMS40NjVhLjc1Ljc1IDAgMCAxIDEuNSAwdjEuNDY1YzAgLjEzOC4xMTIuMjUuMjUuMjVoNS41YS43NS43NSAwIDAgMSAuNTMuMjJsMi43MiAyLjcydi0yLjE5YS43NS43NSAwIDAgMSAuNzUtLjc1aDJhLjI1LjI1IDAgMCAwIC4yNS0uMjV2LTkuNVpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2xvci1mZy1kZWZhdWx0IGg0XCI+UHJlbWl1bSBTdXBwb3J0PC9kaXY+XG4gICAgICAgIEVudGVycHJpc2UtZ3JhZGUgMjQvNyBzdXBwb3J0XG4gICAgICA8L2Rpdj5cblxuICAgIFxuPC9hPjwvbGk+XG5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbjwvbGk+XG5cblxuICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cIkhlYWRlck1lbnUtaXRlbSBwb3NpdGlvbi1yZWxhdGl2ZSBmbGV4LXdyYXAgZmxleC1qdXN0aWZ5LWJldHdlZW4gZmxleC1pdGVtcy1jZW50ZXIgZC1ibG9jayBkLWxnLWZsZXggZmxleC1sZy1ub3dyYXAgZmxleC1sZy1pdGVtcy1jZW50ZXIganMtZGV0YWlscy1jb250YWluZXIganMtaGVhZGVyLW1lbnUtaXRlbVwiPlxuICAgIDxhIGNsYXNzPVwiSGVhZGVyTWVudS1saW5rIG5vLXVuZGVybGluZSBweC0wIHB4LWxnLTIgcHktMyBweS1sZy0yIGQtYmxvY2sgZC1sZy1pbmxpbmUtYmxvY2tcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtsb2NhdGlvbiZxdW90OzomcXVvdDtuYXZiYXImcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O3ByaWNpbmcmcXVvdDssJnF1b3Q7Y29udGV4dCZxdW90OzomcXVvdDtnbG9iYWxfbmF2JnF1b3Q7LCZxdW90O3RhZyZxdW90OzomcXVvdDtsaW5rJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3ByaWNpbmdfbGlua19nbG9iYWxfbmF2X25hdmJhciZxdW90O31cIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL3ByaWNpbmdcIj5QcmljaW5nPC9hPlxuPC9saT5cblxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICA8L25hdj5cblxuICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGZsZXgtY29sdW1uIGZsZXgtbGctcm93IHdpZHRoLWZ1bGwgZmxleC1qdXN0aWZ5LWVuZCBmbGV4LWxnLWl0ZW1zLWNlbnRlciB0ZXh0LWNlbnRlciBtdC0zIG10LWxnLTAgdGV4dC1sZy1sZWZ0IG1sLWxnLTNcIj5cbiAgICAgICAgICAgICAgICBcblxuXG48cWJzZWFyY2gtaW5wdXQgY2xhc3M9XCJzZWFyY2gtaW5wdXRcIiBkYXRhLXNjb3BlPVwib3JnOnJhaWxzXCIgZGF0YS1jdXN0b20tc2NvcGVzLXBhdGg9XCIvc2VhcmNoL2N1c3RvbV9zY29wZXNcIiBkYXRhLWRlbGV0ZS1jdXN0b20tc2NvcGVzLWNzcmY9XCJ6TGFLejBVblFXa1NZVUJLZk9nMjBzM185N3E4Q2ppbG9jWVFBSHRDQkI5WjFSa1NqQnBlVlBkU19WeXNFMmF3MVhVMTR0V1MxWUhGaDlGaldVWklZd1wiIGRhdGEtbWF4LWN1c3RvbS1zY29wZXM9XCIxMFwiIGRhdGEtaGVhZGVyLXJlZGVzaWduLWVuYWJsZWQ9XCJmYWxzZVwiIGRhdGEtaW5pdGlhbC12YWx1ZT1cIlwiIGRhdGEtYmxhY2tiaXJkLXN1Z2dlc3Rpb25zLXBhdGg9XCIvc2VhcmNoL3N1Z2dlc3Rpb25zXCIgZGF0YS1qdW1wLXRvLXN1Z2dlc3Rpb25zLXBhdGg9XCIvX2dyYXBocWwvR2V0U3VnZ2VzdGVkTmF2aWdhdGlvbkRlc3RpbmF0aW9uc1wiIGRhdGEtY3VycmVudC1yZXBvc2l0b3J5PVwiXCIgZGF0YS1jdXJyZW50LW9yZz1cInJhaWxzXCIgZGF0YS1jdXJyZW50LW93bmVyPVwiXCIgZGF0YS1sb2dnZWQtaW49XCJmYWxzZVwiIGRhdGEtY29waWxvdC1jaGF0LWVuYWJsZWQ9XCJmYWxzZVwiIGRhdGEtbmwtc2VhcmNoLWVuYWJsZWQ9XCJmYWxzZVwiIGRhdGEtY2F0YWx5c3Q9XCJcIj5cbiAgPGRpdiBjbGFzcz1cInNlYXJjaC1pbnB1dC1jb250YWluZXIgc2VhcmNoLXdpdGgtZGlhbG9nIHBvc2l0aW9uLXJlbGF0aXZlIGQtZmxleCBmbGV4LXJvdyBmbGV4LWl0ZW1zLWNlbnRlciBtci00IHJvdW5kZWRcIiBkYXRhLWFjdGlvbj1cImNsaWNrOnFic2VhcmNoLWlucHV0I3NlYXJjaElucHV0Q29udGFpbmVyQ2xpY2tlZFwiPlxuICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJoZWFkZXItc2VhcmNoLWJ1dHRvbiBwbGFjZWhvbGRlciBpbnB1dC1idXR0b24gZm9ybS1jb250cm9sIGQtZmxleCBmbGV4LTEgZmxleC1zZWxmLXN0cmV0Y2ggZmxleC1pdGVtcy1jZW50ZXIgbm8td3JhcCB3aWR0aC1mdWxsIHB5LTAgcGwtMiBwci0wIHRleHQtbGVmdCBib3JkZXItMCBib3gtc2hhZG93LW5vbmVcIiBkYXRhLXRhcmdldD1cInFic2VhcmNoLWlucHV0LmlucHV0QnV0dG9uXCIgYXJpYS1sYWJlbD1cIlNlYXJjaCBvciBqdW1wIHRv4oCmXCIgYXJpYS1oYXNwb3B1cD1cImRpYWxvZ1wiIHBsYWNlaG9sZGVyPVwiU2VhcmNoIG9yIGp1bXAgdG8uLi5cIiBkYXRhLWhvdGtleT1cInMsL1wiIGF1dG9jYXBpdGFsaXplPVwibm9uZVwiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2xvY2F0aW9uJnF1b3Q7OiZxdW90O25hdmJhciZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7c2VhcmNoYmFyJnF1b3Q7LCZxdW90O2NvbnRleHQmcXVvdDs6JnF1b3Q7Z2xvYmFsX25hdiZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7aW5wdXQmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7c2VhcmNoYmFyX2lucHV0X2dsb2JhbF9uYXZfbmF2YmFyJnF1b3Q7fVwiIGRhdGEtYWN0aW9uPVwiY2xpY2s6cWJzZWFyY2gtaW5wdXQjaGFuZGxlRXhwYW5kXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJtci0yIGNvbG9yLWZnLW11dGVkXCI+XG4gICAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tc2VhcmNoXCI+XG4gICAgPHBhdGggZD1cIk0xMC42OCAxMS43NGE2IDYgMCAwIDEtNy45MjItOC45ODIgNiA2IDAgMCAxIDguOTgyIDcuOTIybDMuMDQgMy4wNGEuNzQ5Ljc0OSAwIDAgMS0uMzI2IDEuMjc1Ljc0OS43NDkgMCAwIDEtLjczNC0uMjE1Wk0xMS41IDdhNC40OTkgNC40OTkgMCAxIDAtOC45OTcgMEE0LjQ5OSA0LjQ5OSAwIDAgMCAxMS41IDdaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8c3BhbiBjbGFzcz1cImZsZXgtMVwiIGRhdGEtdGFyZ2V0PVwicWJzZWFyY2gtaW5wdXQuaW5wdXRCdXR0b25UZXh0XCI+U2VhcmNoIG9yIGp1bXAgdG8uLi48L3NwYW4+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleFwiIGRhdGEtdGFyZ2V0PVwicWJzZWFyY2gtaW5wdXQuaG90a2V5SW5kaWNhdG9yXCI+XG4gICAgICAgICAgICA8c3ZnIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB3aWR0aD1cIjIyXCIgaGVpZ2h0PVwiMjBcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cIm1yLTFcIj48cGF0aCBmaWxsPVwibm9uZVwiIHN0cm9rZT1cIiM5NzlBOUNcIiBvcGFjaXR5PVwiLjRcIiBkPVwiTTMuNS41aDEyYzEuNyAwIDMgMS4zIDMgM3YxM2MwIDEuNy0xLjMgMy0zIDNoLTEyYy0xLjcgMC0zLTEuMy0zLTN2LTEzYzAtMS43IDEuMy0zIDMtM3pcIj48L3BhdGg+PHBhdGggZmlsbD1cIiM5NzlBOUNcIiBkPVwiTTExLjggNkw4IDE1LjFoLS45TDEwLjggNmgxelwiPjwvcGF0aD48L3N2Zz5cblxuICAgICAgICAgIDwvZGl2PlxuICAgICAgPC9idXR0b24+XG5cbiAgICA8aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJ0eXBlXCIgY2xhc3M9XCJqcy1zaXRlLXNlYXJjaC10eXBlLWZpZWxkXCI+XG5cbiAgICBcbjxkaXYgY2xhc3M9XCJPdmVybGF5LS1oaWRkZW4gXCIgZGF0YS1tb2RhbC1kaWFsb2ctb3ZlcmxheT1cIlwiPlxuICA8bW9kYWwtZGlhbG9nIGRhdGEtYWN0aW9uPVwiY2xvc2U6cWJzZWFyY2gtaW5wdXQjaGFuZGxlQ2xvc2UgY2FuY2VsOnFic2VhcmNoLWlucHV0I2hhbmRsZUNsb3NlXCIgZGF0YS10YXJnZXQ9XCJxYnNlYXJjaC1pbnB1dC5zZWFyY2hTdWdnZXN0aW9uc0RpYWxvZ1wiIHJvbGU9XCJkaWFsb2dcIiBpZD1cInNlYXJjaC1zdWdnZXN0aW9ucy1kaWFsb2dcIiBhcmlhLW1vZGFsPVwidHJ1ZVwiIGFyaWEtbGFiZWxsZWRieT1cInNlYXJjaC1zdWdnZXN0aW9ucy1kaWFsb2ctaGVhZGVyXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIk92ZXJsYXkgT3ZlcmxheS0td2lkdGgtbGFyZ2UgT3ZlcmxheS0taGVpZ2h0LWF1dG9cIj5cbiAgICAgIDxoMSBpZD1cInNlYXJjaC1zdWdnZXN0aW9ucy1kaWFsb2ctaGVhZGVyXCIgY2xhc3M9XCJzci1vbmx5XCI+U2VhcmNoIGNvZGUsIHJlcG9zaXRvcmllcywgdXNlcnMsIGlzc3VlcywgcHVsbCByZXF1ZXN0cy4uLjwvaDE+XG4gICAgPGRpdiBjbGFzcz1cIk92ZXJsYXktYm9keSBPdmVybGF5LWJvZHktLXBhZGRpbmdOb25lXCI+XG4gICAgICBcbiAgICAgICAgICA8ZGl2IGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCI+ICAgICAgICA8ZGl2IGNsYXNzPVwic2VhcmNoLXN1Z2dlc3Rpb25zIHBvc2l0aW9uLWZpeGVkIHdpZHRoLWZ1bGwgY29sb3Itc2hhZG93LWxhcmdlIGJvcmRlciBjb2xvci1mZy1kZWZhdWx0IGNvbG9yLWJnLWRlZmF1bHQgb3ZlcmZsb3ctaGlkZGVuIGQtZmxleCBmbGV4LWNvbHVtbiBxdWVyeS1idWlsZGVyLWNvbnRhaW5lclwiIHN0eWxlPVwiYm9yZGVyLXJhZGl1czogMTJweDtcIiBkYXRhLXRhcmdldD1cInFic2VhcmNoLWlucHV0LnF1ZXJ5QnVpbGRlckNvbnRhaW5lclwiIGhpZGRlbj1cIlwiPlxuICAgICAgICAgIDwhLS0gJ1wiYCAtLT48IS0tIDwvdGV4dGFyZWE+PC94bXA+IC0tPjxmb3JtIGlkPVwicXVlcnktYnVpbGRlci10ZXN0LWZvcm1cIiBhY3Rpb249XCJcIiBhY2NlcHQtY2hhcnNldD1cIlVURi04XCIgbWV0aG9kPVwiZ2V0XCI+XG4gIDxxdWVyeS1idWlsZGVyIGRhdGEtdGFyZ2V0PVwicWJzZWFyY2gtaW5wdXQucXVlcnlCdWlsZGVyXCIgaWQ9XCJxdWVyeS1idWlsZGVyLXF1ZXJ5LWJ1aWxkZXItdGVzdFwiIGRhdGEtZmlsdGVyLWtleT1cIjpcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiUXVlcnlCdWlsZGVyIHNlYXJjaC1xdWVyeS1idWlsZGVyXCIgZGF0YS1taW4td2lkdGg9XCIzMDBcIiBkYXRhLWNhdGFseXN0PVwiXCI+XG4gICAgPGRpdiBjbGFzcz1cIkZvcm1Db250cm9sIEZvcm1Db250cm9sLS1mdWxsV2lkdGhcIj5cbiAgICAgIDxsYWJlbCBpZD1cInF1ZXJ5LWJ1aWxkZXItdGVzdC1sYWJlbFwiIGZvcj1cInF1ZXJ5LWJ1aWxkZXItdGVzdFwiIGNsYXNzPVwiRm9ybUNvbnRyb2wtbGFiZWwgc3Itb25seVwiPlxuICAgICAgICBTZWFyY2hcbiAgICAgIDwvbGFiZWw+XG4gICAgICA8ZGl2IGNsYXNzPVwiUXVlcnlCdWlsZGVyLVN0eWxlZElucHV0IHdpZHRoLWZpdCBcIiBkYXRhLXRhcmdldD1cInF1ZXJ5LWJ1aWxkZXIuc3R5bGVkSW5wdXRcIj5cbiAgICAgICAgICA8c3BhbiBpZD1cInF1ZXJ5LWJ1aWxkZXItdGVzdC1sZWFkaW5ndmlzdWFsLXdyYXBcIiBjbGFzcz1cIkZvcm1Db250cm9sLWlucHV0LWxlYWRpbmdWaXN1YWxXcmFwIFF1ZXJ5QnVpbGRlci1sZWFkaW5nVmlzdWFsV3JhcFwiPlxuICAgICAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tc2VhcmNoIEZvcm1Db250cm9sLWlucHV0LWxlYWRpbmdWaXN1YWxcIj5cbiAgICA8cGF0aCBkPVwiTTEwLjY4IDExLjc0YTYgNiAwIDAgMS03LjkyMi04Ljk4MiA2IDYgMCAwIDEgOC45ODIgNy45MjJsMy4wNCAzLjA0YS43NDkuNzQ5IDAgMCAxLS4zMjYgMS4yNzUuNzQ5Ljc0OSAwIDAgMS0uNzM0LS4yMTVaTTExLjUgN2E0LjQ5OSA0LjQ5OSAwIDEgMC04Ljk5NyAwQTQuNDk5IDQuNDk5IDAgMCAwIDExLjUgN1pcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIDxkaXYgZGF0YS10YXJnZXQ9XCJxdWVyeS1idWlsZGVyLnN0eWxlZElucHV0Q29udGFpbmVyXCIgY2xhc3M9XCJRdWVyeUJ1aWxkZXItU3R5bGVkSW5wdXRDb250YWluZXJcIj5cbiAgICAgICAgICA8ZGl2IGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGNsYXNzPVwiUXVlcnlCdWlsZGVyLVN0eWxlZElucHV0Q29udGVudFwiIGRhdGEtdGFyZ2V0PVwicXVlcnktYnVpbGRlci5zdHlsZWRJbnB1dENvbnRlbnRcIj48L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiUXVlcnlCdWlsZGVyLUlucHV0V3JhcHBlclwiPlxuICAgICAgICAgICAgPGRpdiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cIlF1ZXJ5QnVpbGRlci1TaXplclwiIGRhdGEtdGFyZ2V0PVwicXVlcnktYnVpbGRlci5zaXplclwiPjxzcGFuPjwvc3Bhbj48L2Rpdj5cbiAgICAgICAgICAgIDxpbnB1dCBpZD1cInF1ZXJ5LWJ1aWxkZXItdGVzdFwiIG5hbWU9XCJxdWVyeS1idWlsZGVyLXRlc3RcIiB2YWx1ZT1cIlwiIGF1dG9jb21wbGV0ZT1cIm9mZlwiIHR5cGU9XCJ0ZXh0XCIgcm9sZT1cImNvbWJvYm94XCIgc3BlbGxjaGVjaz1cImZhbHNlXCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCIgYXJpYS1kZXNjcmliZWRieT1cInZhbGlkYXRpb24tNWQwYjIxM2QtNzliNS00MjU0LWI5YTYtMzg2NTVkOWIyNDZkXCIgZGF0YS10YXJnZXQ9XCJxdWVyeS1idWlsZGVyLmlucHV0XCIgZGF0YS1hY3Rpb249XCJcbiAgICAgICAgICBpbnB1dDpxdWVyeS1idWlsZGVyI2lucHV0Q2hhbmdlXG4gICAgICAgICAgYmx1cjpxdWVyeS1idWlsZGVyI2lucHV0Qmx1clxuICAgICAgICAgIGtleWRvd246cXVlcnktYnVpbGRlciNpbnB1dEtleWRvd25cbiAgICAgICAgICBmb2N1czpxdWVyeS1idWlsZGVyI2lucHV0Rm9jdXNcbiAgICAgICAgXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkZvcm1Db250cm9sLWlucHV0IFF1ZXJ5QnVpbGRlci1JbnB1dCBGb3JtQ29udHJvbC1tZWRpdW1cIiBhcmlhLWNvbnRyb2xzPVwicXVlcnktYnVpbGRlci10ZXN0LXJlc3VsdHNcIiBhcmlhLWF1dG9jb21wbGV0ZT1cImxpc3RcIiBhcmlhLWhhc3BvcHVwPVwibGlzdGJveFwiIHN0eWxlPVwid2lkdGg6IDMwMHB4O1wiPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz1cInNyLW9ubHlcIiBpZD1cInF1ZXJ5LWJ1aWxkZXItdGVzdC1jbGVhclwiPkNsZWFyPC9zcGFuPlxuICAgICAgICAgIDxidXR0b24gcm9sZT1cImJ1dHRvblwiIGlkPVwicXVlcnktYnVpbGRlci10ZXN0LWNsZWFyLWJ1dHRvblwiIGFyaWEtbGFiZWxsZWRieT1cInF1ZXJ5LWJ1aWxkZXItdGVzdC1jbGVhciBxdWVyeS1idWlsZGVyLXRlc3QtbGFiZWxcIiBkYXRhLXRhcmdldD1cInF1ZXJ5LWJ1aWxkZXIuY2xlYXJCdXR0b25cIiBkYXRhLWFjdGlvbj1cIlxuICAgICAgICAgICAgICAgIGNsaWNrOnF1ZXJ5LWJ1aWxkZXIjY2xlYXJcbiAgICAgICAgICAgICAgICBmb2N1czpxdWVyeS1idWlsZGVyI2NsZWFyQnV0dG9uRm9jdXNcbiAgICAgICAgICAgICAgICBibHVyOnF1ZXJ5LWJ1aWxkZXIjY2xlYXJCdXR0b25CbHVyXG4gICAgICAgICAgICAgIFwiIHZhcmlhbnQ9XCJzbWFsbFwiIGhpZGRlbj1cIlwiIHR5cGU9XCJidXR0b25cIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiQnV0dG9uIEJ1dHRvbi0taWNvbk9ubHkgQnV0dG9uLS1pbnZpc2libGUgQnV0dG9uLS1tZWRpdW0gbXItMSBweC0yIHB5LTAgZC1mbGV4IGZsZXgtaXRlbXMtY2VudGVyIHJvdW5kZWQtMSBjb2xvci1mZy1tdXRlZFwiPiAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24teC1jaXJjbGUtZmlsbCBCdXR0b24tdmlzdWFsXCI+XG4gICAgPHBhdGggZD1cIk0yLjM0MyAxMy42NTdBOCA4IDAgMSAxIDEzLjY1OCAyLjM0MyA4IDggMCAwIDEgMi4zNDMgMTMuNjU3Wk02LjAzIDQuOTdhLjc1MS43NTEgMCAwIDAtMS4wNDIuMDE4Ljc1MS43NTEgMCAwIDAtLjAxOCAxLjA0Mkw2Ljk0IDggNC45NyA5Ljk3YS43NDkuNzQ5IDAgMCAwIC4zMjYgMS4yNzUuNzQ5Ljc0OSAwIDAgMCAuNzM0LS4yMTVMOCA5LjA2bDEuOTcgMS45N2EuNzQ5Ljc0OSAwIDAgMCAxLjI3NS0uMzI2Ljc0OS43NDkgMCAwIDAtLjIxNS0uNzM0TDkuMDYgOGwxLjk3LTEuOTdhLjc0OS43NDkgMCAwIDAtLjMyNi0xLjI3NS43NDkuNzQ5IDAgMCAwLS43MzQuMjE1TDggNi45NFpcIj48L3BhdGg+XG48L3N2Zz5cbjwvYnV0dG9uPlxuXG4gICAgICA8L2Rpdj5cbiAgICAgIDx0ZW1wbGF0ZSBpZD1cInNlYXJjaC1pY29uXCI+XG4gIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLXNlYXJjaFwiPlxuICAgIDxwYXRoIGQ9XCJNMTAuNjggMTEuNzRhNiA2IDAgMCAxLTcuOTIyLTguOTgyIDYgNiAwIDAgMSA4Ljk4MiA3LjkyMmwzLjA0IDMuMDRhLjc0OS43NDkgMCAwIDEtLjMyNiAxLjI3NS43NDkuNzQ5IDAgMCAxLS43MzQtLjIxNVpNMTEuNSA3YTQuNDk5IDQuNDk5IDAgMSAwLTguOTk3IDBBNC40OTkgNC40OTkgMCAwIDAgMTEuNSA3WlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC90ZW1wbGF0ZT5cblxuPHRlbXBsYXRlIGlkPVwiY29kZS1pY29uXCI+XG4gIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWNvZGVcIj5cbiAgICA8cGF0aCBkPVwibTExLjI4IDMuMjIgNC4yNSA0LjI1YS43NS43NSAwIDAgMSAwIDEuMDZsLTQuMjUgNC4yNWEuNzQ5Ljc0OSAwIDAgMS0xLjI3NS0uMzI2Ljc0OS43NDkgMCAwIDEgLjIxNS0uNzM0TDEzLjk0IDhsLTMuNzItMy43MmEuNzQ5Ljc0OSAwIDAgMSAuMzI2LTEuMjc1Ljc0OS43NDkgMCAwIDEgLjczNC4yMTVabS02LjU2IDBhLjc1MS43NTEgMCAwIDEgMS4wNDIuMDE4Ljc1MS43NTEgMCAwIDEgLjAxOCAxLjA0MkwyLjA2IDhsMy43MiAzLjcyYS43NDkuNzQ5IDAgMCAxLS4zMjYgMS4yNzUuNzQ5Ljc0OSAwIDAgMS0uNzM0LS4yMTVMLjQ3IDguNTNhLjc1Ljc1IDAgMCAxIDAtMS4wNlpcIj48L3BhdGg+XG48L3N2Zz5cbjwvdGVtcGxhdGU+XG5cbjx0ZW1wbGF0ZSBpZD1cImZpbGUtY29kZS1pY29uXCI+XG4gIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWZpbGUtY29kZVwiPlxuICAgIDxwYXRoIGQ9XCJNNCAxLjc1QzQgLjc4NCA0Ljc4NCAwIDUuNzUgMGg1LjU4NmMuNDY0IDAgLjkwOS4xODQgMS4yMzcuNTEzbDIuOTE0IDIuOTE0Yy4zMjkuMzI4LjUxMy43NzMuNTEzIDEuMjM3djguNTg2QTEuNzUgMS43NSAwIDAgMSAxNC4yNSAxNWgtOWEuNzUuNzUgMCAwIDEgMC0xLjVoOWEuMjUuMjUgMCAwIDAgLjI1LS4yNVY2aC0yLjc1QTEuNzUgMS43NSAwIDAgMSAxMCA0LjI1VjEuNUg1Ljc1YS4yNS4yNSAwIDAgMC0uMjUuMjV2Mi41YS43NS43NSAwIDAgMS0xLjUgMFptMS43MiA0Ljk3YS43NS43NSAwIDAgMSAxLjA2IDBsMiAyYS43NS43NSAwIDAgMSAwIDEuMDZsLTIgMmEuNzQ5Ljc0OSAwIDAgMS0xLjI3NS0uMzI2Ljc0OS43NDkgMCAwIDEgLjIxNS0uNzM0bDEuNDctMS40Ny0xLjQ3LTEuNDdhLjc1Ljc1IDAgMCAxIDAtMS4wNlpNMy4yOCA3Ljc4IDEuODEgOS4yNWwxLjQ3IDEuNDdhLjc1MS43NTEgMCAwIDEtLjAxOCAxLjA0Mi43NTEuNzUxIDAgMCAxLTEuMDQyLjAxOGwtMi0yYS43NS43NSAwIDAgMSAwLTEuMDZsMi0yYS43NTEuNzUxIDAgMCAxIDEuMDQyLjAxOC43NTEuNzUxIDAgMCAxIC4wMTggMS4wNDJabTguMjItNi4yMThWNC4yNWMwIC4xMzguMTEyLjI1LjI1LjI1aDIuNjg4bC0uMDExLS4wMTMtMi45MTQtMi45MTQtLjAxMy0uMDExWlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC90ZW1wbGF0ZT5cblxuPHRlbXBsYXRlIGlkPVwiaGlzdG9yeS1pY29uXCI+XG4gIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWhpc3RvcnlcIj5cbiAgICA8cGF0aCBkPVwibS40MjcgMS45MjcgMS4yMTUgMS4yMTVhOC4wMDIgOC4wMDIgMCAxIDEtMS42IDUuNjg1Ljc1Ljc1IDAgMSAxIDEuNDkzLS4xNTQgNi41IDYuNSAwIDEgMCAxLjE4LTQuNDU4bDEuMzU4IDEuMzU4QS4yNS4yNSAwIDAgMSAzLjg5NiA2SC4yNUEuMjUuMjUgMCAwIDEgMCA1Ljc1VjIuMTA0YS4yNS4yNSAwIDAgMSAuNDI3LS4xNzdaTTcuNzUgNGEuNzUuNzUgMCAwIDEgLjc1Ljc1djIuOTkybDIuMDI4LjgxMmEuNzUuNzUgMCAwIDEtLjU1NyAxLjM5MmwtMi41LTFBLjc1MS43NTEgMCAwIDEgNyA4LjI1di0zLjVBLjc1Ljc1IDAgMCAxIDcuNzUgNFpcIj48L3BhdGg+XG48L3N2Zz5cbjwvdGVtcGxhdGU+XG5cbjx0ZW1wbGF0ZSBpZD1cInJlcG8taWNvblwiPlxuICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1yZXBvXCI+XG4gICAgPHBhdGggZD1cIk0yIDIuNUEyLjUgMi41IDAgMCAxIDQuNSAwaDguNzVhLjc1Ljc1IDAgMCAxIC43NS43NXYxMi41YS43NS43NSAwIDAgMS0uNzUuNzVoLTIuNWEuNzUuNzUgMCAwIDEgMC0xLjVoMS43NXYtMmgtOGExIDEgMCAwIDAtLjcxNCAxLjcuNzUuNzUgMCAxIDEtMS4wNzIgMS4wNUEyLjQ5NSAyLjQ5NSAwIDAgMSAyIDExLjVabTEwLjUtMWgtOGExIDEgMCAwIDAtMSAxdjYuNzA4QTIuNDg2IDIuNDg2IDAgMCAxIDQuNSA5aDhaTTUgMTIuMjVhLjI1LjI1IDAgMCAxIC4yNS0uMjVoMy41YS4yNS4yNSAwIDAgMSAuMjUuMjV2My4yNWEuMjUuMjUgMCAwIDEtLjQuMmwtMS40NS0xLjA4N2EuMjQ5LjI0OSAwIDAgMC0uMyAwTDUuNCAxNS43YS4yNS4yNSAwIDAgMS0uNC0uMlpcIj48L3BhdGg+XG48L3N2Zz5cbjwvdGVtcGxhdGU+XG5cbjx0ZW1wbGF0ZSBpZD1cImJvb2ttYXJrLWljb25cIj5cbiAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tYm9va21hcmtcIj5cbiAgICA8cGF0aCBkPVwiTTMgMi43NUMzIDEuNzg0IDMuNzg0IDEgNC43NSAxaDYuNWMuOTY2IDAgMS43NS43ODQgMS43NSAxLjc1djExLjVhLjc1Ljc1IDAgMCAxLTEuMjI3LjU3OUw4IDExLjcyMmwtMy43NzMgMy4xMDdBLjc1MS43NTEgMCAwIDEgMyAxNC4yNVptMS43NS0uMjVhLjI1LjI1IDAgMCAwLS4yNS4yNXY5LjkxbDMuMDIzLTIuNDg5YS43NS43NSAwIDAgMSAuOTU0IDBsMy4wMjMgMi40OVYyLjc1YS4yNS4yNSAwIDAgMC0uMjUtLjI1WlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC90ZW1wbGF0ZT5cblxuPHRlbXBsYXRlIGlkPVwicGx1cy1jaXJjbGUtaWNvblwiPlxuICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1wbHVzLWNpcmNsZVwiPlxuICAgIDxwYXRoIGQ9XCJNOCAwYTggOCAwIDEgMSAwIDE2QTggOCAwIDAgMSA4IDBaTTEuNSA4YTYuNSA2LjUgMCAxIDAgMTMgMCA2LjUgNi41IDAgMCAwLTEzIDBabTcuMjUtMy4yNXYyLjVoMi41YS43NS43NSAwIDAgMSAwIDEuNWgtMi41djIuNWEuNzUuNzUgMCAwIDEtMS41IDB2LTIuNWgtMi41YS43NS43NSAwIDAgMSAwLTEuNWgyLjV2LTIuNWEuNzUuNzUgMCAwIDEgMS41IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG48L3RlbXBsYXRlPlxuXG48dGVtcGxhdGUgaWQ9XCJjaXJjbGUtaWNvblwiPlxuICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1kb3QtZmlsbFwiPlxuICAgIDxwYXRoIGQ9XCJNOCA0YTQgNCAwIDEgMSAwIDggNCA0IDAgMCAxIDAtOFpcIj48L3BhdGg+XG48L3N2Zz5cbjwvdGVtcGxhdGU+XG5cbjx0ZW1wbGF0ZSBpZD1cInRyYXNoLWljb25cIj5cbiAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tdHJhc2hcIj5cbiAgICA8cGF0aCBkPVwiTTExIDEuNzVWM2gyLjI1YS43NS43NSAwIDAgMSAwIDEuNUgyLjc1YS43NS43NSAwIDAgMSAwLTEuNUg1VjEuNzVDNSAuNzg0IDUuNzg0IDAgNi43NSAwaDIuNUMxMC4yMTYgMCAxMSAuNzg0IDExIDEuNzVaTTQuNDk2IDYuNjc1bC42NiA2LjZhLjI1LjI1IDAgMCAwIC4yNDkuMjI1aDUuMTlhLjI1LjI1IDAgMCAwIC4yNDktLjIyNWwuNjYtNi42YS43NS43NSAwIDAgMSAxLjQ5Mi4xNDlsLS42NiA2LjZBMS43NDggMS43NDggMCAwIDEgMTAuNTk1IDE1aC01LjE5YTEuNzUgMS43NSAwIDAgMS0xLjc0MS0xLjU3NWwtLjY2LTYuNmEuNzUuNzUgMCAxIDEgMS40OTItLjE1Wk02LjUgMS43NVYzaDNWMS43NWEuMjUuMjUgMCAwIDAtLjI1LS4yNWgtMi41YS4yNS4yNSAwIDAgMC0uMjUuMjVaXCI+PC9wYXRoPlxuPC9zdmc+XG48L3RlbXBsYXRlPlxuXG48dGVtcGxhdGUgaWQ9XCJ0ZWFtLWljb25cIj5cbiAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tcGVvcGxlXCI+XG4gICAgPHBhdGggZD1cIk0yIDUuNWEzLjUgMy41IDAgMSAxIDUuODk4IDIuNTQ5IDUuNTA4IDUuNTA4IDAgMCAxIDMuMDM0IDQuMDg0Ljc1Ljc1IDAgMSAxLTEuNDgyLjIzNSA0IDQgMCAwIDAtNy45IDAgLjc1Ljc1IDAgMCAxLTEuNDgyLS4yMzZBNS41MDcgNS41MDcgMCAwIDEgMy4xMDIgOC4wNSAzLjQ5MyAzLjQ5MyAwIDAgMSAyIDUuNVpNMTEgNGEzLjAwMSAzLjAwMSAwIDAgMSAyLjIyIDUuMDE4IDUuMDEgNS4wMSAwIDAgMSAyLjU2IDMuMDEyLjc0OS43NDkgMCAwIDEtLjg4NS45NTQuNzUyLjc1MiAwIDAgMS0uNTQ5LS41MTQgMy41MDcgMy41MDcgMCAwIDAtMi41MjItMi4zNzIuNzUuNzUgMCAwIDEtLjU3NC0uNzN2LS4zNTJhLjc1Ljc1IDAgMCAxIC40MTYtLjY3MkExLjUgMS41IDAgMCAwIDExIDUuNS43NS43NSAwIDAgMSAxMSA0Wm0tNS41LS41YTIgMiAwIDEgMC0uMDAxIDMuOTk5QTIgMiAwIDAgMCA1LjUgMy41WlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC90ZW1wbGF0ZT5cblxuPHRlbXBsYXRlIGlkPVwicHJvamVjdC1pY29uXCI+XG4gIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLXByb2plY3RcIj5cbiAgICA8cGF0aCBkPVwiTTEuNzUgMGgxMi41QzE1LjIxNiAwIDE2IC43ODQgMTYgMS43NXYxMi41QTEuNzUgMS43NSAwIDAgMSAxNC4yNSAxNkgxLjc1QTEuNzUgMS43NSAwIDAgMSAwIDE0LjI1VjEuNzVDMCAuNzg0Ljc4NCAwIDEuNzUgMFpNMS41IDEuNzV2MTIuNWMwIC4xMzguMTEyLjI1LjI1LjI1aDEyLjVhLjI1LjI1IDAgMCAwIC4yNS0uMjVWMS43NWEuMjUuMjUgMCAwIDAtLjI1LS4yNUgxLjc1YS4yNS4yNSAwIDAgMC0uMjUuMjVaTTExLjc1IDNhLjc1Ljc1IDAgMCAxIC43NS43NXY3LjVhLjc1Ljc1IDAgMCAxLTEuNSAwdi03LjVhLjc1Ljc1IDAgMCAxIC43NS0uNzVabS04LjI1Ljc1YS43NS43NSAwIDAgMSAxLjUgMHY1LjVhLjc1Ljc1IDAgMCAxLTEuNSAwWk04IDNhLjc1Ljc1IDAgMCAxIC43NS43NXYzLjVhLjc1Ljc1IDAgMCAxLTEuNSAwdi0zLjVBLjc1Ljc1IDAgMCAxIDggM1pcIj48L3BhdGg+XG48L3N2Zz5cbjwvdGVtcGxhdGU+XG5cbjx0ZW1wbGF0ZSBpZD1cInBlbmNpbC1pY29uXCI+XG4gIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLXBlbmNpbFwiPlxuICAgIDxwYXRoIGQ9XCJNMTEuMDEzIDEuNDI3YTEuNzUgMS43NSAwIDAgMSAyLjQ3NCAwbDEuMDg2IDEuMDg2YTEuNzUgMS43NSAwIDAgMSAwIDIuNDc0bC04LjYxIDguNjFjLS4yMS4yMS0uNDcuMzY0LS43NTYuNDQ1bC0zLjI1MS45M2EuNzUuNzUgMCAwIDEtLjkyNy0uOTI4bC45MjktMy4yNWMuMDgxLS4yODYuMjM1LS41NDcuNDQ1LS43NThsOC42MS04LjYxWm0uMTc2IDQuODIzTDkuNzUgNC44MWwtNi4yODYgNi4yODdhLjI1My4yNTMgMCAwIDAtLjA2NC4xMDhsLS41NTggMS45NTMgMS45NTMtLjU1OGEuMjUzLjI1MyAwIDAgMCAuMTA4LS4wNjRabTEuMjM4LTMuNzYzYS4yNS4yNSAwIDAgMC0uMzU0IDBMMTAuODExIDMuNzVsMS40MzkgMS40NCAxLjI2My0xLjI2M2EuMjUuMjUgMCAwIDAgMC0uMzU0WlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC90ZW1wbGF0ZT5cblxuPHRlbXBsYXRlIGlkPVwiY29waWxvdC1pY29uXCI+XG4gIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWNvcGlsb3RcIj5cbiAgICA8cGF0aCBkPVwiTTcuOTk4IDE1LjAzNWMtNC41NjIgMC03Ljg3My0yLjkxNC03Ljk5OC0zLjc0OVY5LjMzOGMuMDg1LS42MjguNjc3LTEuNjg2IDEuNTg4LTIuMDY1LjAxMy0uMDcuMDI0LS4xNDMuMDM2LS4yMTguMDI5LS4xODMuMDYtLjM4NC4xMjYtLjYxMi0uMjAxLS41MDgtLjI1NC0xLjA4NC0uMjU0LTEuNjU2IDAtLjg3LjEyOC0xLjc2OS42OTMtMi40ODQuNTc5LS43MzMgMS40OTQtMS4xMjQgMi43MjQtMS4yNjEgMS4yMDYtLjEzNCAyLjI2Mi4wMzQgMi45NDQuNzY1LjA1LjA1My4wOTYuMTA4LjEzOS4xNjUuMDQ0LS4wNTcuMDk0LS4xMTIuMTQzLS4xNjUuNjgyLS43MzEgMS43MzgtLjg5OSAyLjk0NC0uNzY1IDEuMjMuMTM3IDIuMTQ1LjUyOCAyLjcyNCAxLjI2MS41NjYuNzE1LjY5MyAxLjYxNC42OTMgMi40ODQgMCAuNTcyLS4wNTMgMS4xNDgtLjI1NCAxLjY1Ni4wNjYuMjI4LjA5OC40MjkuMTI2LjYxMi4wMTIuMDc2LjAyNC4xNDguMDM3LjIxOC45MjQuMzg1IDEuNTIyIDEuNDcxIDEuNTkxIDIuMDk1djEuODcyYzAgLjc2Ni0zLjM1MSAzLjc5NS04LjAwMiAzLjc5NVptMC0xLjQ4NWMyLjI4IDAgNC41ODQtMS4xMSA1LjAwMi0xLjQzM1Y3Ljg2MmwtLjAyMy0uMTE2Yy0uNDkuMjEtMS4wNzUuMjkxLTEuNzI3LjI5MS0xLjE0NiAwLTIuMDU5LS4zMjctMi43MS0uOTkxQTMuMjIyIDMuMjIyIDAgMCAxIDggNi4zMDNhMy4yNCAzLjI0IDAgMCAxLS41NDQuNzQzYy0uNjUuNjY0LTEuNTYzLjk5MS0yLjcxLjk5MS0uNjUyIDAtMS4yMzYtLjA4MS0xLjcyNy0uMjkxbC0uMDIzLjExNnY0LjI1NWMuNDE5LjMyMyAyLjcyMiAxLjQzMyA1LjAwMiAxLjQzM1pNNi43NjIgMi44M2MtLjE5My0uMjA2LS42MzctLjQxMy0xLjY4Mi0uMjk3LTEuMDE5LjExMy0xLjQ3OS40MDQtMS43MTMuNy0uMjQ3LjMxMi0uMzY5Ljc4OS0uMzY5IDEuNTU0IDAgLjc5My4xMjkgMS4xNzEuMzA4IDEuMzcxLjE2Mi4xODEuNTE5LjM3OSAxLjQ0Mi4zNzkuODUzIDAgMS4zMzktLjIzNSAxLjYzOC0uNTQuMzE1LS4zMjIuNTI3LS44MjcuNjE3LTEuNTUzLjExNy0uOTM1LS4wMzctMS4zOTUtLjI0MS0xLjYxNFptNC4xNTUtLjI5N2MtMS4wNDQtLjExNi0xLjQ4OC4wOTEtMS42ODEuMjk3LS4yMDQuMjE5LS4zNTkuNjc5LS4yNDIgMS42MTQuMDkxLjcyNi4zMDMgMS4yMzEuNjE4IDEuNTUzLjI5OS4zMDUuNzg0LjU0IDEuNjM4LjU0LjkyMiAwIDEuMjgtLjE5OCAxLjQ0Mi0uMzc5LjE3OS0uMi4zMDgtLjU3OC4zMDgtMS4zNzEgMC0uNzY1LS4xMjMtMS4yNDItLjM3LTEuNTU0LS4yMzMtLjI5Ni0uNjkzLS41ODctMS43MTMtLjdaXCI+PC9wYXRoPjxwYXRoIGQ9XCJNNi4yNSA5LjAzN2EuNzUuNzUgMCAwIDEgLjc1Ljc1djEuNTAxYS43NS43NSAwIDAgMS0xLjUgMFY5Ljc4N2EuNzUuNzUgMCAwIDEgLjc1LS43NVptNC4yNS43NXYxLjUwMWEuNzUuNzUgMCAwIDEtMS41IDBWOS43ODdhLjc1Ljc1IDAgMCAxIDEuNSAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC90ZW1wbGF0ZT5cblxuPHRlbXBsYXRlIGlkPVwiY29waWxvdC1lcnJvci1pY29uXCI+XG4gIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWNvcGlsb3QtZXJyb3JcIj5cbiAgICA8cGF0aCBkPVwiTTE2IDExLjI0YzAgLjExMi0uMDcyLjI3NC0uMjEuNDY3TDEzIDkuNjg4VjcuODYybC0uMDIzLS4xMTZjLS40OS4yMS0xLjA3NS4yOTEtMS43MjcuMjkxLS4xOTggMC0uMzg4LS4wMDktLjU3MS0uMDI5TDYuODMzIDUuMjI2YTQuMDEgNC4wMSAwIDAgMCAuMTctLjc4MmMuMTE3LS45MzUtLjAzNy0xLjM5NS0uMjQxLTEuNjE0LS4xOTMtLjIwNi0uNjM3LS40MTMtMS42ODItLjI5Ny0uNjgzLjA3Ni0xLjExNS4yMzEtMS4zOTUuNDE1bC0xLjI1Ny0uOTFjLjU3OS0uNTY0IDEuNDEzLS44NzcgMi40ODUtLjk5NiAxLjIwNi0uMTM0IDIuMjYyLjAzNCAyLjk0NC43NjUuMDUuMDUzLjA5Ni4xMDguMTM5LjE2NS4wNDQtLjA1Ny4wOTQtLjExMi4xNDMtLjE2NS42ODItLjczMSAxLjczOC0uODk5IDIuOTQ0LS43NjUgMS4yMy4xMzcgMi4xNDUuNTI4IDIuNzI0IDEuMjYxLjU2Ni43MTUuNjkzIDEuNjE0LjY5MyAyLjQ4NCAwIC41NzItLjA1MyAxLjE0OC0uMjU0IDEuNjU2LjA2Ni4yMjguMDk4LjQyOS4xMjYuNjEyLjAxMi4wNzYuMDI0LjE0OC4wMzcuMjE4LjkyNC4zODUgMS41MjIgMS40NzEgMS41OTEgMi4wOTVabS01LjA4My04LjcwN2MtMS4wNDQtLjExNi0xLjQ4OC4wOTEtMS42ODEuMjk3LS4yMDQuMjE5LS4zNTkuNjc5LS4yNDIgMS42MTQuMDkxLjcyNi4zMDMgMS4yMzEuNjE4IDEuNTUzLjI5OS4zMDUuNzg0LjU0IDEuNjM4LjU0LjkyMiAwIDEuMjgtLjE5OCAxLjQ0Mi0uMzc5LjE3OS0uMi4zMDgtLjU3OC4zMDgtMS4zNzEgMC0uNzY1LS4xMjMtMS4yNDItLjM3LTEuNTU0LS4yMzMtLjI5Ni0uNjkzLS41ODctMS43MTMtLjdabTIuNTExIDExLjA3NGMtMS4zOTMuNzc2LTMuMjcyIDEuNDI4LTUuNDMgMS40MjgtNC41NjIgMC03Ljg3My0yLjkxNC03Ljk5OC0zLjc0OVY5LjMzOGMuMDg1LS42MjguNjc3LTEuNjg2IDEuNTg4LTIuMDY1LjAxMy0uMDcuMDI0LS4xNDMuMDM2LS4yMTguMDI5LS4xODMuMDYtLjM4NC4xMjYtLjYxMi0uMTgtLjQ1NS0uMjQxLS45NjMtLjI1Mi0xLjQ3NUwuMzEgNC4xMDdBLjc0Ny43NDcgMCAwIDEgMCAzLjUwOVYzLjQ5YS43NDguNzQ4IDAgMCAxIC42MjUtLjczYy4xNTYtLjAyNi4zMDYuMDQ3LjQzNS4xMzlsMTQuNjY3IDEwLjU3OGEuNTkyLjU5MiAwIDAgMSAuMjI3LjI2NC43NTIuNzUyIDAgMCAxIC4wNDYuMjQ5di4wMjJhLjc1Ljc1IDAgMCAxLTEuMTkuNTk2Wm0tMS4zNjctLjk5MUw1LjYzNSA3Ljk2NGE1LjEyOCA1LjEyOCAwIDAgMS0uODg5LjA3M2MtLjY1MiAwLTEuMjM2LS4wODEtMS43MjctLjI5MWwtLjAyMy4xMTZ2NC4yNTVjLjQxOS4zMjMgMi43MjIgMS40MzMgNS4wMDIgMS40MzMgMS41MzkgMCAzLjA4OS0uNTA1IDQuMDYzLS45MzRaXCI+PC9wYXRoPlxuPC9zdmc+XG48L3RlbXBsYXRlPlxuXG48dGVtcGxhdGUgaWQ9XCJ3b3JrZmxvdy1pY29uXCI+XG4gIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLXdvcmtmbG93XCI+XG4gICAgPHBhdGggZD1cIk0wIDEuNzVDMCAuNzg0Ljc4NCAwIDEuNzUgMGgzLjVDNi4yMTYgMCA3IC43ODQgNyAxLjc1djMuNUExLjc1IDEuNzUgMCAwIDEgNS4yNSA3SDR2NGExIDEgMCAwIDAgMSAxaDR2LTEuMjVDOSA5Ljc4NCA5Ljc4NCA5IDEwLjc1IDloMy41Yy45NjYgMCAxLjc1Ljc4NCAxLjc1IDEuNzV2My41QTEuNzUgMS43NSAwIDAgMSAxNC4yNSAxNmgtMy41QTEuNzUgMS43NSAwIDAgMSA5IDE0LjI1di0uNzVINUEyLjUgMi41IDAgMCAxIDIuNSAxMVY3aC0uNzVBMS43NSAxLjc1IDAgMCAxIDAgNS4yNVptMS43NS0uMjVhLjI1LjI1IDAgMCAwLS4yNS4yNXYzLjVjMCAuMTM4LjExMi4yNS4yNS4yNWgzLjVhLjI1LjI1IDAgMCAwIC4yNS0uMjV2LTMuNWEuMjUuMjUgMCAwIDAtLjI1LS4yNVptOSA5YS4yNS4yNSAwIDAgMC0uMjUuMjV2My41YzAgLjEzOC4xMTIuMjUuMjUuMjVoMy41YS4yNS4yNSAwIDAgMCAuMjUtLjI1di0zLjVhLjI1LjI1IDAgMCAwLS4yNS0uMjVaXCI+PC9wYXRoPlxuPC9zdmc+XG48L3RlbXBsYXRlPlxuXG48dGVtcGxhdGUgaWQ9XCJib29rLWljb25cIj5cbiAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tYm9va1wiPlxuICAgIDxwYXRoIGQ9XCJNMCAxLjc1QS43NS43NSAwIDAgMSAuNzUgMWg0LjI1M2MxLjIyNyAwIDIuMzE3LjU5IDMgMS41MDFBMy43NDMgMy43NDMgMCAwIDEgMTEuMDA2IDFoNC4yNDVhLjc1Ljc1IDAgMCAxIC43NS43NXYxMC41YS43NS43NSAwIDAgMS0uNzUuNzVoLTQuNTA3YTIuMjUgMi4yNSAwIDAgMC0xLjU5MS42NTlsLS42MjIuNjIxYS43NS43NSAwIDAgMS0xLjA2IDBsLS42MjItLjYyMUEyLjI1IDIuMjUgMCAwIDAgNS4yNTggMTNILjc1YS43NS43NSAwIDAgMS0uNzUtLjc1Wm03LjI1MSAxMC4zMjQuMDA0LTUuMDczLS4wMDItMi4yNTNBMi4yNSAyLjI1IDAgMCAwIDUuMDAzIDIuNUgxLjV2OWgzLjc1N2EzLjc1IDMuNzUgMCAwIDEgMS45OTQuNTc0Wk04Ljc1NSA0Ljc1bC0uMDA0IDcuMzIyYTMuNzUyIDMuNzUyIDAgMCAxIDEuOTkyLS41NzJIMTQuNXYtOWgtMy40OTVhMi4yNSAyLjI1IDAgMCAwLTIuMjUgMi4yNVpcIj48L3BhdGg+XG48L3N2Zz5cbjwvdGVtcGxhdGU+XG5cbjx0ZW1wbGF0ZSBpZD1cImNvZGUtcmV2aWV3LWljb25cIj5cbiAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tY29kZS1yZXZpZXdcIj5cbiAgICA8cGF0aCBkPVwiTTEuNzUgMWgxMi41Yy45NjYgMCAxLjc1Ljc4NCAxLjc1IDEuNzV2OC41QTEuNzUgMS43NSAwIDAgMSAxNC4yNSAxM0g4LjA2MWwtMi41NzQgMi41NzNBMS40NTggMS40NTggMCAwIDEgMyAxNC41NDNWMTNIMS43NUExLjc1IDEuNzUgMCAwIDEgMCAxMS4yNXYtOC41QzAgMS43ODQuNzg0IDEgMS43NSAxWk0xLjUgMi43NXY4LjVjMCAuMTM4LjExMi4yNS4yNS4yNWgyYS43NS43NSAwIDAgMSAuNzUuNzV2Mi4xOWwyLjcyLTIuNzJhLjc0OS43NDkgMCAwIDEgLjUzLS4yMmg2LjVhLjI1LjI1IDAgMCAwIC4yNS0uMjV2LTguNWEuMjUuMjUgMCAwIDAtLjI1LS4yNUgxLjc1YS4yNS4yNSAwIDAgMC0uMjUuMjVabTUuMjggMS43MmEuNzUuNzUgMCAwIDEgMCAxLjA2TDUuMzEgN2wxLjQ3IDEuNDdhLjc1MS43NTEgMCAwIDEtLjAxOCAxLjA0Mi43NTEuNzUxIDAgMCAxLTEuMDQyLjAxOGwtMi0yYS43NS43NSAwIDAgMSAwLTEuMDZsMi0yYS43NS43NSAwIDAgMSAxLjA2IDBabTIuNDQgMGEuNzUuNzUgMCAwIDEgMS4wNiAwbDIgMmEuNzUuNzUgMCAwIDEgMCAxLjA2bC0yIDJhLjc1MS43NTEgMCAwIDEtMS4wNDItLjAxOC43NTEuNzUxIDAgMCAxLS4wMTgtMS4wNDJMMTAuNjkgNyA5LjIyIDUuNTNhLjc1Ljc1IDAgMCAxIDAtMS4wNlpcIj48L3BhdGg+XG48L3N2Zz5cbjwvdGVtcGxhdGU+XG5cbjx0ZW1wbGF0ZSBpZD1cImNvZGVzcGFjZXMtaWNvblwiPlxuICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1jb2Rlc3BhY2VzXCI+XG4gICAgPHBhdGggZD1cIk0wIDExLjI1YzAtLjk2Ni43ODQtMS43NSAxLjc1LTEuNzVoMTIuNWMuOTY2IDAgMS43NS43ODQgMS43NSAxLjc1djNBMS43NSAxLjc1IDAgMCAxIDE0LjI1IDE2SDEuNzVBMS43NSAxLjc1IDAgMCAxIDAgMTQuMjVabTItOS41QzIgLjc4NCAyLjc4NCAwIDMuNzUgMGg4LjVDMTMuMjE2IDAgMTQgLjc4NCAxNCAxLjc1djVhMS43NSAxLjc1IDAgMCAxLTEuNzUgMS43NWgtOC41QTEuNzUgMS43NSAwIDAgMSAyIDYuNzVabTEuNzUtLjI1YS4yNS4yNSAwIDAgMC0uMjUuMjV2NWMwIC4xMzguMTEyLjI1LjI1LjI1aDguNWEuMjUuMjUgMCAwIDAgLjI1LS4yNXYtNWEuMjUuMjUgMCAwIDAtLjI1LS4yNVptLTIgOS41YS4yNS4yNSAwIDAgMC0uMjUuMjV2M2MwIC4xMzguMTEyLjI1LjI1LjI1aDEyLjVhLjI1LjI1IDAgMCAwIC4yNS0uMjV2LTNhLjI1LjI1IDAgMCAwLS4yNS0uMjVaXCI+PC9wYXRoPjxwYXRoIGQ9XCJNNyAxMi43NWEuNzUuNzUgMCAwIDEgLjc1LS43NWg0LjVhLjc1Ljc1IDAgMCAxIDAgMS41aC00LjVhLjc1Ljc1IDAgMCAxLS43NS0uNzVabS00IDBhLjc1Ljc1IDAgMCAxIC43NS0uNzVoLjVhLjc1Ljc1IDAgMCAxIDAgMS41aC0uNWEuNzUuNzUgMCAwIDEtLjc1LS43NVpcIj48L3BhdGg+XG48L3N2Zz5cbjwvdGVtcGxhdGU+XG5cbjx0ZW1wbGF0ZSBpZD1cImNvbW1lbnQtaWNvblwiPlxuICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1jb21tZW50XCI+XG4gICAgPHBhdGggZD1cIk0xIDIuNzVDMSAxLjc4NCAxLjc4NCAxIDIuNzUgMWgxMC41Yy45NjYgMCAxLjc1Ljc4NCAxLjc1IDEuNzV2Ny41QTEuNzUgMS43NSAwIDAgMSAxMy4yNSAxMkg5LjA2bC0yLjU3MyAyLjU3M0ExLjQ1OCAxLjQ1OCAwIDAgMSA0IDEzLjU0M1YxMkgyLjc1QTEuNzUgMS43NSAwIDAgMSAxIDEwLjI1Wm0xLjc1LS4yNWEuMjUuMjUgMCAwIDAtLjI1LjI1djcuNWMwIC4xMzguMTEyLjI1LjI1LjI1aDJhLjc1Ljc1IDAgMCAxIC43NS43NXYyLjE5bDIuNzItMi43MmEuNzQ5Ljc0OSAwIDAgMSAuNTMtLjIyaDQuNWEuMjUuMjUgMCAwIDAgLjI1LS4yNXYtNy41YS4yNS4yNSAwIDAgMC0uMjUtLjI1WlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC90ZW1wbGF0ZT5cblxuPHRlbXBsYXRlIGlkPVwiY29tbWVudC1kaXNjdXNzaW9uLWljb25cIj5cbiAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tY29tbWVudC1kaXNjdXNzaW9uXCI+XG4gICAgPHBhdGggZD1cIk0xLjc1IDFoOC41Yy45NjYgMCAxLjc1Ljc4NCAxLjc1IDEuNzV2NS41QTEuNzUgMS43NSAwIDAgMSAxMC4yNSAxMEg3LjA2MWwtMi41NzQgMi41NzNBMS40NTggMS40NTggMCAwIDEgMiAxMS41NDNWMTBoLS4yNUExLjc1IDEuNzUgMCAwIDEgMCA4LjI1di01LjVDMCAxLjc4NC43ODQgMSAxLjc1IDFaTTEuNSAyLjc1djUuNWMwIC4xMzguMTEyLjI1LjI1LjI1aDFhLjc1Ljc1IDAgMCAxIC43NS43NXYyLjE5bDIuNzItMi43MmEuNzQ5Ljc0OSAwIDAgMSAuNTMtLjIyaDMuNWEuMjUuMjUgMCAwIDAgLjI1LS4yNXYtNS41YS4yNS4yNSAwIDAgMC0uMjUtLjI1aC04LjVhLjI1LjI1IDAgMCAwLS4yNS4yNVptMTMgMmEuMjUuMjUgMCAwIDAtLjI1LS4yNWgtLjVhLjc1Ljc1IDAgMCAxIDAtMS41aC41Yy45NjYgMCAxLjc1Ljc4NCAxLjc1IDEuNzV2NS41QTEuNzUgMS43NSAwIDAgMSAxNC4yNSAxMkgxNHYxLjU0M2ExLjQ1OCAxLjQ1OCAwIDAgMS0yLjQ4NyAxLjAzTDkuMjIgMTIuMjhhLjc0OS43NDkgMCAwIDEgLjMyNi0xLjI3NS43NDkuNzQ5IDAgMCAxIC43MzQuMjE1bDIuMjIgMi4yMnYtMi4xOWEuNzUuNzUgMCAwIDEgLjc1LS43NWgxYS4yNS4yNSAwIDAgMCAuMjUtLjI1WlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC90ZW1wbGF0ZT5cblxuPHRlbXBsYXRlIGlkPVwib3JnYW5pemF0aW9uLWljb25cIj5cbiAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tb3JnYW5pemF0aW9uXCI+XG4gICAgPHBhdGggZD1cIk0xLjc1IDE2QTEuNzUgMS43NSAwIDAgMSAwIDE0LjI1VjEuNzVDMCAuNzg0Ljc4NCAwIDEuNzUgMGg4LjVDMTEuMjE2IDAgMTIgLjc4NCAxMiAxLjc1djEyLjVjMCAuMDg1LS4wMDYuMTY4LS4wMTguMjVoMi4yNjhhLjI1LjI1IDAgMCAwIC4yNS0uMjVWOC4yODVhLjI1LjI1IDAgMCAwLS4xMTEtLjIwOGwtMS4wNTUtLjcwM2EuNzQ5Ljc0OSAwIDEgMSAuODMyLTEuMjQ4bDEuMDU1LjcwM2MuNDg3LjMyNS43NzkuODcxLjc3OSAxLjQ1NnY1Ljk2NUExLjc1IDEuNzUgMCAwIDEgMTQuMjUgMTZoLTMuNWEuNzY2Ljc2NiAwIDAgMS0uMTk3LS4wMjZjLS4wOTkuMDE3LS4yLjAyNi0uMzAzLjAyNmgtM2EuNzUuNzUgMCAwIDEtLjc1LS43NVYxNGgtMXYxLjI1YS43NS43NSAwIDAgMS0uNzUuNzVabS0uMjUtMS43NWMwIC4xMzguMTEyLjI1LjI1LjI1SDR2LTEuMjVhLjc1Ljc1IDAgMCAxIC43NS0uNzVoMi41YS43NS43NSAwIDAgMSAuNzUuNzV2MS4yNWgyLjI1YS4yNS4yNSAwIDAgMCAuMjUtLjI1VjEuNzVhLjI1LjI1IDAgMCAwLS4yNS0uMjVoLTguNWEuMjUuMjUgMCAwIDAtLjI1LjI1Wk0zLjc1IDZoLjVhLjc1Ljc1IDAgMCAxIDAgMS41aC0uNWEuNzUuNzUgMCAwIDEgMC0xLjVaTTMgMy43NUEuNzUuNzUgMCAwIDEgMy43NSAzaC41YS43NS43NSAwIDAgMSAwIDEuNWgtLjVBLjc1Ljc1IDAgMCAxIDMgMy43NVptNCAzQS43NS43NSAwIDAgMSA3Ljc1IDZoLjVhLjc1Ljc1IDAgMCAxIDAgMS41aC0uNUEuNzUuNzUgMCAwIDEgNyA2Ljc1Wk03Ljc1IDNoLjVhLjc1Ljc1IDAgMCAxIDAgMS41aC0uNWEuNzUuNzUgMCAwIDEgMC0xLjVaTTMgOS43NUEuNzUuNzUgMCAwIDEgMy43NSA5aC41YS43NS43NSAwIDAgMSAwIDEuNWgtLjVBLjc1Ljc1IDAgMCAxIDMgOS43NVpNNy43NSA5aC41YS43NS43NSAwIDAgMSAwIDEuNWgtLjVhLjc1Ljc1IDAgMCAxIDAtMS41WlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC90ZW1wbGF0ZT5cblxuPHRlbXBsYXRlIGlkPVwicm9ja2V0LWljb25cIj5cbiAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tcm9ja2V0XCI+XG4gICAgPHBhdGggZD1cIk0xNC4wNjQgMGguMTg2QzE1LjIxNiAwIDE2IC43ODQgMTYgMS43NXYuMTg2YTguNzUyIDguNzUyIDAgMCAxLTIuNTY0IDYuMTg2bC0uNDU4LjQ1OWMtLjMxNC4zMTQtLjY0MS42MTYtLjk3OS45MDR2My4yMDdjMCAuNjA4LS4zMTUgMS4xNzItLjgzMyAxLjQ5bC0yLjc3NCAxLjcwN2EuNzQ5Ljc0OSAwIDAgMS0xLjExLS40MThsLS45NTQtMy4xMDJhMS4yMTQgMS4yMTQgMCAwIDEtLjE0NS0uMTI1TDMuNzU0IDkuODE2YTEuMjE4IDEuMjE4IDAgMCAxLS4xMjQtLjE0NUwuNTI4IDguNzE3YS43NDkuNzQ5IDAgMCAxLS40MTgtMS4xMWwxLjcxLTIuNzc0QTEuNzQ4IDEuNzQ4IDAgMCAxIDMuMzEgNGgzLjIwNGMuMjg4LS4zMzguNTktLjY2NS45MDQtLjk3OWwuNDU5LS40NThBOC43NDkgOC43NDkgMCAwIDEgMTQuMDY0IDBaTTguOTM4IDMuNjIzaC0uMDAybC0uNDU4LjQ1OGMtLjc2Ljc2LTEuNDM3IDEuNTk4LTIuMDIgMi41bC0xLjUgMi4zMTcgMi4xNDMgMi4xNDMgMi4zMTctMS41Yy45MDItLjU4MyAxLjc0LTEuMjYgMi40OTktMi4wMmwuNDU5LS40NThhNy4yNSA3LjI1IDAgMCAwIDIuMTIzLTUuMTI3VjEuNzVhLjI1LjI1IDAgMCAwLS4yNS0uMjVoLS4xODZhNy4yNDkgNy4yNDkgMCAwIDAtNS4xMjUgMi4xMjNaTTMuNTYgMTQuNTZjLS43MzIuNzMyLTIuMzM0IDEuMDQ1LTMuMDA1IDEuMTQ4YS4yMzQuMjM0IDAgMCAxLS4yMDEtLjA2NC4yMzQuMjM0IDAgMCAxLS4wNjQtLjIwMWMuMTAzLS42NzEuNDE2LTIuMjczIDEuMTUtMy4wMDNhMS41MDIgMS41MDIgMCAxIDEgMi4xMiAyLjEyWm02Ljk0LTMuOTM1Yy0uMDg4LjA2LS4xNzcuMTE4LS4yNjYuMTc1bC0yLjM1IDEuNTIxLjU0OCAxLjc4MyAxLjk0OS0xLjJhLjI1LjI1IDAgMCAwIC4xMTktLjIxM1pNMy42NzggOC4xMTYgNS4yIDUuNzY2Yy4wNTgtLjA5LjExNy0uMTc4LjE3Ni0uMjY2SDMuMzA5YS4yNS4yNSAwIDAgMC0uMjEzLjExOWwtMS4yIDEuOTVaTTEyIDVhMSAxIDAgMSAxLTIgMCAxIDEgMCAwIDEgMiAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC90ZW1wbGF0ZT5cblxuPHRlbXBsYXRlIGlkPVwic2hpZWxkLWNoZWNrLWljb25cIj5cbiAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tc2hpZWxkLWNoZWNrXCI+XG4gICAgPHBhdGggZD1cIm04LjUzMy4xMzMgNS4yNSAxLjY4QTEuNzUgMS43NSAwIDAgMSAxNSAzLjQ4VjdjMCAxLjU2Ni0uMzIgMy4xODItMS4zMDMgNC42ODItLjk4MyAxLjQ5OC0yLjU4NSAyLjgxMy01LjAzMiAzLjg1NWExLjY5NyAxLjY5NyAwIDAgMS0xLjMzIDBjLTIuNDQ3LTEuMDQyLTQuMDQ5LTIuMzU3LTUuMDMyLTMuODU1QzEuMzIgMTAuMTgyIDEgOC41NjYgMSA3VjMuNDhhMS43NSAxLjc1IDAgMCAxIDEuMjE3LTEuNjY3bDUuMjUtMS42OGExLjc0OCAxLjc0OCAwIDAgMSAxLjA2NiAwWm0tLjYxIDEuNDI5LjAwMS4wMDEtNS4yNSAxLjY4YS4yNTEuMjUxIDAgMCAwLS4xNzQuMjM3VjdjMCAxLjM2LjI3NSAyLjY2NiAxLjA1NyAzLjg1OS43ODQgMS4xOTQgMi4xMjEgMi4zNDIgNC4zNjYgMy4yOThhLjE5Ni4xOTYgMCAwIDAgLjE1NCAwYzIuMjQ1LS45NTcgMy41ODItMi4xMDMgNC4zNjYtMy4yOTdDMTMuMjI1IDkuNjY2IDEzLjUgOC4zNTggMTMuNSA3VjMuNDhhLjI1LjI1IDAgMCAwLS4xNzQtLjIzOGwtNS4yNS0xLjY4YS4yNS4yNSAwIDAgMC0uMTUzIDBaTTExLjI4IDYuMjhsLTMuNSAzLjVhLjc1Ljc1IDAgMCAxLTEuMDYgMGwtMS41LTEuNWEuNzQ5Ljc0OSAwIDAgMSAuMzI2LTEuMjc1Ljc0OS43NDkgMCAwIDEgLjczNC4yMTVsLjk3Ljk3IDIuOTctMi45N2EuNzUxLjc1MSAwIDAgMSAxLjA0Mi4wMTguNzUxLjc1MSAwIDAgMSAuMDE4IDEuMDQyWlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC90ZW1wbGF0ZT5cblxuPHRlbXBsYXRlIGlkPVwiaGVhcnQtaWNvblwiPlxuICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1oZWFydFwiPlxuICAgIDxwYXRoIGQ9XCJtOCAxNC4yNS4zNDUuNjY2YS43NS43NSAwIDAgMS0uNjkgMGwtLjAwOC0uMDA0LS4wMTgtLjAxYTcuMTUyIDcuMTUyIDAgMCAxLS4zMS0uMTcgMjIuMDU1IDIyLjA1NSAwIDAgMS0zLjQzNC0yLjQxNEMyLjA0NSAxMC43MzEgMCA4LjM1IDAgNS41IDAgMi44MzYgMi4wODYgMSA0LjI1IDEgNS43OTcgMSA3LjE1MyAxLjgwMiA4IDMuMDIgOC44NDcgMS44MDIgMTAuMjAzIDEgMTEuNzUgMSAxMy45MTQgMSAxNiAyLjgzNiAxNiA1LjVjMCAyLjg1LTIuMDQ1IDUuMjMxLTMuODg1IDYuODE4YTIyLjA2NiAyMi4wNjYgMCAwIDEtMy43NDQgMi41ODRsLS4wMTguMDEtLjAwNi4wMDNoLS4wMDJaTTQuMjUgMi41Yy0xLjMzNiAwLTIuNzUgMS4xNjQtMi43NSAzIDAgMi4xNSAxLjU4IDQuMTQ0IDMuMzY1IDUuNjgyQTIwLjU4IDIwLjU4IDAgMCAwIDggMTMuMzkzYTIwLjU4IDIwLjU4IDAgMCAwIDMuMTM1LTIuMjExQzEyLjkyIDkuNjQ0IDE0LjUgNy42NSAxNC41IDUuNWMwLTEuODM2LTEuNDE0LTMtMi43NS0zLTEuMzczIDAtMi42MDkuOTg2LTMuMDI5IDIuNDU2YS43NDkuNzQ5IDAgMCAxLTEuNDQyIDBDNi44NTkgMy40ODYgNS42MjMgMi41IDQuMjUgMi41WlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC90ZW1wbGF0ZT5cblxuPHRlbXBsYXRlIGlkPVwic2VydmVyLWljb25cIj5cbiAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tc2VydmVyXCI+XG4gICAgPHBhdGggZD1cIk0xLjc1IDFoMTIuNWMuOTY2IDAgMS43NS43ODQgMS43NSAxLjc1djRjMCAuMzcyLS4xMTYuNzE3LS4zMTQgMSAuMTk4LjI4My4zMTQuNjI4LjMxNCAxdjRhMS43NSAxLjc1IDAgMCAxLTEuNzUgMS43NUgxLjc1QTEuNzUgMS43NSAwIDAgMSAwIDEyLjc1di00YzAtLjM1OC4xMDktLjcwNy4zMTQtMWExLjczOSAxLjczOSAwIDAgMS0uMzE0LTF2LTRDMCAxLjc4NC43ODQgMSAxLjc1IDFaTTEuNSAyLjc1djRjMCAuMTM4LjExMi4yNS4yNS4yNWgxMi41YS4yNS4yNSAwIDAgMCAuMjUtLjI1di00YS4yNS4yNSAwIDAgMC0uMjUtLjI1SDEuNzVhLjI1LjI1IDAgMCAwLS4yNS4yNVptLjI1IDUuNzVhLjI1LjI1IDAgMCAwLS4yNS4yNXY0YzAgLjEzOC4xMTIuMjUuMjUuMjVoMTIuNWEuMjUuMjUgMCAwIDAgLjI1LS4yNXYtNGEuMjUuMjUgMCAwIDAtLjI1LS4yNVpNNyA0Ljc1QS43NS43NSAwIDAgMSA3Ljc1IDRoNC41YS43NS43NSAwIDAgMSAwIDEuNWgtNC41QS43NS43NSAwIDAgMSA3IDQuNzVaTTcuNzUgMTBoNC41YS43NS43NSAwIDAgMSAwIDEuNWgtNC41YS43NS43NSAwIDAgMSAwLTEuNVpNMyA0Ljc1QS43NS43NSAwIDAgMSAzLjc1IDRoLjVhLjc1Ljc1IDAgMCAxIDAgMS41aC0uNUEuNzUuNzUgMCAwIDEgMyA0Ljc1Wk0zLjc1IDEwaC41YS43NS43NSAwIDAgMSAwIDEuNWgtLjVhLjc1Ljc1IDAgMCAxIDAtMS41WlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC90ZW1wbGF0ZT5cblxuPHRlbXBsYXRlIGlkPVwiZ2xvYmUtaWNvblwiPlxuICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1nbG9iZVwiPlxuICAgIDxwYXRoIGQ9XCJNOCAwYTggOCAwIDEgMSAwIDE2QTggOCAwIDAgMSA4IDBaTTUuNzggOC43NWE5LjY0IDkuNjQgMCAwIDAgMS4zNjMgNC4xNzdjLjI1NS40MjYuNTQyLjgzMi44NTcgMS4yMTUuMjQ1LS4yOTYuNTUxLS43MDUuODU3LTEuMjE1QTkuNjQgOS42NCAwIDAgMCAxMC4yMiA4Ljc1Wm00LjQ0LTEuNWE5LjY0IDkuNjQgMCAwIDAtMS4zNjMtNC4xNzdjLS4zMDctLjUxLS42MTItLjkxOS0uODU3LTEuMjE1YTkuOTI3IDkuOTI3IDAgMCAwLS44NTcgMS4yMTVBOS42NCA5LjY0IDAgMCAwIDUuNzggNy4yNVptLTUuOTQ0IDEuNUgxLjU0M2E2LjUwNyA2LjUwNyAwIDAgMCA0LjY2NiA1LjVjLS4xMjMtLjE4MS0uMjQtLjM2NS0uMzUyLS41NTItLjcxNS0xLjE5Mi0xLjQzNy0yLjg3NC0xLjU4MS00Ljk0OFptLTIuNzMzLTEuNWgyLjczM2MuMTQ0LTIuMDc0Ljg2Ni0zLjc1NiAxLjU4LTQuOTQ4LjEyLS4xOTcuMjM3LS4zODEuMzUzLS41NTJhNi41MDcgNi41MDcgMCAwIDAtNC42NjYgNS41Wm0xMC4xODEgMS41Yy0uMTQ0IDIuMDc0LS44NjYgMy43NTYtMS41OCA0Ljk0OC0uMTIuMTk3LS4yMzcuMzgxLS4zNTMuNTUyYTYuNTA3IDYuNTA3IDAgMCAwIDQuNjY2LTUuNVptMi43MzMtMS41YTYuNTA3IDYuNTA3IDAgMCAwLTQuNjY2LTUuNWMuMTIzLjE4MS4yNC4zNjUuMzUzLjU1Mi43MTQgMS4xOTIgMS40MzYgMi44NzQgMS41OCA0Ljk0OFpcIj48L3BhdGg+XG48L3N2Zz5cbjwvdGVtcGxhdGU+XG5cbjx0ZW1wbGF0ZSBpZD1cImlzc3VlLW9wZW5lZC1pY29uXCI+XG4gIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWlzc3VlLW9wZW5lZFwiPlxuICAgIDxwYXRoIGQ9XCJNOCA5LjVhMS41IDEuNSAwIDEgMCAwLTMgMS41IDEuNSAwIDAgMCAwIDNaXCI+PC9wYXRoPjxwYXRoIGQ9XCJNOCAwYTggOCAwIDEgMSAwIDE2QTggOCAwIDAgMSA4IDBaTTEuNSA4YTYuNSA2LjUgMCAxIDAgMTMgMCA2LjUgNi41IDAgMCAwLTEzIDBaXCI+PC9wYXRoPlxuPC9zdmc+XG48L3RlbXBsYXRlPlxuXG48dGVtcGxhdGUgaWQ9XCJkZXZpY2UtbW9iaWxlLWljb25cIj5cbiAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tZGV2aWNlLW1vYmlsZVwiPlxuICAgIDxwYXRoIGQ9XCJNMy43NSAwaDguNUMxMy4yMTYgMCAxNCAuNzg0IDE0IDEuNzV2MTIuNUExLjc1IDEuNzUgMCAwIDEgMTIuMjUgMTZoLTguNUExLjc1IDEuNzUgMCAwIDEgMiAxNC4yNVYxLjc1QzIgLjc4NCAyLjc4NCAwIDMuNzUgMFpNMy41IDEuNzV2MTIuNWMwIC4xMzguMTEyLjI1LjI1LjI1aDguNWEuMjUuMjUgMCAwIDAgLjI1LS4yNVYxLjc1YS4yNS4yNSAwIDAgMC0uMjUtLjI1aC04LjVhLjI1LjI1IDAgMCAwLS4yNS4yNVpNOCAxM2ExIDEgMCAxIDEgMC0yIDEgMSAwIDAgMSAwIDJaXCI+PC9wYXRoPlxuPC9zdmc+XG48L3RlbXBsYXRlPlxuXG48dGVtcGxhdGUgaWQ9XCJwYWNrYWdlLWljb25cIj5cbiAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tcGFja2FnZVwiPlxuICAgIDxwYXRoIGQ9XCJtOC44NzguMzkyIDUuMjUgMy4wNDVjLjU0LjMxNC44NzIuODkuODcyIDEuNTE0djYuMDk4YTEuNzUgMS43NSAwIDAgMS0uODcyIDEuNTE0bC01LjI1IDMuMDQ1YTEuNzUgMS43NSAwIDAgMS0xLjc1NiAwbC01LjI1LTMuMDQ1QTEuNzUgMS43NSAwIDAgMSAxIDExLjA0OVY0Ljk1MWMwLS42MjQuMzMyLTEuMjAxLjg3Mi0xLjUxNEw3LjEyMi4zOTJhMS43NSAxLjc1IDAgMCAxIDEuNzU2IDBaTTcuODc1IDEuNjlsLTQuNjMgMi42ODVMOCA3LjEzM2w0Ljc1NS0yLjc1OC00LjYzLTIuNjg1YS4yNDguMjQ4IDAgMCAwLS4yNSAwWk0yLjUgNS42Nzd2NS4zNzJjMCAuMDkuMDQ3LjE3MS4xMjUuMjE2bDQuNjI1IDIuNjgzVjguNDMyWm02LjI1IDguMjcxIDQuNjI1LTIuNjgzYS4yNS4yNSAwIDAgMCAuMTI1LS4yMTZWNS42NzdMOC43NSA4LjQzMlpcIj48L3BhdGg+XG48L3N2Zz5cbjwvdGVtcGxhdGU+XG5cbjx0ZW1wbGF0ZSBpZD1cImNyZWRpdC1jYXJkLWljb25cIj5cbiAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tY3JlZGl0LWNhcmRcIj5cbiAgICA8cGF0aCBkPVwiTTEwLjc1IDlhLjc1Ljc1IDAgMCAwIDAgMS41aDEuNWEuNzUuNzUgMCAwIDAgMC0xLjVoLTEuNVpcIj48L3BhdGg+PHBhdGggZD1cIk0wIDMuNzVDMCAyLjc4NC43ODQgMiAxLjc1IDJoMTIuNWMuOTY2IDAgMS43NS43ODQgMS43NSAxLjc1djguNUExLjc1IDEuNzUgMCAwIDEgMTQuMjUgMTRIMS43NUExLjc1IDEuNzUgMCAwIDEgMCAxMi4yNVpNMTQuNSA2LjVoLTEzdjUuNzVjMCAuMTM4LjExMi4yNS4yNS4yNWgxMi41YS4yNS4yNSAwIDAgMCAuMjUtLjI1Wm0wLTIuNzVhLjI1LjI1IDAgMCAwLS4yNS0uMjVIMS43NWEuMjUuMjUgMCAwIDAtLjI1LjI1VjVoMTNaXCI+PC9wYXRoPlxuPC9zdmc+XG48L3RlbXBsYXRlPlxuXG48dGVtcGxhdGUgaWQ9XCJwbGF5LWljb25cIj5cbiAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tcGxheVwiPlxuICAgIDxwYXRoIGQ9XCJNOCAwYTggOCAwIDEgMSAwIDE2QTggOCAwIDAgMSA4IDBaTTEuNSA4YTYuNSA2LjUgMCAxIDAgMTMgMCA2LjUgNi41IDAgMCAwLTEzIDBabTQuODc5LTIuNzczIDQuMjY0IDIuNTU5YS4yNS4yNSAwIDAgMSAwIC40MjhsLTQuMjY0IDIuNTU5QS4yNS4yNSAwIDAgMSA2IDEwLjU1OVY1LjQ0MmEuMjUuMjUgMCAwIDEgLjM3OS0uMjE1WlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC90ZW1wbGF0ZT5cblxuPHRlbXBsYXRlIGlkPVwiZ2lmdC1pY29uXCI+XG4gIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWdpZnRcIj5cbiAgICA8cGF0aCBkPVwiTTIgMi43NUEyLjc1IDIuNzUgMCAwIDEgNC43NSAwYy45ODMgMCAxLjg3My40MiAyLjU3IDEuMjMyLjI2OC4zMTguNDk3LjY2OC42OCAxLjA0Mi4xODMtLjM3NS40MTEtLjcyNS42OC0xLjA0NEM5LjM3Ni40MiAxMC4yNjYgMCAxMS4yNSAwYTIuNzUgMi43NSAwIDAgMSAyLjQ1IDRoLjU1Yy45NjYgMCAxLjc1Ljc4NCAxLjc1IDEuNzV2MmMwIC42OTgtLjQwOSAxLjMwMS0xIDEuNTgydjQuOTE4QTEuNzUgMS43NSAwIDAgMSAxMy4yNSAxNkgyLjc1QTEuNzUgMS43NSAwIDAgMSAxIDE0LjI1VjkuMzMyQy40MDkgOS4wNSAwIDguNDQ4IDAgNy43NXYtMkMwIDQuNzg0Ljc4NCA0IDEuNzUgNGguNTVjLS4xOTItLjM3NS0uMy0uOC0uMy0xLjI1Wk03LjI1IDkuNUgyLjV2NC43NWMwIC4xMzguMTEyLjI1LjI1LjI1aDQuNVptMS41IDB2NWg0LjVhLjI1LjI1IDAgMCAwIC4yNS0uMjVWOS41Wm0wLTRWOGg1LjVhLjI1LjI1IDAgMCAwIC4yNS0uMjV2LTJhLjI1LjI1IDAgMCAwLS4yNS0uMjVabS03IDBhLjI1LjI1IDAgMCAwLS4yNS4yNXYyYzAgLjEzOC4xMTIuMjUuMjUuMjVoNS41VjUuNWgtNS41Wm0zLTRhMS4yNSAxLjI1IDAgMCAwIDAgMi41aDIuMzA5Yy0uMjMzLS44MTgtLjU0Mi0xLjQwMS0uODc4LTEuNzkzLS40My0uNTAyLS45MTUtLjcwNy0xLjQzMS0uNzA3Wk04Ljk0MSA0aDIuMzA5YTEuMjUgMS4yNSAwIDAgMCAwLTIuNWMtLjUxNiAwLTEgLjIwNS0xLjQzLjcwNy0uMzM3LjM5Mi0uNjQ2Ljk3NS0uODc5IDEuNzkzWlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC90ZW1wbGF0ZT5cblxuPHRlbXBsYXRlIGlkPVwiY29kZS1zcXVhcmUtaWNvblwiPlxuICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1jb2RlLXNxdWFyZVwiPlxuICAgIDxwYXRoIGQ9XCJNMCAxLjc1QzAgLjc4NC43ODQgMCAxLjc1IDBoMTIuNUMxNS4yMTYgMCAxNiAuNzg0IDE2IDEuNzV2MTIuNUExLjc1IDEuNzUgMCAwIDEgMTQuMjUgMTZIMS43NUExLjc1IDEuNzUgMCAwIDEgMCAxNC4yNVptMS43NS0uMjVhLjI1LjI1IDAgMCAwLS4yNS4yNXYxMi41YzAgLjEzOC4xMTIuMjUuMjUuMjVoMTIuNWEuMjUuMjUgMCAwIDAgLjI1LS4yNVYxLjc1YS4yNS4yNSAwIDAgMC0uMjUtLjI1Wm03LjQ3IDMuOTdhLjc1Ljc1IDAgMCAxIDEuMDYgMGwyIDJhLjc1Ljc1IDAgMCAxIDAgMS4wNmwtMiAyYS43NDkuNzQ5IDAgMCAxLTEuMjc1LS4zMjYuNzQ5Ljc0OSAwIDAgMSAuMjE1LS43MzRMMTAuNjkgOCA5LjIyIDYuNTNhLjc1Ljc1IDAgMCAxIDAtMS4wNlpNNi43OCA2LjUzIDUuMzEgOGwxLjQ3IDEuNDdhLjc0OS43NDkgMCAwIDEtLjMyNiAxLjI3NS43NDkuNzQ5IDAgMCAxLS43MzQtLjIxNWwtMi0yYS43NS43NSAwIDAgMSAwLTEuMDZsMi0yYS43NTEuNzUxIDAgMCAxIDEuMDQyLjAxOC43NTEuNzUxIDAgMCAxIC4wMTggMS4wNDJaXCI+PC9wYXRoPlxuPC9zdmc+XG48L3RlbXBsYXRlPlxuXG48dGVtcGxhdGUgaWQ9XCJkZXZpY2UtZGVza3RvcC1pY29uXCI+XG4gIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWRldmljZS1kZXNrdG9wXCI+XG4gICAgPHBhdGggZD1cIk0xNC4yNSAxYy45NjYgMCAxLjc1Ljc4NCAxLjc1IDEuNzV2Ny41QTEuNzUgMS43NSAwIDAgMSAxNC4yNSAxMmgtMy43MjdjLjA5OSAxLjA0MS41MiAxLjg3MiAxLjI5MiAyLjc1N0EuNzUyLjc1MiAwIDAgMSAxMS4yNSAxNmgtNi41YS43NS43NSAwIDAgMS0uNTY1LTEuMjQzYy43NzItLjg4NSAxLjE5Mi0xLjcxNiAxLjI5Mi0yLjc1N0gxLjc1QTEuNzUgMS43NSAwIDAgMSAwIDEwLjI1di03LjVDMCAxLjc4NC43ODQgMSAxLjc1IDFaTTEuNzUgMi41YS4yNS4yNSAwIDAgMC0uMjUuMjV2Ny41YzAgLjEzOC4xMTIuMjUuMjUuMjVoMTIuNWEuMjUuMjUgMCAwIDAgLjI1LS4yNXYtNy41YS4yNS4yNSAwIDAgMC0uMjUtLjI1Wk05LjAxOCAxMkg2Ljk4MmE1LjcyIDUuNzIgMCAwIDEtLjc2NSAyLjVoMy41NjZhNS43MiA1LjcyIDAgMCAxLS43NjUtMi41WlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC90ZW1wbGF0ZT5cblxuICAgICAgICA8ZGl2IGNsYXNzPVwicG9zaXRpb24tcmVsYXRpdmVcIj5cbiAgICAgICAgICAgICAgICA8dWwgcm9sZT1cImxpc3Rib3hcIiBjbGFzcz1cIkFjdGlvbkxpc3RXcmFwIFF1ZXJ5QnVpbGRlci1MaXN0V3JhcFwiIGFyaWEtbGFiZWw9XCJTdWdnZXN0aW9uc1wiIGRhdGEtYWN0aW9uPVwiXG4gICAgICAgICAgICAgICAgICAgIGNvbWJvYm94LWNvbW1pdDpxdWVyeS1idWlsZGVyI2NvbWJvYm94Q29tbWl0XG4gICAgICAgICAgICAgICAgICAgIG1vdXNlZG93bjpxdWVyeS1idWlsZGVyI3Jlc3VsdHNNb3VzZWRvd25cbiAgICAgICAgICAgICAgICAgIFwiIGRhdGEtdGFyZ2V0PVwicXVlcnktYnVpbGRlci5yZXN1bHRzTGlzdFwiIGRhdGEtcGVyc2lzdC1saXN0PVwiZmFsc2VcIiBpZD1cInF1ZXJ5LWJ1aWxkZXItdGVzdC1yZXN1bHRzXCI+PC91bD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiRm9ybUNvbnRyb2wtaW5saW5lVmFsaWRhdGlvblwiIGlkPVwidmFsaWRhdGlvbi01ZDBiMjEzZC03OWI1LTQyNTQtYjlhNi0zODY1NWQ5YjI0NmRcIiBoaWRkZW49XCJoaWRkZW5cIj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJGb3JtQ29udHJvbC1pbmxpbmVWYWxpZGF0aW9uLS12aXN1YWxcIj5cbiAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjEyXCIgdmlld0JveD1cIjAgMCAxMiAxMlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjEyXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1hbGVydC1maWxsXCI+XG4gICAgPHBhdGggZD1cIk00Ljg1NS43MDhjLjUtLjg5NiAxLjc5LS44OTYgMi4yOSAwbDQuNjc1IDguMzUxYTEuMzEyIDEuMzEyIDAgMCAxLTEuMTQ2IDEuOTU0SDEuMzNBMS4zMTMgMS4zMTMgMCAwIDEgLjE4MyA5LjA1OFpNNyA3VjNINXY0Wm0tMSAzYTEgMSAwIDEgMCAwLTIgMSAxIDAgMCAwIDAgMlpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgICA8c3Bhbj48L3NwYW4+XG48L2Rpdj4gICAgPC9kaXY+XG4gICAgPGRpdiBkYXRhLXRhcmdldD1cInF1ZXJ5LWJ1aWxkZXIuc2NyZWVuUmVhZGVyRmVlZGJhY2tcIiBhcmlhLWxpdmU9XCJwb2xpdGVcIiBhcmlhLWF0b21pYz1cInRydWVcIiBjbGFzcz1cInNyLW9ubHlcIj48L2Rpdj5cbjwvcXVlcnktYnVpbGRlcj48L2Zvcm0+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBmbGV4LXJvdyBjb2xvci1mZy1tdXRlZCBweC0zIHRleHQtc21hbGwgY29sb3ItYmctZGVmYXVsdCBzZWFyY2gtZmVlZGJhY2stcHJvbXB0XCI+XG4gICAgICAgICAgICA8YSB0YXJnZXQ9XCJfYmxhbmtcIiBocmVmPVwiaHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vc2VhcmNoLWdpdGh1Yi9naXRodWItY29kZS1zZWFyY2gvdW5kZXJzdGFuZGluZy1naXRodWItY29kZS1zZWFyY2gtc3ludGF4XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxpbmsgY29sb3ItZmctYWNjZW50IHRleHQtbm9ybWFsIG1sLTJcIj5cbiAgICAgICAgICAgICAgU2VhcmNoIHN5bnRheCB0aXBzXG48L2E+ICAgICAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBmbGV4LTFcIj48L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG48L2Rpdj5cblxuICAgIDwvZGl2PlxuPC9tb2RhbC1kaWFsb2c+PC9kaXY+XG4gIDwvZGl2PlxuICA8ZGl2IGRhdGEtYWN0aW9uPVwiY2xpY2s6cWJzZWFyY2gtaW5wdXQjcmV0cmFjdFwiIGNsYXNzPVwiZGFyay1iYWNrZHJvcCBwb3NpdGlvbi1maXhlZFwiIGhpZGRlbj1cIlwiIGRhdGEtdGFyZ2V0PVwicWJzZWFyY2gtaW5wdXQuZGFya0JhY2tkcm9wXCI+PC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJjb2xvci1mZy1kZWZhdWx0XCI+XG4gICAgXG48ZGlhbG9nLWhlbHBlcj5cbiAgPGRpYWxvZyBkYXRhLXRhcmdldD1cInFic2VhcmNoLWlucHV0LmZlZWRiYWNrRGlhbG9nXCIgZGF0YS1hY3Rpb249XCJjbG9zZTpxYnNlYXJjaC1pbnB1dCNoYW5kbGVEaWFsb2dDbG9zZSBjYW5jZWw6cWJzZWFyY2gtaW5wdXQjaGFuZGxlRGlhbG9nQ2xvc2VcIiBpZD1cImZlZWRiYWNrLWRpYWxvZ1wiIGFyaWEtbW9kYWw9XCJ0cnVlXCIgYXJpYS1sYWJlbGxlZGJ5PVwiZmVlZGJhY2stZGlhbG9nLXRpdGxlXCIgYXJpYS1kZXNjcmliZWRieT1cImZlZWRiYWNrLWRpYWxvZy1kZXNjcmlwdGlvblwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJPdmVybGF5IE92ZXJsYXktd2hlbk5hcnJvdyBPdmVybGF5LS1zaXplLW1lZGl1bSBPdmVybGF5LS1tb3Rpb24tc2NhbGVGYWRlXCI+XG4gICAgPGRpdiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiT3ZlcmxheS1oZWFkZXJcIj5cbiAgPGRpdiBjbGFzcz1cIk92ZXJsYXktaGVhZGVyQ29udGVudFdyYXBcIj5cbiAgICA8ZGl2IGNsYXNzPVwiT3ZlcmxheS10aXRsZVdyYXBcIj5cbiAgICAgIDxoMSBjbGFzcz1cIk92ZXJsYXktdGl0bGUgXCIgaWQ9XCJmZWVkYmFjay1kaWFsb2ctdGl0bGVcIj5cbiAgICAgICAgUHJvdmlkZSBmZWVkYmFja1xuICAgICAgPC9oMT5cbiAgICAgICAgXG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cIk92ZXJsYXktYWN0aW9uV3JhcFwiPlxuICAgICAgPGJ1dHRvbiBkYXRhLWNsb3NlLWRpYWxvZy1pZD1cImZlZWRiYWNrLWRpYWxvZ1wiIGFyaWEtbGFiZWw9XCJDbG9zZVwiIHR5cGU9XCJidXR0b25cIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiY2xvc2UtYnV0dG9uIE92ZXJsYXktY2xvc2VCdXR0b25cIj48c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi14XCI+XG4gICAgPHBhdGggZD1cIk0zLjcyIDMuNzJhLjc1Ljc1IDAgMCAxIDEuMDYgMEw4IDYuOTRsMy4yMi0zLjIyYS43NDkuNzQ5IDAgMCAxIDEuMjc1LjMyNi43NDkuNzQ5IDAgMCAxLS4yMTUuNzM0TDkuMDYgOGwzLjIyIDMuMjJhLjc0OS43NDkgMCAwIDEtLjMyNiAxLjI3NS43NDkuNzQ5IDAgMCAxLS43MzQtLjIxNUw4IDkuMDZsLTMuMjIgMy4yMmEuNzUxLjc1MSAwIDAgMS0xLjA0Mi0uMDE4Ljc1MS43NTEgMCAwIDEtLjAxOC0xLjA0Mkw2Ljk0IDggMy43MiA0Ljc4YS43NS43NSAwIDAgMSAwLTEuMDZaXCI+PC9wYXRoPlxuPC9zdmc+PC9idXR0b24+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuICBcbjwvZGl2PlxuICAgICAgPHNjcm9sbGFibGUtcmVnaW9uIGRhdGEtbGFiZWxsZWQtYnk9XCJmZWVkYmFjay1kaWFsb2ctdGl0bGVcIiBkYXRhLWNhdGFseXN0PVwiXCIgc3R5bGU9XCJvdmVyZmxvdzogYXV0bztcIj5cbiAgICAgICAgPGRpdiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiT3ZlcmxheS1ib2R5XCI+ICAgICAgICA8IS0tICdcImAgLS0+PCEtLSA8L3RleHRhcmVhPjwveG1wPiAtLT48Zm9ybSBpZD1cImNvZGUtc2VhcmNoLWZlZWRiYWNrLWZvcm1cIiBkYXRhLXR1cmJvPVwiZmFsc2VcIiBhY3Rpb249XCIvc2VhcmNoL2ZlZWRiYWNrXCIgYWNjZXB0LWNoYXJzZXQ9XCJVVEYtOFwiIG1ldGhvZD1cInBvc3RcIj48aW5wdXQgdHlwZT1cImhpZGRlblwiIGRhdGEtY3NyZj1cInRydWVcIiBuYW1lPVwiYXV0aGVudGljaXR5X3Rva2VuXCIgdmFsdWU9XCI0ZVpBY3BYUUpzZ2x0TEZ0VE81MjM0VnJEMVMrOG12VVFPRjFaZ09ZaVNSSTVGN3IyMHhSQjl0cEZpMVhJR05qRGhkTU12Tmx1N2cwQ1p3M0hoQlZGQT09XCI+XG4gICAgICAgICAgPHA+V2UgcmVhZCBldmVyeSBwaWVjZSBvZiBmZWVkYmFjaywgYW5kIHRha2UgeW91ciBpbnB1dCB2ZXJ5IHNlcmlvdXNseS48L3A+XG4gICAgICAgICAgPHRleHRhcmVhIG5hbWU9XCJmZWVkYmFja1wiIGNsYXNzPVwiZm9ybS1jb250cm9sIHdpZHRoLWZ1bGwgbWItMlwiIHN0eWxlPVwiaGVpZ2h0OiAxMjBweFwiIGlkPVwiZmVlZGJhY2tcIj48L3RleHRhcmVhPlxuICAgICAgICAgIDxpbnB1dCBuYW1lPVwiaW5jbHVkZV9lbWFpbFwiIGlkPVwiaW5jbHVkZV9lbWFpbFwiIGFyaWEtbGFiZWw9XCJJbmNsdWRlIG15IGVtYWlsIGFkZHJlc3Mgc28gSSBjYW4gYmUgY29udGFjdGVkXCIgY2xhc3M9XCJmb3JtLWNvbnRyb2wgbXItMlwiIHR5cGU9XCJjaGVja2JveFwiPlxuICAgICAgICAgIDxsYWJlbCBmb3I9XCJpbmNsdWRlX2VtYWlsXCIgc3R5bGU9XCJmb250LXdlaWdodDogbm9ybWFsXCI+SW5jbHVkZSBteSBlbWFpbCBhZGRyZXNzIHNvIEkgY2FuIGJlIGNvbnRhY3RlZDwvbGFiZWw+XG48L2Zvcm0+PC9kaXY+XG4gICAgICA8L3Njcm9sbGFibGUtcmVnaW9uPlxuICAgICAgPGRpdiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiT3ZlcmxheS1mb290ZXIgT3ZlcmxheS1mb290ZXItLWFsaWduRW5kXCI+ICAgICAgICAgIDxidXR0b24gZGF0YS1jbG9zZS1kaWFsb2ctaWQ9XCJmZWVkYmFjay1kaWFsb2dcIiB0eXBlPVwiYnV0dG9uXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImJ0blwiPiAgICBDYW5jZWxcbjwvYnV0dG9uPlxuICAgICAgICAgIDxidXR0b24gZm9ybT1cImNvZGUtc2VhcmNoLWZlZWRiYWNrLWZvcm1cIiBkYXRhLWFjdGlvbj1cImNsaWNrOnFic2VhcmNoLWlucHV0I3N1Ym1pdEZlZWRiYWNrXCIgdHlwZT1cInN1Ym1pdFwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJidG4tcHJpbWFyeSBidG5cIj4gICAgU3VibWl0IGZlZWRiYWNrXG48L2J1dHRvbj5cbjwvZGl2PlxuPC9kaWFsb2c+PC9kaWFsb2ctaGVscGVyPlxuXG4gICAgPGN1c3RvbS1zY29wZXMgZGF0YS10YXJnZXQ9XCJxYnNlYXJjaC1pbnB1dC5jdXN0b21TY29wZXNNYW5hZ2VyXCIgZGF0YS1jYXRhbHlzdD1cIlwiPlxuICAgIFxuPGRpYWxvZy1oZWxwZXI+XG4gIDxkaWFsb2cgZGF0YS10YXJnZXQ9XCJjdXN0b20tc2NvcGVzLmN1c3RvbVNjb3Blc01vZGFsRGlhbG9nXCIgZGF0YS1hY3Rpb249XCJjbG9zZTpxYnNlYXJjaC1pbnB1dCNoYW5kbGVEaWFsb2dDbG9zZSBjYW5jZWw6cWJzZWFyY2gtaW5wdXQjaGFuZGxlRGlhbG9nQ2xvc2VcIiBpZD1cImN1c3RvbS1zY29wZXMtZGlhbG9nXCIgYXJpYS1tb2RhbD1cInRydWVcIiBhcmlhLWxhYmVsbGVkYnk9XCJjdXN0b20tc2NvcGVzLWRpYWxvZy10aXRsZVwiIGFyaWEtZGVzY3JpYmVkYnk9XCJjdXN0b20tc2NvcGVzLWRpYWxvZy1kZXNjcmlwdGlvblwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJPdmVybGF5IE92ZXJsYXktd2hlbk5hcnJvdyBPdmVybGF5LS1zaXplLW1lZGl1bSBPdmVybGF5LS1tb3Rpb24tc2NhbGVGYWRlXCI+XG4gICAgPGRpdiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiT3ZlcmxheS1oZWFkZXIgT3ZlcmxheS1oZWFkZXItLWRpdmlkZWRcIj5cbiAgPGRpdiBjbGFzcz1cIk92ZXJsYXktaGVhZGVyQ29udGVudFdyYXBcIj5cbiAgICA8ZGl2IGNsYXNzPVwiT3ZlcmxheS10aXRsZVdyYXBcIj5cbiAgICAgIDxoMSBjbGFzcz1cIk92ZXJsYXktdGl0bGUgXCIgaWQ9XCJjdXN0b20tc2NvcGVzLWRpYWxvZy10aXRsZVwiPlxuICAgICAgICBTYXZlZCBzZWFyY2hlc1xuICAgICAgPC9oMT5cbiAgICAgICAgPGgyIGlkPVwiY3VzdG9tLXNjb3Blcy1kaWFsb2ctZGVzY3JpcHRpb25cIiBjbGFzcz1cIk92ZXJsYXktZGVzY3JpcHRpb25cIj5Vc2Ugc2F2ZWQgc2VhcmNoZXMgdG8gZmlsdGVyIHlvdXIgcmVzdWx0cyBtb3JlIHF1aWNrbHk8L2gyPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJPdmVybGF5LWFjdGlvbldyYXBcIj5cbiAgICAgIDxidXR0b24gZGF0YS1jbG9zZS1kaWFsb2ctaWQ9XCJjdXN0b20tc2NvcGVzLWRpYWxvZ1wiIGFyaWEtbGFiZWw9XCJDbG9zZVwiIHR5cGU9XCJidXR0b25cIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiY2xvc2UtYnV0dG9uIE92ZXJsYXktY2xvc2VCdXR0b25cIj48c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi14XCI+XG4gICAgPHBhdGggZD1cIk0zLjcyIDMuNzJhLjc1Ljc1IDAgMCAxIDEuMDYgMEw4IDYuOTRsMy4yMi0zLjIyYS43NDkuNzQ5IDAgMCAxIDEuMjc1LjMyNi43NDkuNzQ5IDAgMCAxLS4yMTUuNzM0TDkuMDYgOGwzLjIyIDMuMjJhLjc0OS43NDkgMCAwIDEtLjMyNiAxLjI3NS43NDkuNzQ5IDAgMCAxLS43MzQtLjIxNUw4IDkuMDZsLTMuMjIgMy4yMmEuNzUxLjc1MSAwIDAgMS0xLjA0Mi0uMDE4Ljc1MS43NTEgMCAwIDEtLjAxOC0xLjA0Mkw2Ljk0IDggMy43MiA0Ljc4YS43NS43NSAwIDAgMSAwLTEuMDZaXCI+PC9wYXRoPlxuPC9zdmc+PC9idXR0b24+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuICBcbjwvZGl2PlxuICAgICAgPHNjcm9sbGFibGUtcmVnaW9uIGRhdGEtbGFiZWxsZWQtYnk9XCJjdXN0b20tc2NvcGVzLWRpYWxvZy10aXRsZVwiIGRhdGEtY2F0YWx5c3Q9XCJcIiBzdHlsZT1cIm92ZXJmbG93OiBhdXRvO1wiPlxuICAgICAgICA8ZGl2IGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJPdmVybGF5LWJvZHlcIj4gICAgICAgIDxkaXYgZGF0YS10YXJnZXQ9XCJjdXN0b20tc2NvcGVzLmN1c3RvbVNjb3Blc01vZGFsRGlhbG9nRmxhc2hcIj48L2Rpdj5cblxuICAgICAgICA8ZGl2IGhpZGRlbj1cIlwiIGNsYXNzPVwiY3JlYXRlLWN1c3RvbS1zY29wZS1mb3JtXCIgZGF0YS10YXJnZXQ9XCJjdXN0b20tc2NvcGVzLmNyZWF0ZUN1c3RvbVNjb3BlRm9ybVwiPlxuICAgICAgICA8IS0tICdcImAgLS0+PCEtLSA8L3RleHRhcmVhPjwveG1wPiAtLT48Zm9ybSBpZD1cImN1c3RvbS1zY29wZXMtZGlhbG9nLWZvcm1cIiBkYXRhLXR1cmJvPVwiZmFsc2VcIiBhY3Rpb249XCIvc2VhcmNoL2N1c3RvbV9zY29wZXNcIiBhY2NlcHQtY2hhcnNldD1cIlVURi04XCIgbWV0aG9kPVwicG9zdFwiPjxpbnB1dCB0eXBlPVwiaGlkZGVuXCIgZGF0YS1jc3JmPVwidHJ1ZVwiIG5hbWU9XCJhdXRoZW50aWNpdHlfdG9rZW5cIiB2YWx1ZT1cIjRIZ25MZTAyNmE0dzVjZFRaY25nSE5SMEMwYmFqaTFlaXpxeXQ4Z0NKUDJhNElkLys3K0FFeTdWOGFLZ2JnSWluK3ZJRG0zKzZWMkx1K2ZPTDh3ek5nPT1cIj5cbiAgICAgICAgICA8ZGl2IGRhdGEtdGFyZ2V0PVwiY3VzdG9tLXNjb3Blcy5jdXN0b21TY29wZXNNb2RhbERpYWxvZ0ZsYXNoXCI+PC9kaXY+XG5cbiAgICAgICAgICA8aW5wdXQgdHlwZT1cImhpZGRlblwiIGlkPVwiY3VzdG9tX3Njb3BlX2lkXCIgbmFtZT1cImN1c3RvbV9zY29wZV9pZFwiIGRhdGEtdGFyZ2V0PVwiY3VzdG9tLXNjb3Blcy5jdXN0b21TY29wZXNJZEZpZWxkXCI+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgPGxhYmVsIGZvcj1cImN1c3RvbV9zY29wZV9uYW1lXCI+TmFtZTwvbGFiZWw+XG4gICAgICAgICAgICA8YXV0by1jaGVjayBzcmM9XCIvc2VhcmNoL2N1c3RvbV9zY29wZXMvY2hlY2tfbmFtZVwiIHJlcXVpcmVkPVwiXCI+XG4gICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIG5hbWU9XCJjdXN0b21fc2NvcGVfbmFtZVwiIGlkPVwiY3VzdG9tX3Njb3BlX25hbWVcIiBkYXRhLXRhcmdldD1cImN1c3RvbS1zY29wZXMuY3VzdG9tU2NvcGVzTmFtZUZpZWxkXCIgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIiBhdXRvY29tcGxldGU9XCJvZmZcIiBwbGFjZWhvbGRlcj1cImdpdGh1Yi1ydWJ5XCIgcmVxdWlyZWQ9XCJcIiBtYXhsZW5ndGg9XCI1MFwiIHNwZWxsY2hlY2s9XCJmYWxzZVwiPlxuICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImhpZGRlblwiIGRhdGEtY3NyZj1cInRydWVcIiB2YWx1ZT1cImlkaTdhM1VTSzk5aHpNZjRrSWtJeW9SeXFhUEZHRzBIWTN4eithYkJHV2VGRFRNVmYxNU9lMkxaQWt6cGZBSSs2RThwVEpNK0JHOW5pL29WY1haYjV3PT1cIj5cbiAgICAgICAgICAgIDwvYXV0by1jaGVjaz5cbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCI+XG4gICAgICAgICAgICA8bGFiZWwgZm9yPVwiY3VzdG9tX3Njb3BlX3F1ZXJ5XCI+UXVlcnk8L2xhYmVsPlxuICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cImN1c3RvbV9zY29wZV9xdWVyeVwiIGlkPVwiY3VzdG9tX3Njb3BlX3F1ZXJ5XCIgZGF0YS10YXJnZXQ9XCJjdXN0b20tc2NvcGVzLmN1c3RvbVNjb3Blc1F1ZXJ5RmllbGRcIiBjbGFzcz1cImZvcm0tY29udHJvbFwiIGF1dG9jb21wbGV0ZT1cIm9mZlwiIHBsYWNlaG9sZGVyPVwiKHJlcG86bW9uYS9hIE9SIHJlcG86bW9uYS9iKSBBTkQgbGFuZzpweXRob25cIiByZXF1aXJlZD1cIlwiIG1heGxlbmd0aD1cIjUwMFwiPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPHAgY2xhc3M9XCJ0ZXh0LXNtYWxsIGNvbG9yLWZnLW11dGVkXCI+XG4gICAgICAgICAgICBUbyBzZWUgYWxsIGF2YWlsYWJsZSBxdWFsaWZpZXJzLCBzZWUgb3VyIDxhIGNsYXNzPVwiTGluay0taW5UZXh0QmxvY2tcIiBocmVmPVwiaHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vc2VhcmNoLWdpdGh1Yi9naXRodWItY29kZS1zZWFyY2gvdW5kZXJzdGFuZGluZy1naXRodWItY29kZS1zZWFyY2gtc3ludGF4XCI+ZG9jdW1lbnRhdGlvbjwvYT4uXG4gICAgICAgICAgPC9wPlxuPC9mb3JtPiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGRpdiBkYXRhLXRhcmdldD1cImN1c3RvbS1zY29wZXMubWFuYWdlQ3VzdG9tU2NvcGVzRm9ybVwiPlxuICAgICAgICAgIDxkaXYgZGF0YS10YXJnZXQ9XCJjdXN0b20tc2NvcGVzLmxpc3RcIj48L2Rpdj5cbiAgICAgICAgPC9kaXY+XG5cbjwvZGl2PlxuICAgICAgPC9zY3JvbGxhYmxlLXJlZ2lvbj5cbiAgICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIk92ZXJsYXktZm9vdGVyIE92ZXJsYXktZm9vdGVyLS1hbGlnbkVuZCBPdmVybGF5LWZvb3Rlci0tZGl2aWRlZFwiPiAgICAgICAgICA8YnV0dG9uIGRhdGEtYWN0aW9uPVwiY2xpY2s6Y3VzdG9tLXNjb3BlcyNjdXN0b21TY29wZXNDYW5jZWxcIiB0eXBlPVwiYnV0dG9uXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImJ0blwiPiAgICBDYW5jZWxcbjwvYnV0dG9uPlxuICAgICAgICAgIDxidXR0b24gZm9ybT1cImN1c3RvbS1zY29wZXMtZGlhbG9nLWZvcm1cIiBkYXRhLWFjdGlvbj1cImNsaWNrOmN1c3RvbS1zY29wZXMjY3VzdG9tU2NvcGVzU3VibWl0XCIgZGF0YS10YXJnZXQ9XCJjdXN0b20tc2NvcGVzLmN1c3RvbVNjb3Blc1N1Ym1pdEJ1dHRvblwiIHR5cGU9XCJzdWJtaXRcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiYnRuLXByaW1hcnkgYnRuXCI+ICAgIENyZWF0ZSBzYXZlZCBzZWFyY2hcbjwvYnV0dG9uPlxuPC9kaXY+XG48L2RpYWxvZz48L2RpYWxvZy1oZWxwZXI+XG4gICAgPC9jdXN0b20tc2NvcGVzPlxuICA8L2Rpdj5cbjwvcWJzZWFyY2gtaW5wdXQ+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwb3NpdGlvbi1yZWxhdGl2ZSBIZWFkZXJNZW51LWxpbmstd3JhcCBkLWxnLWlubGluZS1ibG9ja1wiPlxuICAgICAgICAgICAgICA8YSBocmVmPVwiL2xvZ2luP3JldHVybl90bz1odHRwcyUzQSUyRiUyRmdpdGh1Yi5jb20lMkZyYWlsc1wiIGNsYXNzPVwiSGVhZGVyTWVudS1saW5rIEhlYWRlck1lbnUtbGluay0tc2lnbi1pbiBIZWFkZXJNZW51LWJ1dHRvbiBmbGV4LXNocmluay0wIG5vLXVuZGVybGluZSBkLW5vbmUgZC1sZy1pbmxpbmUtZmxleCBib3JkZXIgYm9yZGVyLWxnLTAgcm91bmRlZCByb3VuZGVkLWxnLTAgcHgtMiBweS0xXCIgc3R5bGU9XCJtYXJnaW4tbGVmdDogMTJweDtcIiBkYXRhLWh5ZHJvLWNsaWNrPVwieyZxdW90O2V2ZW50X3R5cGUmcXVvdDs6JnF1b3Q7YXV0aGVudGljYXRpb24uY2xpY2smcXVvdDssJnF1b3Q7cGF5bG9hZCZxdW90Ozp7JnF1b3Q7bG9jYXRpb25faW5fcGFnZSZxdW90OzomcXVvdDtzaXRlIGhlYWRlciBtZW51JnF1b3Q7LCZxdW90O3JlcG9zaXRvcnlfaWQmcXVvdDs6bnVsbCwmcXVvdDthdXRoX3R5cGUmcXVvdDs6JnF1b3Q7U0lHTl9VUCZxdW90OywmcXVvdDtvcmlnaW5hdGluZ191cmwmcXVvdDs6JnF1b3Q7aHR0cHM6Ly9naXRodWIuY29tL3JhaWxzJnF1b3Q7LCZxdW90O3VzZXJfaWQmcXVvdDs6bnVsbH19XCIgZGF0YS1oeWRyby1jbGljay1obWFjPVwiNmY2ZDBhNTRiNWU0NzBlZGFkYjM1ZTQ4NWYyNTVkY2ZmN2QzNTc1NGIwM2U0ZjkzMzI4MjBkZDRjMWQ4ZjE5M1wiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O01hcmtldGluZyBuYXYmcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrIHRvIGdvIHRvIGhvbWVwYWdlJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3JlZl9wYWdlOk1hcmtldGluZztyZWZfY3RhOlNpZ24gaW47cmVmX2xvYzpIZWFkZXImcXVvdDt9XCI+XG4gICAgICAgICAgICAgICAgU2lnbiBpblxuICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICA8YSBocmVmPVwiL3NpZ251cD9yZWZfY3RhPVNpZ24rdXAmYW1wO3JlZl9sb2M9aGVhZGVyK2xvZ2dlZCtvdXQmYW1wO3JlZl9wYWdlPSUyRiUzQ29yZy1sb2dpbiUzRSZhbXA7c291cmNlPWhlYWRlclwiIGNsYXNzPVwiSGVhZGVyTWVudS1saW5rIEhlYWRlck1lbnUtbGluay0tc2lnbi11cCBIZWFkZXJNZW51LWJ1dHRvbiBmbGV4LXNocmluay0wIGQtZmxleCBkLWxnLWlubGluZS1mbGV4IG5vLXVuZGVybGluZSBib3JkZXIgY29sb3ItYm9yZGVyLWRlZmF1bHQgcm91bmRlZCBweC0yIHB5LTFcIiBkYXRhLWh5ZHJvLWNsaWNrPVwieyZxdW90O2V2ZW50X3R5cGUmcXVvdDs6JnF1b3Q7YXV0aGVudGljYXRpb24uY2xpY2smcXVvdDssJnF1b3Q7cGF5bG9hZCZxdW90Ozp7JnF1b3Q7bG9jYXRpb25faW5fcGFnZSZxdW90OzomcXVvdDtzaXRlIGhlYWRlciBtZW51JnF1b3Q7LCZxdW90O3JlcG9zaXRvcnlfaWQmcXVvdDs6bnVsbCwmcXVvdDthdXRoX3R5cGUmcXVvdDs6JnF1b3Q7U0lHTl9VUCZxdW90OywmcXVvdDtvcmlnaW5hdGluZ191cmwmcXVvdDs6JnF1b3Q7aHR0cHM6Ly9naXRodWIuY29tL3JhaWxzJnF1b3Q7LCZxdW90O3VzZXJfaWQmcXVvdDs6bnVsbH19XCIgZGF0YS1oeWRyby1jbGljay1obWFjPVwiNmY2ZDBhNTRiNWU0NzBlZGFkYjM1ZTQ4NWYyNTVkY2ZmN2QzNTc1NGIwM2U0ZjkzMzI4MjBkZDRjMWQ4ZjE5M1wiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O1NpZ24gdXAmcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrIHRvIHNpZ24gdXAgZm9yIGFjY291bnQmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7cmVmX3BhZ2U6LzxvcmctbG9naW4+O3JlZl9jdGE6U2lnbiB1cDtyZWZfbG9jOmhlYWRlciBsb2dnZWQgb3V0JnF1b3Q7fVwiPlxuICAgICAgICAgICAgICAgIFNpZ24gdXBcbiAgICAgICAgICAgICAgPC9hPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvaGVhZGVyPlxuXG4gICAgICA8ZGl2IGhpZGRlbj1cImhpZGRlblwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJqcy1zdGFsZS1zZXNzaW9uLWZsYXNoIHN0YWxlLXNlc3Npb24tZmxhc2ggZmxhc2ggZmxhc2gtd2FybiBmbGFzaC1mdWxsIG1iLTNcIj5cbiAgXG4gICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWFsZXJ0XCI+XG4gICAgPHBhdGggZD1cIk02LjQ1NyAxLjA0N2MuNjU5LTEuMjM0IDIuNDI3LTEuMjM0IDMuMDg2IDBsNi4wODIgMTEuMzc4QTEuNzUgMS43NSAwIDAgMSAxNC4wODIgMTVIMS45MThhMS43NSAxLjc1IDAgMCAxLTEuNTQzLTIuNTc1Wm0xLjc2My43MDdhLjI1LjI1IDAgMCAwLS40NCAwTDEuNjk4IDEzLjEzMmEuMjUuMjUgMCAwIDAgLjIyLjM2OGgxMi4xNjRhLjI1LjI1IDAgMCAwIC4yMi0uMzY4Wm0uNTMgMy45OTZ2Mi41YS43NS43NSAwIDAgMS0xLjUgMHYtMi41YS43NS43NSAwIDAgMSAxLjUgMFpNOSAxMWExIDEgMCAxIDEtMiAwIDEgMSAwIDAgMSAyIDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwianMtc3RhbGUtc2Vzc2lvbi1mbGFzaC1zaWduZWQtaW5cIiBoaWRkZW49XCJcIj5Zb3Ugc2lnbmVkIGluIHdpdGggYW5vdGhlciB0YWIgb3Igd2luZG93LiA8YSBjbGFzcz1cIkxpbmstLWluVGV4dEJsb2NrXCIgaHJlZj1cIlwiPlJlbG9hZDwvYT4gdG8gcmVmcmVzaCB5b3VyIHNlc3Npb24uPC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz1cImpzLXN0YWxlLXNlc3Npb24tZmxhc2gtc2lnbmVkLW91dFwiIGhpZGRlbj1cIlwiPllvdSBzaWduZWQgb3V0IGluIGFub3RoZXIgdGFiIG9yIHdpbmRvdy4gPGEgY2xhc3M9XCJMaW5rLS1pblRleHRCbG9ja1wiIGhyZWY9XCJcIj5SZWxvYWQ8L2E+IHRvIHJlZnJlc2ggeW91ciBzZXNzaW9uLjwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJqcy1zdGFsZS1zZXNzaW9uLWZsYXNoLXN3aXRjaGVkXCIgaGlkZGVuPVwiXCI+WW91IHN3aXRjaGVkIGFjY291bnRzIG9uIGFub3RoZXIgdGFiIG9yIHdpbmRvdy4gPGEgY2xhc3M9XCJMaW5rLS1pblRleHRCbG9ja1wiIGhyZWY9XCJcIj5SZWxvYWQ8L2E+IHRvIHJlZnJlc2ggeW91ciBzZXNzaW9uLjwvc3Bhbj5cblxuICAgIDxidXR0b24gaWQ9XCJpY29uLWJ1dHRvbi0xODE5MDA5YS0wOWI5LTQ5MTgtODZkZi1mMmNhODgwOGJmM2ZcIiBhcmlhLWxhYmVsbGVkYnk9XCJ0b29sdGlwLTQyZWI0M2M5LTlkNWQtNDhkYS04YzA3LWZjNzZiMjEzYTAxMlwiIHR5cGU9XCJidXR0b25cIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiQnV0dG9uIEJ1dHRvbi0taWNvbk9ubHkgQnV0dG9uLS1pbnZpc2libGUgQnV0dG9uLS1tZWRpdW0gZmxhc2gtY2xvc2UganMtZmxhc2gtY2xvc2VcIj4gIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLXggQnV0dG9uLXZpc3VhbFwiPlxuICAgIDxwYXRoIGQ9XCJNMy43MiAzLjcyYS43NS43NSAwIDAgMSAxLjA2IDBMOCA2Ljk0bDMuMjItMy4yMmEuNzQ5Ljc0OSAwIDAgMSAxLjI3NS4zMjYuNzQ5Ljc0OSAwIDAgMS0uMjE1LjczNEw5LjA2IDhsMy4yMiAzLjIyYS43NDkuNzQ5IDAgMCAxLS4zMjYgMS4yNzUuNzQ5Ljc0OSAwIDAgMS0uNzM0LS4yMTVMOCA5LjA2bC0zLjIyIDMuMjJhLjc1MS43NTEgMCAwIDEtMS4wNDItLjAxOC43NTEuNzUxIDAgMCAxLS4wMTgtMS4wNDJMNi45NCA4IDMuNzIgNC43OGEuNzUuNzUgMCAwIDEgMC0xLjA2WlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC9idXR0b24+PHRvb2wtdGlwIGlkPVwidG9vbHRpcC00MmViNDNjOS05ZDVkLTQ4ZGEtOGMwNy1mYzc2YjIxM2EwMTJcIiBmb3I9XCJpY29uLWJ1dHRvbi0xODE5MDA5YS0wOWI5LTQ5MTgtODZkZi1mMmNhODgwOGJmM2ZcIiBwb3BvdmVyPVwibWFudWFsXCIgZGF0YS1kaXJlY3Rpb249XCJzXCIgZGF0YS10eXBlPVwibGFiZWxcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwic3Itb25seSBwb3NpdGlvbi1hYnNvbHV0ZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHJvbGU9XCJ0b29sdGlwXCI+RGlzbWlzcyBhbGVydDwvdG9vbC10aXA+XG5cblxuICBcbjwvZGl2PlxuICAgIDwvZGl2PlxuXG4gIDxkaXYgaWQ9XCJzdGFydC1vZi1jb250ZW50XCIgY2xhc3M9XCJzaG93LW9uLWZvY3VzXCI+PC9kaXY+XG5cblxuXG5cblxuXG5cblxuICAgIDxkaXYgaWQ9XCJqcy1mbGFzaC1jb250YWluZXJcIiBjbGFzcz1cImZsYXNoLWNvbnRhaW5lclwiIGRhdGEtdHVyYm8tcmVwbGFjZT1cIlwiPlxuXG5cblxuXG4gIDx0ZW1wbGF0ZSBjbGFzcz1cImpzLWZsYXNoLXRlbXBsYXRlXCI+XG4gICAgXG48ZGl2IGNsYXNzPVwiZmxhc2ggZmxhc2gtZnVsbCAgIHt7IGNsYXNzTmFtZSB9fVwiPlxuICA8ZGl2PlxuICAgIDxidXR0b24gYXV0b2ZvY3VzPVwiXCIgY2xhc3M9XCJmbGFzaC1jbG9zZSBqcy1mbGFzaC1jbG9zZVwiIHR5cGU9XCJidXR0b25cIiBhcmlhLWxhYmVsPVwiRGlzbWlzcyB0aGlzIG1lc3NhZ2VcIj5cbiAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLXhcIj5cbiAgICA8cGF0aCBkPVwiTTMuNzIgMy43MmEuNzUuNzUgMCAwIDEgMS4wNiAwTDggNi45NGwzLjIyLTMuMjJhLjc0OS43NDkgMCAwIDEgMS4yNzUuMzI2Ljc0OS43NDkgMCAwIDEtLjIxNS43MzRMOS4wNiA4bDMuMjIgMy4yMmEuNzQ5Ljc0OSAwIDAgMS0uMzI2IDEuMjc1Ljc0OS43NDkgMCAwIDEtLjczNC0uMjE1TDggOS4wNmwtMy4yMiAzLjIyYS43NTEuNzUxIDAgMCAxLTEuMDQyLS4wMTguNzUxLjc1MSAwIDAgMS0uMDE4LTEuMDQyTDYuOTQgOCAzLjcyIDQuNzhhLjc1Ljc1IDAgMCAxIDAtMS4wNlpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICA8L2J1dHRvbj5cbiAgICA8ZGl2IGFyaWEtYXRvbWljPVwidHJ1ZVwiIHJvbGU9XCJhbGVydFwiIGNsYXNzPVwianMtZmxhc2gtYWxlcnRcIj5cbiAgICAgIFxuICAgICAgPGRpdj57eyBtZXNzYWdlIH19PC9kaXY+XG5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbiAgPC90ZW1wbGF0ZT5cbjwvZGl2PlxuXG5cbiAgICBcbiAgICA8aW5jbHVkZS1mcmFnbWVudCBjbGFzcz1cImpzLW5vdGlmaWNhdGlvbi1zaGVsZi1pbmNsdWRlLWZyYWdtZW50XCIgZGF0YS1iYXNlLXNyYz1cImh0dHBzOi8vZ2l0aHViLmNvbS9ub3RpZmljYXRpb25zL2JldGEvc2hlbGZcIj48L2luY2x1ZGUtZnJhZ21lbnQ+XG5cblxuXG5cblxuICA8ZGl2IGNsYXNzPVwiYXBwbGljYXRpb24tbWFpbiBcIiBkYXRhLWNvbW1pdC1ob3ZlcmNhcmRzLWVuYWJsZWQ9XCJcIiBkYXRhLWRpc2N1c3Npb24taG92ZXJjYXJkcy1lbmFibGVkPVwiXCIgZGF0YS1pc3N1ZS1hbmQtcHItaG92ZXJjYXJkcy1lbmFibGVkPVwiXCI+XG4gICAgICA8bWFpbj5cbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG48ZGl2IGl0ZW1zY29wZT1cIlwiIGl0ZW10eXBlPVwiaHR0cDovL3NjaGVtYS5vcmcvT3JnYW5pemF0aW9uXCI+XG4gIFxuXG5cbjxoZWFkZXIgY2xhc3M9XCJwYWdlaGVhZCBvcmdoZWFkIGJvcmRlci1ib3R0b20tMCBwdC0wIFwiPlxuICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyLXhsIHB0LTQgcHQtbGctMCBwLXJlc3BvbnNpdmUgY2xlYXJmaXhcIj5cbiAgICBcbiAgICBcblxuXG5cblxuICAgIDxkaXYgY2xhc3M9XCJkLWZsZXggZmxleC13cmFwIGZsZXgtaXRlbXMtc3RhcnQgZmxleC1zZWxmLXN0YXJ0IG15LTNcIj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8aW1nIGl0ZW1wcm9wPVwiaW1hZ2VcIiBjbGFzcz1cImF2YXRhciBmbGV4LXNocmluay0wIG1iLTMgbXItMyBtYi1tZC0wIG1yLW1kLTRcIiBzcmM9XCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvNDIyMz9zPTIwMCZhbXA7dj00XCIgd2lkdGg9XCIxMDBcIiBoZWlnaHQ9XCIxMDBcIiBhbHQ9XCJAcmFpbHNcIj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiZmxleC0xIGQtZmxleCBmbGV4LWNvbHVtbiBnYXAtMlwiPlxuICAgICAgICA8aDEgY2xhc3M9XCJoMiBsaC1jb25kZW5zZWRcIj5cbiAgICAgICAgICBSdWJ5IG9uIFJhaWxzXG4gICAgICAgIDwvaDE+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sb3ItZmctbXV0ZWRcIj48ZGl2PjwvZGl2PjwvZGl2PlxuXG4gICAgICAgIDx1bCBjbGFzcz1cImQtZmxleCBnYXAtMiBsaXN0LXN0eWxlLW5vbmVcIj5cblxuICAgICAgICAgIDxsaT5cbiAgICAgICAgICA8L2xpPlxuXG4gICAgICAgIDwvdWw+XG5cbiAgICAgICAgPGRpdiBjbGFzcz1cImQtbWQtZmxleCBmbGV4LWl0ZW1zLWNlbnRlciBtdC0yXCI+XG4gICAgICAgICAgICA8dWwgY2xhc3M9XCJkLW1kLWZsZXggbGlzdC1zdHlsZS1ub25lIGY2IGZsZXgtd3JhcCBnYXAtMiBoYXMtYmxvZ1wiPlxuICAgICAgICAgICAgICAgIDxsaSBzdHlsZT1cIm1heC13aWR0aDogMjMwcHhcIiBjbGFzcz1cIm1yLW1kLTMgdi1hbGlnbi1taWRkbGUgY29sb3ItZmctZGVmYXVsdCBteS0yIG15LW1kLTAgY3NzLXRydW5jYXRlIGNzcy10cnVuY2F0ZS10YXJnZXRcIj5cbiAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiTGluay0tc2Vjb25kYXJ5IG5vLXVuZGVybGluZSBuby13cmFwXCIgaHJlZj1cIi9vcmdzL3JhaWxzL2ZvbGxvd2Vyc1wiPlxuICAgICAgICAgICAgICAgICAgICA8c3ZnIHRleHQ9XCJtdXRlZFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1wZW9wbGVcIj5cbiAgICA8cGF0aCBkPVwiTTIgNS41YTMuNSAzLjUgMCAxIDEgNS44OTggMi41NDkgNS41MDggNS41MDggMCAwIDEgMy4wMzQgNC4wODQuNzUuNzUgMCAxIDEtMS40ODIuMjM1IDQgNCAwIDAgMC03LjkgMCAuNzUuNzUgMCAwIDEtMS40ODItLjIzNkE1LjUwNyA1LjUwNyAwIDAgMSAzLjEwMiA4LjA1IDMuNDkzIDMuNDkzIDAgMCAxIDIgNS41Wk0xMSA0YTMuMDAxIDMuMDAxIDAgMCAxIDIuMjIgNS4wMTggNS4wMSA1LjAxIDAgMCAxIDIuNTYgMy4wMTIuNzQ5Ljc0OSAwIDAgMS0uODg1Ljk1NC43NTIuNzUyIDAgMCAxLS41NDktLjUxNCAzLjUwNyAzLjUwNyAwIDAgMC0yLjUyMi0yLjM3Mi43NS43NSAwIDAgMS0uNTc0LS43M3YtLjM1MmEuNzUuNzUgMCAwIDEgLjQxNi0uNjcyQTEuNSAxLjUgMCAwIDAgMTEgNS41Ljc1Ljc1IDAgMCAxIDExIDRabS01LjUtLjVhMiAyIDAgMSAwLS4wMDEgMy45OTlBMiAyIDAgMCAwIDUuNSAzLjVaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGV4dC1ib2xkIGNvbG9yLWZnLWRlZmF1bHRcIj4xLjhrPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICBmb2xsb3dlcnNcbjwvYT4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICA8bGkgc3R5bGU9XCJtYXgtd2lkdGg6IDIzMHB4XCIgY2xhc3M9XCJtci1tZC0zIHYtYWxpZ24tbWlkZGxlIGNvbG9yLWZnLWRlZmF1bHQgbXktMiBteS1tZC0wIGNzcy10cnVuY2F0ZSBjc3MtdHJ1bmNhdGUtdGFyZ2V0XCI+XG4gICAgICAgICAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1saW5rIGZsZXgtc2hyaW5rLTBcIj5cbiAgICA8cGF0aCBkPVwibTcuNzc1IDMuMjc1IDEuMjUtMS4yNWEzLjUgMy41IDAgMSAxIDQuOTUgNC45NWwtMi41IDIuNWEzLjUgMy41IDAgMCAxLTQuOTUgMCAuNzUxLjc1MSAwIDAgMSAuMDE4LTEuMDQyLjc1MS43NTEgMCAwIDEgMS4wNDItLjAxOCAxLjk5OCAxLjk5OCAwIDAgMCAyLjgzIDBsMi41LTIuNWEyLjAwMiAyLjAwMiAwIDAgMC0yLjgzLTIuODNsLTEuMjUgMS4yNWEuNzUxLjc1MSAwIDAgMS0xLjA0Mi0uMDE4Ljc1MS43NTEgMCAwIDEtLjAxOC0xLjA0MlptLTQuNjkgOS42NGExLjk5OCAxLjk5OCAwIDAgMCAyLjgzIDBsMS4yNS0xLjI1YS43NTEuNzUxIDAgMCAxIDEuMDQyLjAxOC43NTEuNzUxIDAgMCAxIC4wMTggMS4wNDJsLTEuMjUgMS4yNWEzLjUgMy41IDAgMSAxLTQuOTUtNC45NWwyLjUtMi41YTMuNSAzLjUgMCAwIDEgNC45NSAwIC43NTEuNzUxIDAgMCAxLS4wMTggMS4wNDIuNzUxLjc1MSAwIDAgMS0xLjA0Mi4wMTggMS45OTggMS45OTggMCAwIDAtMi44MyAwbC0yLjUgMi41YTEuOTk4IDEuOTk4IDAgMCAwIDAgMi44M1pcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAgICAgICAgIDxhIHJlbD1cIm5vZm9sbG93XCIgaXRlbXByb3A9XCJ1cmxcIiBjbGFzcz1cImNvbG9yLWZnLWRlZmF1bHRcIiB0aXRsZT1cImh0dHBzOi8vcnVieW9ucmFpbHMub3JnL1wiIGhyZWY9XCJodHRwczovL3J1YnlvbnJhaWxzLm9yZy9cIj5odHRwczovL3J1YnlvbnJhaWxzLm9yZy88L2E+XG4gICAgICAgICAgICAgICAgPC9saT5cblxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBmbGV4LWl0ZW1zLWNlbnRlciBmbGV4LXNlbGYtc3RhcnQgbXQtM1wiPlxuXG5cbiAgICAgIDwvZGl2PlxuXG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuXG4gIDxkaXYgY2xhc3M9XCJwb3NpdGlvbi1yZWxhdGl2ZVwiPlxuICA8bmF2IGNsYXNzPVwianMtcHJvZmlsZS10YWItY291bnQtY29udGFpbmVyIFVuZGVybGluZU5hdiBqcy1yZXNwb25zaXZlLXVuZGVybGluZW5hdiBvdmVyZmxvdy12aXNpYmxlXCIgZGF0YS11cmw9XCIvdXNlcnMvcmFpbHMvdGFiX2NvdW50c1wiIGFyaWEtbGFiZWw9XCJPcmdhbml6YXRpb25cIj5cbiAgICA8ZGl2IGNsYXNzPVwid2lkdGgtZnVsbCBkLWZsZXggcG9zaXRpb24tcmVsYXRpdmUgY29udGFpbmVyLXhsXCI+XG4gICAgICA8dWwgY2xhc3M9XCJsaXN0LXN0eWxlLW5vbmUgVW5kZXJsaW5lTmF2LWJvZHkgd2lkdGgtZnVsbCBwLXJlc3BvbnNpdmUgb3ZlcmZsb3ctaGlkZGVuXCI+XG4gICAgICAgICAgPGxpIGRhdGEtdGFiLWl0ZW09XCJvcmctaGVhZGVyLW92ZXJ2aWV3LXRhYlwiIGNsYXNzPVwiZC1mbGV4IGpzLXJlc3BvbnNpdmUtdW5kZXJsaW5lbmF2LWl0ZW1cIj5cbiAgPGEgY2xhc3M9XCJVbmRlcmxpbmVOYXYtaXRlbSBzZWxlY3RlZFwiIGhyZWY9XCIvcmFpbHNcIj5cbiAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1ob21lIFVuZGVybGluZU5hdi1vY3RpY29uXCI+XG4gICAgPHBhdGggZD1cIk02LjkwNi42NjRhMS43NDkgMS43NDkgMCAwIDEgMi4xODcgMGw1LjI1IDQuMmMuNDE1LjMzMi42NTcuODM1LjY1NyAxLjM2N3Y3LjAxOUExLjc1IDEuNzUgMCAwIDEgMTMuMjUgMTVoLTMuNWEuNzUuNzUgMCAwIDEtLjc1LS43NVY5SDd2NS4yNWEuNzUuNzUgMCAwIDEtLjc1Ljc1aC0zLjVBMS43NSAxLjc1IDAgMCAxIDEgMTMuMjVWNi4yM2MwLS41MzEuMjQyLTEuMDM0LjY1Ny0xLjM2Nmw1LjI1LTQuMlptMS4yNSAxLjE3MWEuMjUuMjUgMCAwIDAtLjMxMiAwbC01LjI1IDQuMmEuMjUuMjUgMCAwIDAtLjA5NC4xOTZ2Ny4wMTljMCAuMTM4LjExMi4yNS4yNS4yNUg1LjVWOC4yNWEuNzUuNzUgMCAwIDEgLjc1LS43NWgzLjVhLjc1Ljc1IDAgMCAxIC43NS43NXY1LjI1aDIuNzVhLjI1LjI1IDAgMCAwIC4yNS0uMjVWNi4yM2EuMjUuMjUgMCAwIDAtLjA5NC0uMTk1WlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgIE92ZXJ2aWV3XG4gIDwvYT5cbjwvbGk+XG5cbiAgICAgICAgICA8bGkgZGF0YS10YWItaXRlbT1cIm9yZy1oZWFkZXItcmVwb3NpdG9yaWVzLXRhYlwiIGNsYXNzPVwiZC1mbGV4IGpzLXJlc3BvbnNpdmUtdW5kZXJsaW5lbmF2LWl0ZW1cIj5cbiAgPGEgY2xhc3M9XCJVbmRlcmxpbmVOYXYtaXRlbSBcIiBocmVmPVwiL29yZ3MvcmFpbHMvcmVwb3NpdG9yaWVzXCI+XG4gICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tcmVwbyBVbmRlcmxpbmVOYXYtb2N0aWNvblwiPlxuICAgIDxwYXRoIGQ9XCJNMiAyLjVBMi41IDIuNSAwIDAgMSA0LjUgMGg4Ljc1YS43NS43NSAwIDAgMSAuNzUuNzV2MTIuNWEuNzUuNzUgMCAwIDEtLjc1Ljc1aC0yLjVhLjc1Ljc1IDAgMCAxIDAtMS41aDEuNzV2LTJoLThhMSAxIDAgMCAwLS43MTQgMS43Ljc1Ljc1IDAgMSAxLTEuMDcyIDEuMDVBMi40OTUgMi40OTUgMCAwIDEgMiAxMS41Wm0xMC41LTFoLThhMSAxIDAgMCAwLTEgMXY2LjcwOEEyLjQ4NiAyLjQ4NiAwIDAgMSA0LjUgOWg4Wk01IDEyLjI1YS4yNS4yNSAwIDAgMSAuMjUtLjI1aDMuNWEuMjUuMjUgMCAwIDEgLjI1LjI1djMuMjVhLjI1LjI1IDAgMCAxLS40LjJsLTEuNDUtMS4wODdhLjI0OS4yNDkgMCAwIDAtLjMgMEw1LjQgMTUuN2EuMjUuMjUgMCAwIDEtLjQtLjJaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgUmVwb3NpdG9yaWVzXG4gICAgICA8c3BhbiB0aXRsZT1cIk5vdCBhdmFpbGFibGVcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiQ291bnRlciBqcy1wcm9maWxlLXJlcG9zaXRvcnktY291bnRcIj48L3NwYW4+XG4gIDwvYT5cbjwvbGk+XG5cbiAgICAgICAgICBcbiAgICAgICAgICBcbiAgICAgICAgICA8bGkgZGF0YS10YWItaXRlbT1cIm9yZy1oZWFkZXItcGFja2FnZXMtdGFiXCIgY2xhc3M9XCJkLWZsZXgganMtcmVzcG9uc2l2ZS11bmRlcmxpbmVuYXYtaXRlbVwiPlxuICA8YSBjbGFzcz1cIlVuZGVybGluZU5hdi1pdGVtIFwiIGhyZWY9XCIvb3Jncy9yYWlscy9wYWNrYWdlc1wiPlxuICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLXBhY2thZ2UgVW5kZXJsaW5lTmF2LW9jdGljb25cIj5cbiAgICA8cGF0aCBkPVwibTguODc4LjM5MiA1LjI1IDMuMDQ1Yy41NC4zMTQuODcyLjg5Ljg3MiAxLjUxNHY2LjA5OGExLjc1IDEuNzUgMCAwIDEtLjg3MiAxLjUxNGwtNS4yNSAzLjA0NWExLjc1IDEuNzUgMCAwIDEtMS43NTYgMGwtNS4yNS0zLjA0NUExLjc1IDEuNzUgMCAwIDEgMSAxMS4wNDlWNC45NTFjMC0uNjI0LjMzMi0xLjIwMS44NzItMS41MTRMNy4xMjIuMzkyYTEuNzUgMS43NSAwIDAgMSAxLjc1NiAwWk03Ljg3NSAxLjY5bC00LjYzIDIuNjg1TDggNy4xMzNsNC43NTUtMi43NTgtNC42My0yLjY4NWEuMjQ4LjI0OCAwIDAgMC0uMjUgMFpNMi41IDUuNjc3djUuMzcyYzAgLjA5LjA0Ny4xNzEuMTI1LjIxNmw0LjYyNSAyLjY4M1Y4LjQzMlptNi4yNSA4LjI3MSA0LjYyNS0yLjY4M2EuMjUuMjUgMCAwIDAgLjEyNS0uMjE2VjUuNjc3TDguNzUgOC40MzJaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgUGFja2FnZXNcbiAgPC9hPlxuPC9saT5cblxuICAgICAgICAgIFxuICAgICAgICAgIDxsaSBkYXRhLXRhYi1pdGVtPVwib3JnLWhlYWRlci1wZW9wbGUtdGFiXCIgY2xhc3M9XCJkLWZsZXgganMtcmVzcG9uc2l2ZS11bmRlcmxpbmVuYXYtaXRlbVwiPlxuICA8YSBjbGFzcz1cIlVuZGVybGluZU5hdi1pdGVtIFwiIGhyZWY9XCIvb3Jncy9yYWlscy9wZW9wbGVcIj5cbiAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1wZXJzb24gVW5kZXJsaW5lTmF2LW9jdGljb25cIj5cbiAgICA8cGF0aCBkPVwiTTEwLjU2MSA4LjA3M2E2LjAwNSA2LjAwNSAwIDAgMSAzLjQzMiA1LjE0Mi43NS43NSAwIDEgMS0xLjQ5OC4wNyA0LjUgNC41IDAgMCAwLTguOTkgMCAuNzUuNzUgMCAwIDEtMS40OTgtLjA3IDYuMDA0IDYuMDA0IDAgMCAxIDMuNDMxLTUuMTQyIDMuOTk5IDMuOTk5IDAgMSAxIDUuMTIzIDBaTTEwLjUgNWEyLjUgMi41IDAgMSAwLTUgMCAyLjUgMi41IDAgMCAwIDUgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICBQZW9wbGVcbiAgICAgIDxzcGFuIHRpdGxlPVwiTm90IGF2YWlsYWJsZVwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJDb3VudGVyIGpzLXByb2ZpbGUtbWVtYmVyLWNvdW50XCI+PC9zcGFuPlxuICA8L2E+XG48L2xpPlxuXG4gICAgICAgICAgXG4gICAgICAgICAgXG4gICAgICAgICAgXG4gICAgICAgICAgXG4gICAgICA8L3VsPlxuXG4gICAgICA8ZGl2IGNsYXNzPVwiVW5kZXJsaW5lTmF2LWFjdGlvbnMgcG9zaXRpb24tYWJzb2x1dGUgcHItMyBwci1tZC00IHByLWxnLTUgcmlnaHQtMCBqcy1yZXNwb25zaXZlLXVuZGVybGluZW5hdi1vdmVyZmxvd1wiIHN0eWxlPVwidmlzaWJpbGl0eTogaGlkZGVuXCI+XG4gICAgICAgICAgPGRldGFpbHMgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImRldGFpbHMtb3ZlcmxheSBkZXRhaWxzLXJlc2V0IHBvc2l0aW9uLXJlbGF0aXZlXCI+XG4gICAgPHN1bW1hcnkgcm9sZT1cImJ1dHRvblwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgYXJpYS1oYXNwb3B1cD1cIm1lbnVcIj4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiVW5kZXJsaW5lTmF2LWl0ZW0gbXItMCBib3JkZXItMFwiPlxuICAgICAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1rZWJhYi1ob3Jpem9udGFsXCI+XG4gICAgPHBhdGggZD1cIk04IDlhMS41IDEuNSAwIDEgMCAwLTMgMS41IDEuNSAwIDAgMCAwIDNaTTEuNSA5YTEuNSAxLjUgMCAxIDAgMC0zIDEuNSAxLjUgMCAwIDAgMCAzWm0xMyAwYTEuNSAxLjUgMCAxIDAgMC0zIDEuNSAxLjUgMCAwIDAgMCAzWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInNyLW9ubHlcIj5Nb3JlPC9zcGFuPlxuICAgICAgICAgICAgPC9kaXY+XG48L3N1bW1hcnk+XG4gICAgPGRldGFpbHMtbWVudSByb2xlPVwibWVudVwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJkcm9wZG93bi1tZW51IGRyb3Bkb3duLW1lbnUtc3dcIj5cbiAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICA8bGkgZGF0YS1tZW51LWl0ZW09XCJvcmctaGVhZGVyLW92ZXJ2aWV3LXRhYlwiIGhpZGRlbj1cIlwiPlxuICAgICAgICAgICAgICAgICAgPGEgcm9sZT1cIm1lbnVpdGVtXCIgY2xhc3M9XCJqcy1zZWxlY3RlZC1uYXZpZ2F0aW9uLWl0ZW0gc2VsZWN0ZWQgZHJvcGRvd24taXRlbVwiIGFyaWEtY3VycmVudD1cInBhZ2VcIiBkYXRhLXNlbGVjdGVkLWxpbmtzPVwiIC9yYWlsc1wiIGhyZWY9XCIvcmFpbHNcIj5PdmVydmlldzwvYT5cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgIDxsaSBkYXRhLW1lbnUtaXRlbT1cIm9yZy1oZWFkZXItcmVwb3NpdG9yaWVzLXRhYlwiIGhpZGRlbj1cIlwiPlxuICAgICAgICAgICAgICAgICAgPGEgcm9sZT1cIm1lbnVpdGVtXCIgY2xhc3M9XCJqcy1zZWxlY3RlZC1uYXZpZ2F0aW9uLWl0ZW0gZHJvcGRvd24taXRlbVwiIGRhdGEtc2VsZWN0ZWQtbGlua3M9XCIgL29yZ3MvcmFpbHMvcmVwb3NpdG9yaWVzXCIgaHJlZj1cIi9vcmdzL3JhaWxzL3JlcG9zaXRvcmllc1wiPlJlcG9zaXRvcmllczwvYT5cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgIDxsaSBkYXRhLW1lbnUtaXRlbT1cIm9yZy1oZWFkZXItcGFja2FnZXMtdGFiXCIgaGlkZGVuPVwiXCI+XG4gICAgICAgICAgICAgICAgICA8YSByb2xlPVwibWVudWl0ZW1cIiBjbGFzcz1cImpzLXNlbGVjdGVkLW5hdmlnYXRpb24taXRlbSBkcm9wZG93bi1pdGVtXCIgZGF0YS1zZWxlY3RlZC1saW5rcz1cIiAvb3Jncy9yYWlscy9wYWNrYWdlc1wiIGhyZWY9XCIvb3Jncy9yYWlscy9wYWNrYWdlc1wiPlBhY2thZ2VzPC9hPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgPGxpIGRhdGEtbWVudS1pdGVtPVwib3JnLWhlYWRlci1wZW9wbGUtdGFiXCIgaGlkZGVuPVwiXCI+XG4gICAgICAgICAgICAgICAgICA8YSByb2xlPVwibWVudWl0ZW1cIiBjbGFzcz1cImpzLXNlbGVjdGVkLW5hdmlnYXRpb24taXRlbSBkcm9wZG93bi1pdGVtXCIgZGF0YS1zZWxlY3RlZC1saW5rcz1cIiAvb3Jncy9yYWlscy9wZW9wbGVcIiBocmVmPVwiL29yZ3MvcmFpbHMvcGVvcGxlXCI+UGVvcGxlPC9hPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8L3VsPlxuPC9kZXRhaWxzLW1lbnU+XG48L2RldGFpbHM+ICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvbmF2PlxuPC9kaXY+XG5cblxuICAgIFxuPC9oZWFkZXI+XG5cblxuICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyLXhsXCI+XG5cblxuICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImd1dHRlci1jb25kZW5zZWQgZ3V0dGVyLWxnIHdpZHRoLWZ1bGwgZmxleC1jb2x1bW4gZmxleC1tZC1yb3cgZC1mbGV4XCI+XG5cbiAgPGRpdiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiZmxleC1zaHJpbmstMCBjb2wtMTIgY29sLW1kLTkgbWItNCBtYi1tZC0wXCI+ICAgICAgICA8ZGl2IGNsYXNzPVwicG9zaXRpb24tcmVsYXRpdmVcIiBkYXRhLWhwYz1cIlwiPlxuICAgICAgICAgIFxuXG4gICAgICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyLWxnIHAtcmVzcG9uc2l2ZSBqcy1waW5uZWQtaXRlbXMtcmVvcmRlci1jb250YWluZXIgY2xlYXJmaXhcIj5cbiAgPGRpdiBjbGFzcz1cImhpZGUtbGcgaGlkZS14bFwiPlxuICAgIFxuICA8L2Rpdj5cblxuICBcbiAgXG4gIFxuXG4gICAgPGRpdiBjbGFzcz1cImpzLXBpbm5lZC1pdGVtcy1yZW9yZGVyLWNvbnRhaW5lclwiPlxuXG4gIDxoMiBjbGFzcz1cImY0IG1iLTIgdGV4dC1ub3JtYWxcIj5cbiAgICAgICAgUGlubmVkXG5cbiAgICA8c3ZnIHN0eWxlPVwiYm94LXNpemluZzogY29udGVudC1ib3g7IGNvbG9yOiB2YXIoLS1jb2xvci1pY29uLXByaW1hcnkpO1wiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiBmaWxsPVwibm9uZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJzcGlubmVyIHBpbm5lZC1pdGVtcy1zcGlubmVyIGpzLXBpbm5lZC1pdGVtcy1zcGlubmVyIHYtYWxpZ24tdGV4dC1ib3R0b20gbWwtMSBhbmltLXJvdGF0ZVwiPlxuICA8Y2lyY2xlIGN4PVwiOFwiIGN5PVwiOFwiIHI9XCI3XCIgc3Ryb2tlPVwiY3VycmVudENvbG9yXCIgc3Ryb2tlLW9wYWNpdHk9XCIwLjI1XCIgc3Ryb2tlLXdpZHRoPVwiMlwiIHZlY3Rvci1lZmZlY3Q9XCJub24tc2NhbGluZy1zdHJva2VcIiBmaWxsPVwibm9uZVwiPjwvY2lyY2xlPlxuICA8cGF0aCBkPVwiTTE1IDhhNy4wMDIgNy4wMDIgMCAwMC03LTdcIiBzdHJva2U9XCJjdXJyZW50Q29sb3JcIiBzdHJva2Utd2lkdGg9XCIyXCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHZlY3Rvci1lZmZlY3Q9XCJub24tc2NhbGluZy1zdHJva2VcIj48L3BhdGg+XG48L3N2Zz4gIDxzcGFuIGNsYXNzPVwic3Itb25seVwiPkxvYWRpbmc8L3NwYW4+XG5cbiAgICA8c3BhbiBjbGFzcz1cIm1sLTIgY29sb3ItZmctbXV0ZWQgZjYganMtcGlubmVkLWl0ZW1zLXJlb3JkZXItbWVzc2FnZVwiIHJvbGU9XCJzdGF0dXNcIiBhcmlhLWxpdmU9XCJwb2xpdGVcIiBkYXRhLWVycm9yLXRleHQ9XCJTb21ldGhpbmcgd2VudCB3cm9uZy5cIiBkYXRhLXN1Y2Nlc3MtdGV4dD1cIk9yZGVyIHVwZGF0ZWQuXCI+PC9zcGFuPlxuICA8L2gyPlxuXG4gICAgICA8b2wgY2xhc3M9XCJkLWZsZXggZmxleC13cmFwIGxpc3Qtc3R5bGUtbm9uZSBndXR0ZXItY29uZGVuc2VkIG1iLTIganMtcGlubmVkLWl0ZW1zLXJlb3JkZXItbGlzdFwiPlxuICAgICAgPGxpIGNsYXNzPVwibWItMyBkLWZsZXggZmxleC1jb250ZW50LXN0cmV0Y2ggc29ydGFibGUtYnV0dG9uLWl0ZW0gcGlubmVkLWl0ZW0tbGlzdC1pdGVtIGpzLXBpbm5lZC1pdGVtLWxpc3QtaXRlbSBjb2wtMTIgY29sLW1kLTYgY29sLWxnLTZcIj5cbiAgPGRpdiBjbGFzcz1cIkJveCBkLWZsZXggcC0zIHdpZHRoLWZ1bGwgcHVibGljIHNvdXJjZVwiPlxuICAgIDxkaXYgY2xhc3M9XCJwaW5uZWQtaXRlbS1saXN0LWl0ZW0tY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCB3aWR0aC1mdWxsIHBvc2l0aW9uLXJlbGF0aXZlXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LTFcIj5cbiAgICAgICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLXJlcG8gbXItMSBjb2xvci1mZy1tdXRlZFwiPlxuICAgIDxwYXRoIGQ9XCJNMiAyLjVBMi41IDIuNSAwIDAgMSA0LjUgMGg4Ljc1YS43NS43NSAwIDAgMSAuNzUuNzV2MTIuNWEuNzUuNzUgMCAwIDEtLjc1Ljc1aC0yLjVhLjc1Ljc1IDAgMCAxIDAtMS41aDEuNzV2LTJoLThhMSAxIDAgMCAwLS43MTQgMS43Ljc1Ljc1IDAgMSAxLTEuMDcyIDEuMDVBMi40OTUgMi40OTUgMCAwIDEgMiAxMS41Wm0xMC41LTFoLThhMSAxIDAgMCAwLTEgMXY2LjcwOEEyLjQ4NiAyLjQ4NiAwIDAgMSA0LjUgOWg4Wk01IDEyLjI1YS4yNS4yNSAwIDAgMSAuMjUtLjI1aDMuNWEuMjUuMjUgMCAwIDEgLjI1LjI1djMuMjVhLjI1LjI1IDAgMCAxLS40LjJsLTEuNDUtMS4wODdhLjI0OS4yNDkgMCAwIDAtLjMgMEw1LjQgMTUuN2EuMjUuMjUgMCAwIDEtLjQtLjJaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgPHNwYW4gZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cInBvc2l0aW9uLXJlbGF0aXZlXCI+PGEgZGF0YS1oeWRyby1jbGljaz1cInsmcXVvdDtldmVudF90eXBlJnF1b3Q7OiZxdW90O3VzZXJfcHJvZmlsZS5jbGljayZxdW90OywmcXVvdDtwYXlsb2FkJnF1b3Q7OnsmcXVvdDtwcm9maWxlX3VzZXJfaWQmcXVvdDs6NDIyMywmcXVvdDt0YXJnZXQmcXVvdDs6JnF1b3Q7UElOTkVEX1JFUE8mcXVvdDssJnF1b3Q7dXNlcl9pZCZxdW90OzpudWxsLCZxdW90O29yaWdpbmF0aW5nX3VybCZxdW90OzomcXVvdDtodHRwczovL2dpdGh1Yi5jb20vcmFpbHMmcXVvdDt9fVwiIGRhdGEtaHlkcm8tY2xpY2staG1hYz1cIjQ5NzdkNmQzZjA0MjA5MzEyYmZlNTFlZmI2MzcyODhiYjU5MzRmZTgwNTExODhiZTQzMTQ0MmZlZWQ5M2RkMTdcIiBpZD1cIjg1MTRcIiBocmVmPVwiL3JhaWxzL3JhaWxzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxpbmsgbXItMSB0ZXh0LWJvbGQgd2ItYnJlYWstd29yZFwiIGFyaWEtbGFiZWxsZWRieT1cInRvb2x0aXAtOTQ0ZDE3ZGUtZDU3Ny00MjVlLTk0MzYtYzg2NzdjMWJhNmUyXCI+XG48c3BhbiBjbGFzcz1cInJlcG9cIj5yYWlsczwvc3Bhbj5cbjwvYT48dG9vbC10aXAgaWQ9XCJ0b29sdGlwLTk0NGQxN2RlLWQ1NzctNDI1ZS05NDM2LWM4Njc3YzFiYTZlMlwiIGZvcj1cIjg1MTRcIiBwb3BvdmVyPVwibWFudWFsXCIgZGF0YS1kaXJlY3Rpb249XCJzXCIgZGF0YS10eXBlPVwibGFiZWxcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwic3Itb25seSBwb3NpdGlvbi1hYnNvbHV0ZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHJvbGU9XCJ0b29sdGlwXCI+cmFpbHM8L3Rvb2wtdGlwPjwvc3Bhbj4gICAgICAgICAgPHNwYW4+PC9zcGFuPjxzcGFuIGNsYXNzPVwiTGFiZWwgTGFiZWwtLXNlY29uZGFyeSB2LWFsaWduLW1pZGRsZSBtdC0xIG5vLXdyYXAgdi1hbGlnbi1iYXNlbGluZSBMYWJlbC0taW5saW5lXCI+UHVibGljPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG5cbiAgICAgIDxwIGNsYXNzPVwicGlubmVkLWl0ZW0tZGVzYyBjb2xvci1mZy1tdXRlZCB0ZXh0LXNtYWxsIG10LTIgbWItMFwiPlxuICAgICAgICBSdWJ5IG9uIFJhaWxzXG4gICAgICA8L3A+XG5cbiAgICAgIDxwIGNsYXNzPVwibWItMCBtdC0yIGY2IGNvbG9yLWZnLW11dGVkXCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJkLWlubGluZS1ibG9jayBtci0zXCI+XG4gIDxzcGFuIGNsYXNzPVwicmVwby1sYW5ndWFnZS1jb2xvclwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogIzcwMTUxNlwiPjwvc3Bhbj5cbiAgPHNwYW4gaXRlbXByb3A9XCJwcm9ncmFtbWluZ0xhbmd1YWdlXCI+UnVieTwvc3Bhbj5cbjwvc3Bhbj5cblxuICAgICAgICAgIDxhIGhyZWY9XCIvcmFpbHMvcmFpbHMvc3RhcmdhemVyc1wiIGNsYXNzPVwicGlubmVkLWl0ZW0tbWV0YSBMaW5rLS1tdXRlZFwiPlxuICAgICAgICAgICAgPHN2ZyBhcmlhLWxhYmVsPVwic3RhcnNcIiByb2xlPVwiaW1nXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLXN0YXJcIj5cbiAgICA8cGF0aCBkPVwiTTggLjI1YS43NS43NSAwIDAgMSAuNjczLjQxOGwxLjg4MiAzLjgxNSA0LjIxLjYxMmEuNzUuNzUgMCAwIDEgLjQxNiAxLjI3OWwtMy4wNDYgMi45Ny43MTkgNC4xOTJhLjc1MS43NTEgMCAwIDEtMS4wODguNzkxTDggMTIuMzQ3bC0zLjc2NiAxLjk4YS43NS43NSAwIDAgMS0xLjA4OC0uNzlsLjcyLTQuMTk0TC44MTggNi4zNzRhLjc1Ljc1IDAgMCAxIC40MTYtMS4yOGw0LjIxLS42MTFMNy4zMjcuNjY4QS43NS43NSAwIDAgMSA4IC4yNVptMCAyLjQ0NUw2LjYxNSA1LjVhLjc1Ljc1IDAgMCAxLS41NjQuNDFsLTMuMDk3LjQ1IDIuMjQgMi4xODRhLjc1Ljc1IDAgMCAxIC4yMTYuNjY0bC0uNTI4IDMuMDg0IDIuNzY5LTEuNDU2YS43NS43NSAwIDAgMSAuNjk4IDBsMi43NyAxLjQ1Ni0uNTMtMy4wODRhLjc1Ljc1IDAgMCAxIC4yMTYtLjY2NGwyLjI0LTIuMTgzLTMuMDk2LS40NWEuNzUuNzUgMCAwIDEtLjU2NC0uNDFMOCAyLjY5NFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAgIDU1LjRrXG4gICAgICAgICAgPC9hPlxuICAgICAgICAgIDxhIGhyZWY9XCIvcmFpbHMvcmFpbHMvZm9ya3NcIiBjbGFzcz1cInBpbm5lZC1pdGVtLW1ldGEgTGluay0tbXV0ZWRcIj5cbiAgICAgICAgICAgIDxzdmcgYXJpYS1sYWJlbD1cImZvcmtzXCIgcm9sZT1cImltZ1wiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1yZXBvLWZvcmtlZFwiPlxuICAgIDxwYXRoIGQ9XCJNNSA1LjM3MnYuODc4YzAgLjQxNC4zMzYuNzUuNzUuNzVoNC41YS43NS43NSAwIDAgMCAuNzUtLjc1di0uODc4YTIuMjUgMi4yNSAwIDEgMSAxLjUgMHYuODc4YTIuMjUgMi4yNSAwIDAgMS0yLjI1IDIuMjVoLTEuNXYyLjEyOGEyLjI1MSAyLjI1MSAwIDEgMS0xLjUgMFY4LjVoLTEuNUEyLjI1IDIuMjUgMCAwIDEgMy41IDYuMjV2LS44NzhhMi4yNSAyLjI1IDAgMSAxIDEuNSAwWk01IDMuMjVhLjc1Ljc1IDAgMSAwLTEuNSAwIC43NS43NSAwIDAgMCAxLjUgMFptNi43NS43NWEuNzUuNzUgMCAxIDAgMC0xLjUuNzUuNzUgMCAwIDAgMCAxLjVabS0zIDguNzVhLjc1Ljc1IDAgMSAwLTEuNSAwIC43NS43NSAwIDAgMCAxLjUgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAgIDIxLjRrXG4gICAgICAgICAgPC9hPlxuICAgICAgPC9wPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvbGk+XG5cbiAgICAgIDxsaSBjbGFzcz1cIm1iLTMgZC1mbGV4IGZsZXgtY29udGVudC1zdHJldGNoIHNvcnRhYmxlLWJ1dHRvbi1pdGVtIHBpbm5lZC1pdGVtLWxpc3QtaXRlbSBqcy1waW5uZWQtaXRlbS1saXN0LWl0ZW0gY29sLTEyIGNvbC1tZC02IGNvbC1sZy02XCI+XG4gIDxkaXYgY2xhc3M9XCJCb3ggZC1mbGV4IHAtMyB3aWR0aC1mdWxsIHB1YmxpYyBzb3VyY2VcIj5cbiAgICA8ZGl2IGNsYXNzPVwicGlubmVkLWl0ZW0tbGlzdC1pdGVtLWNvbnRlbnRcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJkLWZsZXggd2lkdGgtZnVsbCBwb3NpdGlvbi1yZWxhdGl2ZVwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmxleC0xXCI+XG4gICAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1yZXBvIG1yLTEgY29sb3ItZmctbXV0ZWRcIj5cbiAgICA8cGF0aCBkPVwiTTIgMi41QTIuNSAyLjUgMCAwIDEgNC41IDBoOC43NWEuNzUuNzUgMCAwIDEgLjc1Ljc1djEyLjVhLjc1Ljc1IDAgMCAxLS43NS43NWgtMi41YS43NS43NSAwIDAgMSAwLTEuNWgxLjc1di0yaC04YTEgMSAwIDAgMC0uNzE0IDEuNy43NS43NSAwIDEgMS0xLjA3MiAxLjA1QTIuNDk1IDIuNDk1IDAgMCAxIDIgMTEuNVptMTAuNS0xaC04YTEgMSAwIDAgMC0xIDF2Ni43MDhBMi40ODYgMi40ODYgMCAwIDEgNC41IDloOFpNNSAxMi4yNWEuMjUuMjUgMCAwIDEgLjI1LS4yNWgzLjVhLjI1LjI1IDAgMCAxIC4yNS4yNXYzLjI1YS4yNS4yNSAwIDAgMS0uNC4ybC0xLjQ1LTEuMDg3YS4yNDkuMjQ5IDAgMCAwLS4zIDBMNS40IDE1LjdhLjI1LjI1IDAgMCAxLS40LS4yWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAgIDxzcGFuIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJwb3NpdGlvbi1yZWxhdGl2ZVwiPjxhIGRhdGEtaHlkcm8tY2xpY2s9XCJ7JnF1b3Q7ZXZlbnRfdHlwZSZxdW90OzomcXVvdDt1c2VyX3Byb2ZpbGUuY2xpY2smcXVvdDssJnF1b3Q7cGF5bG9hZCZxdW90Ozp7JnF1b3Q7cHJvZmlsZV91c2VyX2lkJnF1b3Q7OjQyMjMsJnF1b3Q7dGFyZ2V0JnF1b3Q7OiZxdW90O1BJTk5FRF9SRVBPJnF1b3Q7LCZxdW90O3VzZXJfaWQmcXVvdDs6bnVsbCwmcXVvdDtvcmlnaW5hdGluZ191cmwmcXVvdDs6JnF1b3Q7aHR0cHM6Ly9naXRodWIuY29tL3JhaWxzJnF1b3Q7fX1cIiBkYXRhLWh5ZHJvLWNsaWNrLWhtYWM9XCI0OTc3ZDZkM2YwNDIwOTMxMmJmZTUxZWZiNjM3Mjg4YmI1OTM0ZmU4MDUxMTg4YmU0MzE0NDJmZWVkOTNkZDE3XCIgaWQ9XCIyODYxMDU2XCIgaHJlZj1cIi9yYWlscy9qYnVpbGRlclwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMaW5rIG1yLTEgdGV4dC1ib2xkIHdiLWJyZWFrLXdvcmRcIiBhcmlhLWxhYmVsbGVkYnk9XCJ0b29sdGlwLWIzMjI4ODZhLTQ4OWEtNGRlZS1iZjQ2LTljZDhjZDEzMTI2ZlwiPlxuPHNwYW4gY2xhc3M9XCJyZXBvXCI+amJ1aWxkZXI8L3NwYW4+XG48L2E+PHRvb2wtdGlwIGlkPVwidG9vbHRpcC1iMzIyODg2YS00ODlhLTRkZWUtYmY0Ni05Y2Q4Y2QxMzEyNmZcIiBmb3I9XCIyODYxMDU2XCIgcG9wb3Zlcj1cIm1hbnVhbFwiIGRhdGEtZGlyZWN0aW9uPVwic1wiIGRhdGEtdHlwZT1cImxhYmVsXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cInNyLW9ubHkgcG9zaXRpb24tYWJzb2x1dGVcIiBhcmlhLWhpZGRlbj1cInRydWVcIiByb2xlPVwidG9vbHRpcFwiPmpidWlsZGVyPC90b29sLXRpcD48L3NwYW4+ICAgICAgICAgIDxzcGFuPjwvc3Bhbj48c3BhbiBjbGFzcz1cIkxhYmVsIExhYmVsLS1zZWNvbmRhcnkgdi1hbGlnbi1taWRkbGUgbXQtMSBuby13cmFwIHYtYWxpZ24tYmFzZWxpbmUgTGFiZWwtLWlubGluZVwiPlB1YmxpYzwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuXG4gICAgICA8cCBjbGFzcz1cInBpbm5lZC1pdGVtLWRlc2MgY29sb3ItZmctbXV0ZWQgdGV4dC1zbWFsbCBtdC0yIG1iLTBcIj5cbiAgICAgICAgSmJ1aWxkZXI6IGdlbmVyYXRlIEpTT04gb2JqZWN0cyB3aXRoIGEgQnVpbGRlci1zdHlsZSBEU0xcbiAgICAgIDwvcD5cblxuICAgICAgPHAgY2xhc3M9XCJtYi0wIG10LTIgZjYgY29sb3ItZmctbXV0ZWRcIj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz1cImQtaW5saW5lLWJsb2NrIG1yLTNcIj5cbiAgPHNwYW4gY2xhc3M9XCJyZXBvLWxhbmd1YWdlLWNvbG9yXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiAjNzAxNTE2XCI+PC9zcGFuPlxuICA8c3BhbiBpdGVtcHJvcD1cInByb2dyYW1taW5nTGFuZ3VhZ2VcIj5SdWJ5PC9zcGFuPlxuPC9zcGFuPlxuXG4gICAgICAgICAgPGEgaHJlZj1cIi9yYWlscy9qYnVpbGRlci9zdGFyZ2F6ZXJzXCIgY2xhc3M9XCJwaW5uZWQtaXRlbS1tZXRhIExpbmstLW11dGVkXCI+XG4gICAgICAgICAgICA8c3ZnIGFyaWEtbGFiZWw9XCJzdGFyc1wiIHJvbGU9XCJpbWdcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tc3RhclwiPlxuICAgIDxwYXRoIGQ9XCJNOCAuMjVhLjc1Ljc1IDAgMCAxIC42NzMuNDE4bDEuODgyIDMuODE1IDQuMjEuNjEyYS43NS43NSAwIDAgMSAuNDE2IDEuMjc5bC0zLjA0NiAyLjk3LjcxOSA0LjE5MmEuNzUxLjc1MSAwIDAgMS0xLjA4OC43OTFMOCAxMi4zNDdsLTMuNzY2IDEuOThhLjc1Ljc1IDAgMCAxLTEuMDg4LS43OWwuNzItNC4xOTRMLjgxOCA2LjM3NGEuNzUuNzUgMCAwIDEgLjQxNi0xLjI4bDQuMjEtLjYxMUw3LjMyNy42NjhBLjc1Ljc1IDAgMCAxIDggLjI1Wm0wIDIuNDQ1TDYuNjE1IDUuNWEuNzUuNzUgMCAwIDEtLjU2NC40MWwtMy4wOTcuNDUgMi4yNCAyLjE4NGEuNzUuNzUgMCAwIDEgLjIxNi42NjRsLS41MjggMy4wODQgMi43NjktMS40NTZhLjc1Ljc1IDAgMCAxIC42OTggMGwyLjc3IDEuNDU2LS41My0zLjA4NGEuNzUuNzUgMCAwIDEgLjIxNi0uNjY0bDIuMjQtMi4xODMtMy4wOTYtLjQ1YS43NS43NSAwIDAgMS0uNTY0LS40MUw4IDIuNjk0WlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAgICAgNC4za1xuICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8YSBocmVmPVwiL3JhaWxzL2pidWlsZGVyL2ZvcmtzXCIgY2xhc3M9XCJwaW5uZWQtaXRlbS1tZXRhIExpbmstLW11dGVkXCI+XG4gICAgICAgICAgICA8c3ZnIGFyaWEtbGFiZWw9XCJmb3Jrc1wiIHJvbGU9XCJpbWdcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tcmVwby1mb3JrZWRcIj5cbiAgICA8cGF0aCBkPVwiTTUgNS4zNzJ2Ljg3OGMwIC40MTQuMzM2Ljc1Ljc1Ljc1aDQuNWEuNzUuNzUgMCAwIDAgLjc1LS43NXYtLjg3OGEyLjI1IDIuMjUgMCAxIDEgMS41IDB2Ljg3OGEyLjI1IDIuMjUgMCAwIDEtMi4yNSAyLjI1aC0xLjV2Mi4xMjhhMi4yNTEgMi4yNTEgMCAxIDEtMS41IDBWOC41aC0xLjVBMi4yNSAyLjI1IDAgMCAxIDMuNSA2LjI1di0uODc4YTIuMjUgMi4yNSAwIDEgMSAxLjUgMFpNNSAzLjI1YS43NS43NSAwIDEgMC0xLjUgMCAuNzUuNzUgMCAwIDAgMS41IDBabTYuNzUuNzVhLjc1Ljc1IDAgMSAwIDAtMS41Ljc1Ljc1IDAgMCAwIDAgMS41Wm0tMyA4Ljc1YS43NS43NSAwIDEgMC0xLjUgMCAuNzUuNzUgMCAwIDAgMS41IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgICA0MjhcbiAgICAgICAgICA8L2E+XG4gICAgICA8L3A+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9saT5cblxuICAgICAgPGxpIGNsYXNzPVwibWItMyBkLWZsZXggZmxleC1jb250ZW50LXN0cmV0Y2ggc29ydGFibGUtYnV0dG9uLWl0ZW0gcGlubmVkLWl0ZW0tbGlzdC1pdGVtIGpzLXBpbm5lZC1pdGVtLWxpc3QtaXRlbSBjb2wtMTIgY29sLW1kLTYgY29sLWxnLTZcIj5cbiAgPGRpdiBjbGFzcz1cIkJveCBkLWZsZXggcC0zIHdpZHRoLWZ1bGwgcHVibGljIHNvdXJjZVwiPlxuICAgIDxkaXYgY2xhc3M9XCJwaW5uZWQtaXRlbS1saXN0LWl0ZW0tY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCB3aWR0aC1mdWxsIHBvc2l0aW9uLXJlbGF0aXZlXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LTFcIj5cbiAgICAgICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLXJlcG8gbXItMSBjb2xvci1mZy1tdXRlZFwiPlxuICAgIDxwYXRoIGQ9XCJNMiAyLjVBMi41IDIuNSAwIDAgMSA0LjUgMGg4Ljc1YS43NS43NSAwIDAgMSAuNzUuNzV2MTIuNWEuNzUuNzUgMCAwIDEtLjc1Ljc1aC0yLjVhLjc1Ljc1IDAgMCAxIDAtMS41aDEuNzV2LTJoLThhMSAxIDAgMCAwLS43MTQgMS43Ljc1Ljc1IDAgMSAxLTEuMDcyIDEuMDVBMi40OTUgMi40OTUgMCAwIDEgMiAxMS41Wm0xMC41LTFoLThhMSAxIDAgMCAwLTEgMXY2LjcwOEEyLjQ4NiAyLjQ4NiAwIDAgMSA0LjUgOWg4Wk01IDEyLjI1YS4yNS4yNSAwIDAgMSAuMjUtLjI1aDMuNWEuMjUuMjUgMCAwIDEgLjI1LjI1djMuMjVhLjI1LjI1IDAgMCAxLS40LjJsLTEuNDUtMS4wODdhLjI0OS4yNDkgMCAwIDAtLjMgMEw1LjQgMTUuN2EuMjUuMjUgMCAwIDEtLjQtLjJaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgPHNwYW4gZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cInBvc2l0aW9uLXJlbGF0aXZlXCI+PGEgZGF0YS1oeWRyby1jbGljaz1cInsmcXVvdDtldmVudF90eXBlJnF1b3Q7OiZxdW90O3VzZXJfcHJvZmlsZS5jbGljayZxdW90OywmcXVvdDtwYXlsb2FkJnF1b3Q7OnsmcXVvdDtwcm9maWxlX3VzZXJfaWQmcXVvdDs6NDIyMywmcXVvdDt0YXJnZXQmcXVvdDs6JnF1b3Q7UElOTkVEX1JFUE8mcXVvdDssJnF1b3Q7dXNlcl9pZCZxdW90OzpudWxsLCZxdW90O29yaWdpbmF0aW5nX3VybCZxdW90OzomcXVvdDtodHRwczovL2dpdGh1Yi5jb20vcmFpbHMmcXVvdDt9fVwiIGRhdGEtaHlkcm8tY2xpY2staG1hYz1cIjQ5NzdkNmQzZjA0MjA5MzEyYmZlNTFlZmI2MzcyODhiYjU5MzRmZTgwNTExODhiZTQzMTQ0MmZlZWQ5M2RkMTdcIiBpZD1cIjQzNjIxNjk5MlwiIGhyZWY9XCIvcmFpbHMvd2Vic2l0ZVwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMaW5rIG1yLTEgdGV4dC1ib2xkIHdiLWJyZWFrLXdvcmRcIiBhcmlhLWxhYmVsbGVkYnk9XCJ0b29sdGlwLWQ2N2VmYzcwLWI4ZmItNGEzMi1iODk5LTBlNGJjNjM0ZWNhY1wiPlxuPHNwYW4gY2xhc3M9XCJyZXBvXCI+d2Vic2l0ZTwvc3Bhbj5cbjwvYT48dG9vbC10aXAgaWQ9XCJ0b29sdGlwLWQ2N2VmYzcwLWI4ZmItNGEzMi1iODk5LTBlNGJjNjM0ZWNhY1wiIGZvcj1cIjQzNjIxNjk5MlwiIHBvcG92ZXI9XCJtYW51YWxcIiBkYXRhLWRpcmVjdGlvbj1cInNcIiBkYXRhLXR5cGU9XCJsYWJlbFwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJzci1vbmx5IHBvc2l0aW9uLWFic29sdXRlXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgcm9sZT1cInRvb2x0aXBcIj53ZWJzaXRlPC90b29sLXRpcD48L3NwYW4+ICAgICAgICAgIDxzcGFuPjwvc3Bhbj48c3BhbiBjbGFzcz1cIkxhYmVsIExhYmVsLS1zZWNvbmRhcnkgdi1hbGlnbi1taWRkbGUgbXQtMSBuby13cmFwIHYtYWxpZ24tYmFzZWxpbmUgTGFiZWwtLWlubGluZVwiPlB1YmxpYzwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuXG4gICAgICA8cCBjbGFzcz1cInBpbm5lZC1pdGVtLWRlc2MgY29sb3ItZmctbXV0ZWQgdGV4dC1zbWFsbCBtdC0yIG1iLTBcIj5cbiAgICAgICAgXG4gICAgICA8L3A+XG5cbiAgICAgIDxwIGNsYXNzPVwibWItMCBtdC0yIGY2IGNvbG9yLWZnLW11dGVkXCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJkLWlubGluZS1ibG9jayBtci0zXCI+XG4gIDxzcGFuIGNsYXNzPVwicmVwby1sYW5ndWFnZS1jb2xvclwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogI2UzNGMyNlwiPjwvc3Bhbj5cbiAgPHNwYW4gaXRlbXByb3A9XCJwcm9ncmFtbWluZ0xhbmd1YWdlXCI+SFRNTDwvc3Bhbj5cbjwvc3Bhbj5cblxuICAgICAgICAgIDxhIGhyZWY9XCIvcmFpbHMvd2Vic2l0ZS9zdGFyZ2F6ZXJzXCIgY2xhc3M9XCJwaW5uZWQtaXRlbS1tZXRhIExpbmstLW11dGVkXCI+XG4gICAgICAgICAgICA8c3ZnIGFyaWEtbGFiZWw9XCJzdGFyc1wiIHJvbGU9XCJpbWdcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tc3RhclwiPlxuICAgIDxwYXRoIGQ9XCJNOCAuMjVhLjc1Ljc1IDAgMCAxIC42NzMuNDE4bDEuODgyIDMuODE1IDQuMjEuNjEyYS43NS43NSAwIDAgMSAuNDE2IDEuMjc5bC0zLjA0NiAyLjk3LjcxOSA0LjE5MmEuNzUxLjc1MSAwIDAgMS0xLjA4OC43OTFMOCAxMi4zNDdsLTMuNzY2IDEuOThhLjc1Ljc1IDAgMCAxLTEuMDg4LS43OWwuNzItNC4xOTRMLjgxOCA2LjM3NGEuNzUuNzUgMCAwIDEgLjQxNi0xLjI4bDQuMjEtLjYxMUw3LjMyNy42NjhBLjc1Ljc1IDAgMCAxIDggLjI1Wm0wIDIuNDQ1TDYuNjE1IDUuNWEuNzUuNzUgMCAwIDEtLjU2NC40MWwtMy4wOTcuNDUgMi4yNCAyLjE4NGEuNzUuNzUgMCAwIDEgLjIxNi42NjRsLS41MjggMy4wODQgMi43NjktMS40NTZhLjc1Ljc1IDAgMCAxIC42OTggMGwyLjc3IDEuNDU2LS41My0zLjA4NGEuNzUuNzUgMCAwIDEgLjIxNi0uNjY0bDIuMjQtMi4xODMtMy4wOTYtLjQ1YS43NS43NSAwIDAgMS0uNTY0LS40MUw4IDIuNjk0WlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAgICAgNjFcbiAgICAgICAgICA8L2E+XG4gICAgICAgICAgPGEgaHJlZj1cIi9yYWlscy93ZWJzaXRlL2ZvcmtzXCIgY2xhc3M9XCJwaW5uZWQtaXRlbS1tZXRhIExpbmstLW11dGVkXCI+XG4gICAgICAgICAgICA8c3ZnIGFyaWEtbGFiZWw9XCJmb3Jrc1wiIHJvbGU9XCJpbWdcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tcmVwby1mb3JrZWRcIj5cbiAgICA8cGF0aCBkPVwiTTUgNS4zNzJ2Ljg3OGMwIC40MTQuMzM2Ljc1Ljc1Ljc1aDQuNWEuNzUuNzUgMCAwIDAgLjc1LS43NXYtLjg3OGEyLjI1IDIuMjUgMCAxIDEgMS41IDB2Ljg3OGEyLjI1IDIuMjUgMCAwIDEtMi4yNSAyLjI1aC0xLjV2Mi4xMjhhMi4yNTEgMi4yNTEgMCAxIDEtMS41IDBWOC41aC0xLjVBMi4yNSAyLjI1IDAgMCAxIDMuNSA2LjI1di0uODc4YTIuMjUgMi4yNSAwIDEgMSAxLjUgMFpNNSAzLjI1YS43NS43NSAwIDEgMC0xLjUgMCAuNzUuNzUgMCAwIDAgMS41IDBabTYuNzUuNzVhLjc1Ljc1IDAgMSAwIDAtMS41Ljc1Ljc1IDAgMCAwIDAgMS41Wm0tMyA4Ljc1YS43NS43NSAwIDEgMC0xLjUgMCAuNzUuNzUgMCAwIDAgMS41IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgICA4M1xuICAgICAgICAgIDwvYT5cbiAgICAgIDwvcD5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2xpPlxuXG4gICAgICA8bGkgY2xhc3M9XCJtYi0zIGQtZmxleCBmbGV4LWNvbnRlbnQtc3RyZXRjaCBzb3J0YWJsZS1idXR0b24taXRlbSBwaW5uZWQtaXRlbS1saXN0LWl0ZW0ganMtcGlubmVkLWl0ZW0tbGlzdC1pdGVtIGNvbC0xMiBjb2wtbWQtNiBjb2wtbGctNlwiPlxuICA8ZGl2IGNsYXNzPVwiQm94IGQtZmxleCBwLTMgd2lkdGgtZnVsbCBwdWJsaWMgc291cmNlXCI+XG4gICAgPGRpdiBjbGFzcz1cInBpbm5lZC1pdGVtLWxpc3QtaXRlbS1jb250ZW50XCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IHdpZHRoLWZ1bGwgcG9zaXRpb24tcmVsYXRpdmVcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtMVwiPlxuICAgICAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tcmVwbyBtci0xIGNvbG9yLWZnLW11dGVkXCI+XG4gICAgPHBhdGggZD1cIk0yIDIuNUEyLjUgMi41IDAgMCAxIDQuNSAwaDguNzVhLjc1Ljc1IDAgMCAxIC43NS43NXYxMi41YS43NS43NSAwIDAgMS0uNzUuNzVoLTIuNWEuNzUuNzUgMCAwIDEgMC0xLjVoMS43NXYtMmgtOGExIDEgMCAwIDAtLjcxNCAxLjcuNzUuNzUgMCAxIDEtMS4wNzIgMS4wNUEyLjQ5NSAyLjQ5NSAwIDAgMSAyIDExLjVabTEwLjUtMWgtOGExIDEgMCAwIDAtMSAxdjYuNzA4QTIuNDg2IDIuNDg2IDAgMCAxIDQuNSA5aDhaTTUgMTIuMjVhLjI1LjI1IDAgMCAxIC4yNS0uMjVoMy41YS4yNS4yNSAwIDAgMSAuMjUuMjV2My4yNWEuMjUuMjUgMCAwIDEtLjQuMmwtMS40NS0xLjA4N2EuMjQ5LjI0OSAwIDAgMC0uMyAwTDUuNCAxNS43YS4yNS4yNSAwIDAgMS0uNC0uMlpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICA8c3BhbiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwicG9zaXRpb24tcmVsYXRpdmVcIj48YSBkYXRhLWh5ZHJvLWNsaWNrPVwieyZxdW90O2V2ZW50X3R5cGUmcXVvdDs6JnF1b3Q7dXNlcl9wcm9maWxlLmNsaWNrJnF1b3Q7LCZxdW90O3BheWxvYWQmcXVvdDs6eyZxdW90O3Byb2ZpbGVfdXNlcl9pZCZxdW90Ozo0MjIzLCZxdW90O3RhcmdldCZxdW90OzomcXVvdDtQSU5ORURfUkVQTyZxdW90OywmcXVvdDt1c2VyX2lkJnF1b3Q7Om51bGwsJnF1b3Q7b3JpZ2luYXRpbmdfdXJsJnF1b3Q7OiZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS9yYWlscyZxdW90O319XCIgZGF0YS1oeWRyby1jbGljay1obWFjPVwiNDk3N2Q2ZDNmMDQyMDkzMTJiZmU1MWVmYjYzNzI4OGJiNTkzNGZlODA1MTE4OGJlNDMxNDQyZmVlZDkzZGQxN1wiIGlkPVwiMzIxMDQ5MjRcIiBocmVmPVwiL3JhaWxzL3Nwcm9ja2V0c1wiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMaW5rIG1yLTEgdGV4dC1ib2xkIHdiLWJyZWFrLXdvcmRcIiBhcmlhLWxhYmVsbGVkYnk9XCJ0b29sdGlwLWViNDQ2MDk5LTA1N2UtNDZkZC1iYTcyLWVmMzY3YzE5M2UyMlwiPlxuPHNwYW4gY2xhc3M9XCJyZXBvXCI+c3Byb2NrZXRzPC9zcGFuPlxuPC9hPjx0b29sLXRpcCBpZD1cInRvb2x0aXAtZWI0NDYwOTktMDU3ZS00NmRkLWJhNzItZWYzNjdjMTkzZTIyXCIgZm9yPVwiMzIxMDQ5MjRcIiBwb3BvdmVyPVwibWFudWFsXCIgZGF0YS1kaXJlY3Rpb249XCJzXCIgZGF0YS10eXBlPVwibGFiZWxcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwic3Itb25seSBwb3NpdGlvbi1hYnNvbHV0ZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHJvbGU9XCJ0b29sdGlwXCI+c3Byb2NrZXRzPC90b29sLXRpcD48L3NwYW4+ICAgICAgICAgIDxzcGFuPjwvc3Bhbj48c3BhbiBjbGFzcz1cIkxhYmVsIExhYmVsLS1zZWNvbmRhcnkgdi1hbGlnbi1taWRkbGUgbXQtMSBuby13cmFwIHYtYWxpZ24tYmFzZWxpbmUgTGFiZWwtLWlubGluZVwiPlB1YmxpYzwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuXG4gICAgICA8cCBjbGFzcz1cInBpbm5lZC1pdGVtLWRlc2MgY29sb3ItZmctbXV0ZWQgdGV4dC1zbWFsbCBtdC0yIG1iLTBcIj5cbiAgICAgICAgUmFjay1iYXNlZCBhc3NldCBwYWNrYWdpbmcgc3lzdGVtXG4gICAgICA8L3A+XG5cbiAgICAgIDxwIGNsYXNzPVwibWItMCBtdC0yIGY2IGNvbG9yLWZnLW11dGVkXCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJkLWlubGluZS1ibG9jayBtci0zXCI+XG4gIDxzcGFuIGNsYXNzPVwicmVwby1sYW5ndWFnZS1jb2xvclwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogIzcwMTUxNlwiPjwvc3Bhbj5cbiAgPHNwYW4gaXRlbXByb3A9XCJwcm9ncmFtbWluZ0xhbmd1YWdlXCI+UnVieTwvc3Bhbj5cbjwvc3Bhbj5cblxuICAgICAgICAgIDxhIGhyZWY9XCIvcmFpbHMvc3Byb2NrZXRzL3N0YXJnYXplcnNcIiBjbGFzcz1cInBpbm5lZC1pdGVtLW1ldGEgTGluay0tbXV0ZWRcIj5cbiAgICAgICAgICAgIDxzdmcgYXJpYS1sYWJlbD1cInN0YXJzXCIgcm9sZT1cImltZ1wiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1zdGFyXCI+XG4gICAgPHBhdGggZD1cIk04IC4yNWEuNzUuNzUgMCAwIDEgLjY3My40MThsMS44ODIgMy44MTUgNC4yMS42MTJhLjc1Ljc1IDAgMCAxIC40MTYgMS4yNzlsLTMuMDQ2IDIuOTcuNzE5IDQuMTkyYS43NTEuNzUxIDAgMCAxLTEuMDg4Ljc5MUw4IDEyLjM0N2wtMy43NjYgMS45OGEuNzUuNzUgMCAwIDEtMS4wODgtLjc5bC43Mi00LjE5NEwuODE4IDYuMzc0YS43NS43NSAwIDAgMSAuNDE2LTEuMjhsNC4yMS0uNjExTDcuMzI3LjY2OEEuNzUuNzUgMCAwIDEgOCAuMjVabTAgMi40NDVMNi42MTUgNS41YS43NS43NSAwIDAgMS0uNTY0LjQxbC0zLjA5Ny40NSAyLjI0IDIuMTg0YS43NS43NSAwIDAgMSAuMjE2LjY2NGwtLjUyOCAzLjA4NCAyLjc2OS0xLjQ1NmEuNzUuNzUgMCAwIDEgLjY5OCAwbDIuNzcgMS40NTYtLjUzLTMuMDg0YS43NS43NSAwIDAgMSAuMjE2LS42NjRsMi4yNC0yLjE4My0zLjA5Ni0uNDVhLjc1Ljc1IDAgMCAxLS41NjQtLjQxTDggMi42OTRaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgICA5MzNcbiAgICAgICAgICA8L2E+XG4gICAgICAgICAgPGEgaHJlZj1cIi9yYWlscy9zcHJvY2tldHMvZm9ya3NcIiBjbGFzcz1cInBpbm5lZC1pdGVtLW1ldGEgTGluay0tbXV0ZWRcIj5cbiAgICAgICAgICAgIDxzdmcgYXJpYS1sYWJlbD1cImZvcmtzXCIgcm9sZT1cImltZ1wiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1yZXBvLWZvcmtlZFwiPlxuICAgIDxwYXRoIGQ9XCJNNSA1LjM3MnYuODc4YzAgLjQxNC4zMzYuNzUuNzUuNzVoNC41YS43NS43NSAwIDAgMCAuNzUtLjc1di0uODc4YTIuMjUgMi4yNSAwIDEgMSAxLjUgMHYuODc4YTIuMjUgMi4yNSAwIDAgMS0yLjI1IDIuMjVoLTEuNXYyLjEyOGEyLjI1MSAyLjI1MSAwIDEgMS0xLjUgMFY4LjVoLTEuNUEyLjI1IDIuMjUgMCAwIDEgMy41IDYuMjV2LS44NzhhMi4yNSAyLjI1IDAgMSAxIDEuNSAwWk01IDMuMjVhLjc1Ljc1IDAgMSAwLTEuNSAwIC43NS43NSAwIDAgMCAxLjUgMFptNi43NS43NWEuNzUuNzUgMCAxIDAgMC0xLjUuNzUuNzUgMCAwIDAgMCAxLjVabS0zIDguNzVhLjc1Ljc1IDAgMSAwLTEuNSAwIC43NS43NSAwIDAgMCAxLjUgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAgIDc5MVxuICAgICAgICAgIDwvYT5cbiAgICAgIDwvcD5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2xpPlxuXG4gICAgICA8bGkgY2xhc3M9XCJtYi0zIGQtZmxleCBmbGV4LWNvbnRlbnQtc3RyZXRjaCBzb3J0YWJsZS1idXR0b24taXRlbSBwaW5uZWQtaXRlbS1saXN0LWl0ZW0ganMtcGlubmVkLWl0ZW0tbGlzdC1pdGVtIGNvbC0xMiBjb2wtbWQtNiBjb2wtbGctNlwiPlxuICA8ZGl2IGNsYXNzPVwiQm94IGQtZmxleCBwLTMgd2lkdGgtZnVsbCBwdWJsaWMgc291cmNlXCI+XG4gICAgPGRpdiBjbGFzcz1cInBpbm5lZC1pdGVtLWxpc3QtaXRlbS1jb250ZW50XCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IHdpZHRoLWZ1bGwgcG9zaXRpb24tcmVsYXRpdmVcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtMVwiPlxuICAgICAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tcmVwbyBtci0xIGNvbG9yLWZnLW11dGVkXCI+XG4gICAgPHBhdGggZD1cIk0yIDIuNUEyLjUgMi41IDAgMCAxIDQuNSAwaDguNzVhLjc1Ljc1IDAgMCAxIC43NS43NXYxMi41YS43NS43NSAwIDAgMS0uNzUuNzVoLTIuNWEuNzUuNzUgMCAwIDEgMC0xLjVoMS43NXYtMmgtOGExIDEgMCAwIDAtLjcxNCAxLjcuNzUuNzUgMCAxIDEtMS4wNzIgMS4wNUEyLjQ5NSAyLjQ5NSAwIDAgMSAyIDExLjVabTEwLjUtMWgtOGExIDEgMCAwIDAtMSAxdjYuNzA4QTIuNDg2IDIuNDg2IDAgMCAxIDQuNSA5aDhaTTUgMTIuMjVhLjI1LjI1IDAgMCAxIC4yNS0uMjVoMy41YS4yNS4yNSAwIDAgMSAuMjUuMjV2My4yNWEuMjUuMjUgMCAwIDEtLjQuMmwtMS40NS0xLjA4N2EuMjQ5LjI0OSAwIDAgMC0uMyAwTDUuNCAxNS43YS4yNS4yNSAwIDAgMS0uNC0uMlpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICA8c3BhbiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwicG9zaXRpb24tcmVsYXRpdmVcIj48YSBkYXRhLWh5ZHJvLWNsaWNrPVwieyZxdW90O2V2ZW50X3R5cGUmcXVvdDs6JnF1b3Q7dXNlcl9wcm9maWxlLmNsaWNrJnF1b3Q7LCZxdW90O3BheWxvYWQmcXVvdDs6eyZxdW90O3Byb2ZpbGVfdXNlcl9pZCZxdW90Ozo0MjIzLCZxdW90O3RhcmdldCZxdW90OzomcXVvdDtQSU5ORURfUkVQTyZxdW90OywmcXVvdDt1c2VyX2lkJnF1b3Q7Om51bGwsJnF1b3Q7b3JpZ2luYXRpbmdfdXJsJnF1b3Q7OiZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS9yYWlscyZxdW90O319XCIgZGF0YS1oeWRyby1jbGljay1obWFjPVwiNDk3N2Q2ZDNmMDQyMDkzMTJiZmU1MWVmYjYzNzI4OGJiNTkzNGZlODA1MTE4OGJlNDMxNDQyZmVlZDkzZGQxN1wiIGlkPVwiNDAzNjQxNTIxXCIgaHJlZj1cIi9yYWlscy9qc2J1bmRsaW5nLXJhaWxzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxpbmsgbXItMSB0ZXh0LWJvbGQgd2ItYnJlYWstd29yZFwiIGFyaWEtbGFiZWxsZWRieT1cInRvb2x0aXAtYmQzMjVkNTUtNGJjZi00M2IyLTg0ODYtZDQzMjc3MWM3ZmMwXCI+XG48c3BhbiBjbGFzcz1cInJlcG9cIj5qc2J1bmRsaW5nLXJhaWxzPC9zcGFuPlxuPC9hPjx0b29sLXRpcCBpZD1cInRvb2x0aXAtYmQzMjVkNTUtNGJjZi00M2IyLTg0ODYtZDQzMjc3MWM3ZmMwXCIgZm9yPVwiNDAzNjQxNTIxXCIgcG9wb3Zlcj1cIm1hbnVhbFwiIGRhdGEtZGlyZWN0aW9uPVwic1wiIGRhdGEtdHlwZT1cImxhYmVsXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cInNyLW9ubHkgcG9zaXRpb24tYWJzb2x1dGVcIiBhcmlhLWhpZGRlbj1cInRydWVcIiByb2xlPVwidG9vbHRpcFwiPmpzYnVuZGxpbmctcmFpbHM8L3Rvb2wtdGlwPjwvc3Bhbj4gICAgICAgICAgPHNwYW4+PC9zcGFuPjxzcGFuIGNsYXNzPVwiTGFiZWwgTGFiZWwtLXNlY29uZGFyeSB2LWFsaWduLW1pZGRsZSBtdC0xIG5vLXdyYXAgdi1hbGlnbi1iYXNlbGluZSBMYWJlbC0taW5saW5lXCI+UHVibGljPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG5cbiAgICAgIDxwIGNsYXNzPVwicGlubmVkLWl0ZW0tZGVzYyBjb2xvci1mZy1tdXRlZCB0ZXh0LXNtYWxsIG10LTIgbWItMFwiPlxuICAgICAgICBCdW5kbGUgYW5kIHRyYW5zcGlsZSBKYXZhU2NyaXB0IGluIFJhaWxzIHdpdGggZXNidWlsZCwgcm9sbHVwLmpzLCBvciBXZWJwYWNrLlxuICAgICAgPC9wPlxuXG4gICAgICA8cCBjbGFzcz1cIm1iLTAgbXQtMiBmNiBjb2xvci1mZy1tdXRlZFwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZC1pbmxpbmUtYmxvY2sgbXItM1wiPlxuICA8c3BhbiBjbGFzcz1cInJlcG8tbGFuZ3VhZ2UtY29sb3JcIiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6ICM3MDE1MTZcIj48L3NwYW4+XG4gIDxzcGFuIGl0ZW1wcm9wPVwicHJvZ3JhbW1pbmdMYW5ndWFnZVwiPlJ1Ynk8L3NwYW4+XG48L3NwYW4+XG5cbiAgICAgICAgICA8YSBocmVmPVwiL3JhaWxzL2pzYnVuZGxpbmctcmFpbHMvc3RhcmdhemVyc1wiIGNsYXNzPVwicGlubmVkLWl0ZW0tbWV0YSBMaW5rLS1tdXRlZFwiPlxuICAgICAgICAgICAgPHN2ZyBhcmlhLWxhYmVsPVwic3RhcnNcIiByb2xlPVwiaW1nXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLXN0YXJcIj5cbiAgICA8cGF0aCBkPVwiTTggLjI1YS43NS43NSAwIDAgMSAuNjczLjQxOGwxLjg4MiAzLjgxNSA0LjIxLjYxMmEuNzUuNzUgMCAwIDEgLjQxNiAxLjI3OWwtMy4wNDYgMi45Ny43MTkgNC4xOTJhLjc1MS43NTEgMCAwIDEtMS4wODguNzkxTDggMTIuMzQ3bC0zLjc2NiAxLjk4YS43NS43NSAwIDAgMS0xLjA4OC0uNzlsLjcyLTQuMTk0TC44MTggNi4zNzRhLjc1Ljc1IDAgMCAxIC40MTYtMS4yOGw0LjIxLS42MTFMNy4zMjcuNjY4QS43NS43NSAwIDAgMSA4IC4yNVptMCAyLjQ0NUw2LjYxNSA1LjVhLjc1Ljc1IDAgMCAxLS41NjQuNDFsLTMuMDk3LjQ1IDIuMjQgMi4xODRhLjc1Ljc1IDAgMCAxIC4yMTYuNjY0bC0uNTI4IDMuMDg0IDIuNzY5LTEuNDU2YS43NS43NSAwIDAgMSAuNjk4IDBsMi43NyAxLjQ1Ni0uNTMtMy4wODRhLjc1Ljc1IDAgMCAxIC4yMTYtLjY2NGwyLjI0LTIuMTgzLTMuMDk2LS40NWEuNzUuNzUgMCAwIDEtLjU2NC0uNDFMOCAyLjY5NFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAgIDgxNVxuICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8YSBocmVmPVwiL3JhaWxzL2pzYnVuZGxpbmctcmFpbHMvZm9ya3NcIiBjbGFzcz1cInBpbm5lZC1pdGVtLW1ldGEgTGluay0tbXV0ZWRcIj5cbiAgICAgICAgICAgIDxzdmcgYXJpYS1sYWJlbD1cImZvcmtzXCIgcm9sZT1cImltZ1wiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1yZXBvLWZvcmtlZFwiPlxuICAgIDxwYXRoIGQ9XCJNNSA1LjM3MnYuODc4YzAgLjQxNC4zMzYuNzUuNzUuNzVoNC41YS43NS43NSAwIDAgMCAuNzUtLjc1di0uODc4YTIuMjUgMi4yNSAwIDEgMSAxLjUgMHYuODc4YTIuMjUgMi4yNSAwIDAgMS0yLjI1IDIuMjVoLTEuNXYyLjEyOGEyLjI1MSAyLjI1MSAwIDEgMS0xLjUgMFY4LjVoLTEuNUEyLjI1IDIuMjUgMCAwIDEgMy41IDYuMjV2LS44NzhhMi4yNSAyLjI1IDAgMSAxIDEuNSAwWk01IDMuMjVhLjc1Ljc1IDAgMSAwLTEuNSAwIC43NS43NSAwIDAgMCAxLjUgMFptNi43NS43NWEuNzUuNzUgMCAxIDAgMC0xLjUuNzUuNzUgMCAwIDAgMCAxLjVabS0zIDguNzVhLjc1Ljc1IDAgMSAwLTEuNSAwIC43NS43NSAwIDAgMCAxLjUgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAgIDE0NFxuICAgICAgICAgIDwvYT5cbiAgICAgIDwvcD5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2xpPlxuXG4gICAgICA8bGkgY2xhc3M9XCJtYi0zIGQtZmxleCBmbGV4LWNvbnRlbnQtc3RyZXRjaCBzb3J0YWJsZS1idXR0b24taXRlbSBwaW5uZWQtaXRlbS1saXN0LWl0ZW0ganMtcGlubmVkLWl0ZW0tbGlzdC1pdGVtIGNvbC0xMiBjb2wtbWQtNiBjb2wtbGctNlwiPlxuICA8ZGl2IGNsYXNzPVwiQm94IGQtZmxleCBwLTMgd2lkdGgtZnVsbCBwdWJsaWMgc291cmNlXCI+XG4gICAgPGRpdiBjbGFzcz1cInBpbm5lZC1pdGVtLWxpc3QtaXRlbS1jb250ZW50XCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IHdpZHRoLWZ1bGwgcG9zaXRpb24tcmVsYXRpdmVcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImZsZXgtMVwiPlxuICAgICAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tcmVwbyBtci0xIGNvbG9yLWZnLW11dGVkXCI+XG4gICAgPHBhdGggZD1cIk0yIDIuNUEyLjUgMi41IDAgMCAxIDQuNSAwaDguNzVhLjc1Ljc1IDAgMCAxIC43NS43NXYxMi41YS43NS43NSAwIDAgMS0uNzUuNzVoLTIuNWEuNzUuNzUgMCAwIDEgMC0xLjVoMS43NXYtMmgtOGExIDEgMCAwIDAtLjcxNCAxLjcuNzUuNzUgMCAxIDEtMS4wNzIgMS4wNUEyLjQ5NSAyLjQ5NSAwIDAgMSAyIDExLjVabTEwLjUtMWgtOGExIDEgMCAwIDAtMSAxdjYuNzA4QTIuNDg2IDIuNDg2IDAgMCAxIDQuNSA5aDhaTTUgMTIuMjVhLjI1LjI1IDAgMCAxIC4yNS0uMjVoMy41YS4yNS4yNSAwIDAgMSAuMjUuMjV2My4yNWEuMjUuMjUgMCAwIDEtLjQuMmwtMS40NS0xLjA4N2EuMjQ5LjI0OSAwIDAgMC0uMyAwTDUuNCAxNS43YS4yNS4yNSAwIDAgMS0uNC0uMlpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICA8c3BhbiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwicG9zaXRpb24tcmVsYXRpdmVcIj48YSBkYXRhLWh5ZHJvLWNsaWNrPVwieyZxdW90O2V2ZW50X3R5cGUmcXVvdDs6JnF1b3Q7dXNlcl9wcm9maWxlLmNsaWNrJnF1b3Q7LCZxdW90O3BheWxvYWQmcXVvdDs6eyZxdW90O3Byb2ZpbGVfdXNlcl9pZCZxdW90Ozo0MjIzLCZxdW90O3RhcmdldCZxdW90OzomcXVvdDtQSU5ORURfUkVQTyZxdW90OywmcXVvdDt1c2VyX2lkJnF1b3Q7Om51bGwsJnF1b3Q7b3JpZ2luYXRpbmdfdXJsJnF1b3Q7OiZxdW90O2h0dHBzOi8vZ2l0aHViLmNvbS9yYWlscyZxdW90O319XCIgZGF0YS1oeWRyby1jbGljay1obWFjPVwiNDk3N2Q2ZDNmMDQyMDkzMTJiZmU1MWVmYjYzNzI4OGJiNTkzNGZlODA1MTE4OGJlNDMxNDQyZmVlZDkzZGQxN1wiIGlkPVwiNDA0MDE5OTY3XCIgaHJlZj1cIi9yYWlscy9jc3NidW5kbGluZy1yYWlsc1wiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMaW5rIG1yLTEgdGV4dC1ib2xkIHdiLWJyZWFrLXdvcmRcIiBhcmlhLWxhYmVsbGVkYnk9XCJ0b29sdGlwLTQ3MWY5OWU5LTRiNTgtNDZjYS1iMGQwLWJlMGY2MTQyOTBiM1wiPlxuPHNwYW4gY2xhc3M9XCJyZXBvXCI+Y3NzYnVuZGxpbmctcmFpbHM8L3NwYW4+XG48L2E+PHRvb2wtdGlwIGlkPVwidG9vbHRpcC00NzFmOTllOS00YjU4LTQ2Y2EtYjBkMC1iZTBmNjE0MjkwYjNcIiBmb3I9XCI0MDQwMTk5NjdcIiBwb3BvdmVyPVwibWFudWFsXCIgZGF0YS1kaXJlY3Rpb249XCJzXCIgZGF0YS10eXBlPVwibGFiZWxcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwic3Itb25seSBwb3NpdGlvbi1hYnNvbHV0ZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHJvbGU9XCJ0b29sdGlwXCI+Y3NzYnVuZGxpbmctcmFpbHM8L3Rvb2wtdGlwPjwvc3Bhbj4gICAgICAgICAgPHNwYW4+PC9zcGFuPjxzcGFuIGNsYXNzPVwiTGFiZWwgTGFiZWwtLXNlY29uZGFyeSB2LWFsaWduLW1pZGRsZSBtdC0xIG5vLXdyYXAgdi1hbGlnbi1iYXNlbGluZSBMYWJlbC0taW5saW5lXCI+UHVibGljPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG5cbiAgICAgIDxwIGNsYXNzPVwicGlubmVkLWl0ZW0tZGVzYyBjb2xvci1mZy1tdXRlZCB0ZXh0LXNtYWxsIG10LTIgbWItMFwiPlxuICAgICAgICBCdW5kbGUgYW5kIHByb2Nlc3MgQ1NTIGluIFJhaWxzIHdpdGggVGFpbHdpbmQsIFBvc3RDU1MsIGFuZCBTYXNzIHZpYSBOb2RlLmpzLlxuICAgICAgPC9wPlxuXG4gICAgICA8cCBjbGFzcz1cIm1iLTAgbXQtMiBmNiBjb2xvci1mZy1tdXRlZFwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZC1pbmxpbmUtYmxvY2sgbXItM1wiPlxuICA8c3BhbiBjbGFzcz1cInJlcG8tbGFuZ3VhZ2UtY29sb3JcIiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6ICM3MDE1MTZcIj48L3NwYW4+XG4gIDxzcGFuIGl0ZW1wcm9wPVwicHJvZ3JhbW1pbmdMYW5ndWFnZVwiPlJ1Ynk8L3NwYW4+XG48L3NwYW4+XG5cbiAgICAgICAgICA8YSBocmVmPVwiL3JhaWxzL2Nzc2J1bmRsaW5nLXJhaWxzL3N0YXJnYXplcnNcIiBjbGFzcz1cInBpbm5lZC1pdGVtLW1ldGEgTGluay0tbXV0ZWRcIj5cbiAgICAgICAgICAgIDxzdmcgYXJpYS1sYWJlbD1cInN0YXJzXCIgcm9sZT1cImltZ1wiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1zdGFyXCI+XG4gICAgPHBhdGggZD1cIk04IC4yNWEuNzUuNzUgMCAwIDEgLjY3My40MThsMS44ODIgMy44MTUgNC4yMS42MTJhLjc1Ljc1IDAgMCAxIC40MTYgMS4yNzlsLTMuMDQ2IDIuOTcuNzE5IDQuMTkyYS43NTEuNzUxIDAgMCAxLTEuMDg4Ljc5MUw4IDEyLjM0N2wtMy43NjYgMS45OGEuNzUuNzUgMCAwIDEtMS4wODgtLjc5bC43Mi00LjE5NEwuODE4IDYuMzc0YS43NS43NSAwIDAgMSAuNDE2LTEuMjhsNC4yMS0uNjExTDcuMzI3LjY2OEEuNzUuNzUgMCAwIDEgOCAuMjVabTAgMi40NDVMNi42MTUgNS41YS43NS43NSAwIDAgMS0uNTY0LjQxbC0zLjA5Ny40NSAyLjI0IDIuMTg0YS43NS43NSAwIDAgMSAuMjE2LjY2NGwtLjUyOCAzLjA4NCAyLjc2OS0xLjQ1NmEuNzUuNzUgMCAwIDEgLjY5OCAwbDIuNzcgMS40NTYtLjUzLTMuMDg0YS43NS43NSAwIDAgMSAuMjE2LS42NjRsMi4yNC0yLjE4My0zLjA5Ni0uNDVhLjc1Ljc1IDAgMCAxLS41NjQtLjQxTDggMi42OTRaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgICA1NjZcbiAgICAgICAgICA8L2E+XG4gICAgICAgICAgPGEgaHJlZj1cIi9yYWlscy9jc3NidW5kbGluZy1yYWlscy9mb3Jrc1wiIGNsYXNzPVwicGlubmVkLWl0ZW0tbWV0YSBMaW5rLS1tdXRlZFwiPlxuICAgICAgICAgICAgPHN2ZyBhcmlhLWxhYmVsPVwiZm9ya3NcIiByb2xlPVwiaW1nXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLXJlcG8tZm9ya2VkXCI+XG4gICAgPHBhdGggZD1cIk01IDUuMzcydi44NzhjMCAuNDE0LjMzNi43NS43NS43NWg0LjVhLjc1Ljc1IDAgMCAwIC43NS0uNzV2LS44NzhhMi4yNSAyLjI1IDAgMSAxIDEuNSAwdi44NzhhMi4yNSAyLjI1IDAgMCAxLTIuMjUgMi4yNWgtMS41djIuMTI4YTIuMjUxIDIuMjUxIDAgMSAxLTEuNSAwVjguNWgtMS41QTIuMjUgMi4yNSAwIDAgMSAzLjUgNi4yNXYtLjg3OGEyLjI1IDIuMjUgMCAxIDEgMS41IDBaTTUgMy4yNWEuNzUuNzUgMCAxIDAtMS41IDAgLjc1Ljc1IDAgMCAwIDEuNSAwWm02Ljc1Ljc1YS43NS43NSAwIDEgMCAwLTEuNS43NS43NSAwIDAgMCAwIDEuNVptLTMgOC43NWEuNzUuNzUgMCAxIDAtMS41IDAgLjc1Ljc1IDAgMCAwIDEuNSAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAgICAgODNcbiAgICAgICAgICA8L2E+XG4gICAgICA8L3A+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9saT5cblxuPC9vbD5cblxuPC9kaXY+XG5cblxuICAgIDxkaXYgY2xhc3M9XCJtYi0zXCIgaWQ9XCJvcmctcHJvZmlsZS1yZXBvc2l0b3JpZXNcIj5cbiAgPGRpdj5cbiAgICAgIDxoMyBjbGFzcz1cImY0IHRleHQtbm9ybWFsIG1iLTJcIj5cbiAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tcmVwbyBtci0xIGNvbG9yLWZnLW11dGVkXCI+XG4gICAgPHBhdGggZD1cIk0yIDIuNUEyLjUgMi41IDAgMCAxIDQuNSAwaDguNzVhLjc1Ljc1IDAgMCAxIC43NS43NXYxMi41YS43NS43NSAwIDAgMS0uNzUuNzVoLTIuNWEuNzUuNzUgMCAwIDEgMC0xLjVoMS43NXYtMmgtOGExIDEgMCAwIDAtLjcxNCAxLjcuNzUuNzUgMCAxIDEtMS4wNzIgMS4wNUEyLjQ5NSAyLjQ5NSAwIDAgMSAyIDExLjVabTEwLjUtMWgtOGExIDEgMCAwIDAtMSAxdjYuNzA4QTIuNDg2IDIuNDg2IDAgMCAxIDQuNSA5aDhaTTUgMTIuMjVhLjI1LjI1IDAgMCAxIC4yNS0uMjVoMy41YS4yNS4yNSAwIDAgMSAuMjUuMjV2My4yNWEuMjUuMjUgMCAwIDEtLjQuMmwtMS40NS0xLjA4N2EuMjQ5LjI0OSAwIDAgMC0uMyAwTDUuNCAxNS43YS4yNS4yNSAwIDAgMS0uNC0uMlpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgUmVwb3NpdG9yaWVzXG4gICAgICA8L2gzPlxuICAgICAgPGRpdiBjbGFzcz1cIm15LTNcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBmbGV4LWl0ZW1zLXN0YXJ0XCI+XG4gICAgICAgICAgPCEtLSAnXCJgIC0tPjwhLS0gPC90ZXh0YXJlYT48L3htcD4gLS0+PGZvcm0gZGF0YS1hdXRvc2VhcmNoLXJlc3VsdHMtY29udGFpbmVyPVwib3JnLXJlcG9zaXRvcmllc1wiIGNsYXNzPVwiY29sLTEyIG1iLTQgbWItbWQtMFwiIHJvbGU9XCJzZWFyY2hcIiBkYXRhLXR1cmJvPVwiZmFsc2VcIiBhY3Rpb249XCIvcmFpbHNcIiBhY2NlcHQtY2hhcnNldD1cIlVURi04XCIgbWV0aG9kPVwiZ2V0XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGZsZXgtY29sdW1uIGZsZXgtbGctcm93IGZsZXgtYXV0b1wiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYXV0by1zZWFyY2gtZ3JvdXAgbWItMSBtYi1sZy0wIG1yLWxnLTEgZmxleC1hdXRvXCI+XG4gICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJzZWFyY2hcIiBpZD1cInlvdXItcmVwb3MtZmlsdGVyXCIgbmFtZT1cInFcIiBjbGFzcz1cImF1dG8tc2VhcmNoLWlucHV0IGZvcm0tY29udHJvbCB3aWR0aC1mdWxsXCIgcGxhY2Vob2xkZXI9XCJGaW5kIGEgcmVwb3NpdG9yeeKAplwiIGF1dG9jb21wbGV0ZT1cIm9mZlwiIGFyaWEtbGFiZWw9XCJGaW5kIGEgcmVwb3NpdG9yeeKAplwiIHZhbHVlPVwiXCIgZGF0YS10aHJvdHRsZWQtYXV0b3N1Ym1pdD1cIlwiPlxuICAgICAgICAgICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLXNlYXJjaFwiPlxuICAgIDxwYXRoIGQ9XCJNMTAuNjggMTEuNzRhNiA2IDAgMCAxLTcuOTIyLTguOTgyIDYgNiAwIDAgMSA4Ljk4MiA3LjkyMmwzLjA0IDMuMDRhLjc0OS43NDkgMCAwIDEtLjMyNiAxLjI3NS43NDkuNzQ5IDAgMCAxLS43MzQtLjIxNVpNMTEuNSA3YTQuNDk5IDQuNDk5IDAgMSAwLTguOTk3IDBBNC40OTkgNC40OTkgMCAwIDAgMTEuNSA3WlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAgICAgICAgIDxzdmcgc3R5bGU9XCJib3gtc2l6aW5nOiBjb250ZW50LWJveDsgY29sb3I6IHZhcigtLWNvbG9yLWljb24tcHJpbWFyeSk7XCIgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIGZpbGw9XCJub25lXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cInNwaW5uZXIgYW5pbS1yb3RhdGVcIj5cbiAgPGNpcmNsZSBjeD1cIjhcIiBjeT1cIjhcIiByPVwiN1wiIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiIHN0cm9rZS1vcGFjaXR5PVwiMC4yNVwiIHN0cm9rZS13aWR0aD1cIjJcIiB2ZWN0b3ItZWZmZWN0PVwibm9uLXNjYWxpbmctc3Ryb2tlXCIgZmlsbD1cIm5vbmVcIj48L2NpcmNsZT5cbiAgPHBhdGggZD1cIk0xNSA4YTcuMDAyIDcuMDAyIDAgMDAtNy03XCIgc3Ryb2tlPVwiY3VycmVudENvbG9yXCIgc3Ryb2tlLXdpZHRoPVwiMlwiIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiB2ZWN0b3ItZWZmZWN0PVwibm9uLXNjYWxpbmctc3Ryb2tlXCI+PC9wYXRoPlxuPC9zdmc+ICA8c3BhbiBjbGFzcz1cInNyLW9ubHlcIj5Mb2FkaW5nPC9zcGFuPlxuXG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGZsZXgtd3JhcFwiPlxuICAgICAgICAgICAgICAgIDxkZXRhaWxzIGNsYXNzPVwiZGV0YWlscy1yZXNldCBkZXRhaWxzLW92ZXJsYXkgcG9zaXRpb24tcmVsYXRpdmUgbXQtMSBtdC1sZy0wIG1yLTEgbWwtbGctMlwiIGlkPVwidHlwZS1vcHRpb25zXCI+XG4gICAgICAgICAgICAgICAgICAgIDxzdW1tYXJ5IGFyaWEtaGFzcG9wdXA9XCJtZW51XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImJ0blwiIHJvbGU9XCJidXR0b25cIj4gICAgPHNwYW4+VHlwZTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJkcm9wZG93bi1jYXJldFwiPjwvc3Bhbj5cbjwvc3VtbWFyeT4gICAgICAgICAgICAgICAgICA8ZGV0YWlscy1tZW51IGNsYXNzPVwiU2VsZWN0TWVudSBsZWZ0LW1kLTAgbGVmdC1sZy1hdXRvIHJpZ2h0LW1kLWF1dG8gcmlnaHQtbGctMFwiIHJvbGU9XCJtZW51XCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJTZWxlY3RNZW51LW1vZGFsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgPGhlYWRlciBjbGFzcz1cIlNlbGVjdE1lbnUtaGVhZGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIlNlbGVjdE1lbnUtdGl0bGVcIj5TZWxlY3QgdHlwZTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJTZWxlY3RNZW51LWNsb3NlQnV0dG9uXCIgdHlwZT1cImJ1dHRvblwiIGRhdGEtdG9nZ2xlLWZvcj1cInR5cGUtb3B0aW9uc1wiPjxzdmcgYXJpYS1sYWJlbD1cIkNsb3NlIG1lbnVcIiBhcmlhLWhpZGRlbj1cImZhbHNlXCIgcm9sZT1cImltZ1wiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi14XCI+XG4gICAgPHBhdGggZD1cIk0zLjcyIDMuNzJhLjc1Ljc1IDAgMCAxIDEuMDYgMEw4IDYuOTRsMy4yMi0zLjIyYS43NDkuNzQ5IDAgMCAxIDEuMjc1LjMyNi43NDkuNzQ5IDAgMCAxLS4yMTUuNzM0TDkuMDYgOGwzLjIyIDMuMjJhLjc0OS43NDkgMCAwIDEtLjMyNiAxLjI3NS43NDkuNzQ5IDAgMCAxLS43MzQtLjIxNUw4IDkuMDZsLTMuMjIgMy4yMmEuNzUxLjc1MSAwIDAgMS0xLjA0Mi0uMDE4Ljc1MS43NTEgMCAwIDEtLjAxOC0xLjA0Mkw2Ljk0IDggMy43MiA0Ljc4YS43NS43NSAwIDAgMSAwLTEuMDZaXCI+PC9wYXRoPlxuPC9zdmc+PC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgPC9oZWFkZXI+XG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIlNlbGVjdE1lbnUtbGlzdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJTZWxlY3RNZW51LWl0ZW1cIiByb2xlPVwibWVudWl0ZW1yYWRpb1wiIGFyaWEtY2hlY2tlZD1cInRydWVcIiB0YWJpbmRleD1cIjBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgbmFtZT1cInR5cGVcIiBpZD1cInR5cGVfYWxsXCIgdmFsdWU9XCJhbGxcIiBoaWRkZW49XCJoaWRkZW5cIiBkYXRhLWF1dG9zdWJtaXQ9XCJ0cnVlXCIgY2hlY2tlZD1cImNoZWNrZWRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1jaGVjayBTZWxlY3RNZW51LWljb24gU2VsZWN0TWVudS1pY29uLS1jaGVja1wiPlxuICAgIDxwYXRoIGQ9XCJNMTMuNzggNC4yMmEuNzUuNzUgMCAwIDEgMCAxLjA2bC03LjI1IDcuMjVhLjc1Ljc1IDAgMCAxLTEuMDYgMEwyLjIyIDkuMjhhLjc1MS43NTEgMCAwIDEgLjAxOC0xLjA0Mi43NTEuNzUxIDAgMCAxIDEuMDQyLS4wMThMNiAxMC45NGw2LjcyLTYuNzJhLjc1Ljc1IDAgMCAxIDEuMDYgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtbm9ybWFsXCIgZGF0YS1tZW51LWJ1dHRvbi10ZXh0PVwiXCI+QWxsPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJTZWxlY3RNZW51LWl0ZW1cIiByb2xlPVwibWVudWl0ZW1yYWRpb1wiIGFyaWEtY2hlY2tlZD1cImZhbHNlXCIgdGFiaW5kZXg9XCIwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJ0eXBlXCIgaWQ9XCJ0eXBlX3B1YmxpY1wiIHZhbHVlPVwicHVibGljXCIgaGlkZGVuPVwiaGlkZGVuXCIgZGF0YS1hdXRvc3VibWl0PVwidHJ1ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWNoZWNrIFNlbGVjdE1lbnUtaWNvbiBTZWxlY3RNZW51LWljb24tLWNoZWNrXCI+XG4gICAgPHBhdGggZD1cIk0xMy43OCA0LjIyYS43NS43NSAwIDAgMSAwIDEuMDZsLTcuMjUgNy4yNWEuNzUuNzUgMCAwIDEtMS4wNiAwTDIuMjIgOS4yOGEuNzUxLjc1MSAwIDAgMSAuMDE4LTEuMDQyLjc1MS43NTEgMCAwIDEgMS4wNDItLjAxOEw2IDEwLjk0bDYuNzItNi43MmEuNzUuNzUgMCAwIDEgMS4wNiAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGV4dC1ub3JtYWxcIiBkYXRhLW1lbnUtYnV0dG9uLXRleHQ9XCJcIj5QdWJsaWM8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cIlNlbGVjdE1lbnUtaXRlbVwiIHJvbGU9XCJtZW51aXRlbXJhZGlvXCIgYXJpYS1jaGVja2VkPVwiZmFsc2VcIiB0YWJpbmRleD1cIjBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgbmFtZT1cInR5cGVcIiBpZD1cInR5cGVfc291cmNlXCIgdmFsdWU9XCJzb3VyY2VcIiBoaWRkZW49XCJoaWRkZW5cIiBkYXRhLWF1dG9zdWJtaXQ9XCJ0cnVlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tY2hlY2sgU2VsZWN0TWVudS1pY29uIFNlbGVjdE1lbnUtaWNvbi0tY2hlY2tcIj5cbiAgICA8cGF0aCBkPVwiTTEzLjc4IDQuMjJhLjc1Ljc1IDAgMCAxIDAgMS4wNmwtNy4yNSA3LjI1YS43NS43NSAwIDAgMS0xLjA2IDBMMi4yMiA5LjI4YS43NTEuNzUxIDAgMCAxIC4wMTgtMS4wNDIuNzUxLjc1MSAwIDAgMSAxLjA0Mi0uMDE4TDYgMTAuOTRsNi43Mi02LjcyYS43NS43NSAwIDAgMSAxLjA2IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LW5vcm1hbFwiIGRhdGEtbWVudS1idXR0b24tdGV4dD1cIlwiPlNvdXJjZXM8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cIlNlbGVjdE1lbnUtaXRlbVwiIHJvbGU9XCJtZW51aXRlbXJhZGlvXCIgYXJpYS1jaGVja2VkPVwiZmFsc2VcIiB0YWJpbmRleD1cIjBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgbmFtZT1cInR5cGVcIiBpZD1cInR5cGVfZm9ya1wiIHZhbHVlPVwiZm9ya1wiIGhpZGRlbj1cImhpZGRlblwiIGRhdGEtYXV0b3N1Ym1pdD1cInRydWVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1jaGVjayBTZWxlY3RNZW51LWljb24gU2VsZWN0TWVudS1pY29uLS1jaGVja1wiPlxuICAgIDxwYXRoIGQ9XCJNMTMuNzggNC4yMmEuNzUuNzUgMCAwIDEgMCAxLjA2bC03LjI1IDcuMjVhLjc1Ljc1IDAgMCAxLTEuMDYgMEwyLjIyIDkuMjhhLjc1MS43NTEgMCAwIDEgLjAxOC0xLjA0Mi43NTEuNzUxIDAgMCAxIDEuMDQyLS4wMThMNiAxMC45NGw2LjcyLTYuNzJhLjc1Ljc1IDAgMCAxIDEuMDYgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtbm9ybWFsXCIgZGF0YS1tZW51LWJ1dHRvbi10ZXh0PVwiXCI+Rm9ya3M8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cIlNlbGVjdE1lbnUtaXRlbVwiIHJvbGU9XCJtZW51aXRlbXJhZGlvXCIgYXJpYS1jaGVja2VkPVwiZmFsc2VcIiB0YWJpbmRleD1cIjBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgbmFtZT1cInR5cGVcIiBpZD1cInR5cGVfYXJjaGl2ZWRcIiB2YWx1ZT1cImFyY2hpdmVkXCIgaGlkZGVuPVwiaGlkZGVuXCIgZGF0YS1hdXRvc3VibWl0PVwidHJ1ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWNoZWNrIFNlbGVjdE1lbnUtaWNvbiBTZWxlY3RNZW51LWljb24tLWNoZWNrXCI+XG4gICAgPHBhdGggZD1cIk0xMy43OCA0LjIyYS43NS43NSAwIDAgMSAwIDEuMDZsLTcuMjUgNy4yNWEuNzUuNzUgMCAwIDEtMS4wNiAwTDIuMjIgOS4yOGEuNzUxLjc1MSAwIDAgMSAuMDE4LTEuMDQyLjc1MS43NTEgMCAwIDEgMS4wNDItLjAxOEw2IDEwLjk0bDYuNzItNi43MmEuNzUuNzUgMCAwIDEgMS4wNiAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGV4dC1ub3JtYWxcIiBkYXRhLW1lbnUtYnV0dG9uLXRleHQ9XCJcIj5BcmNoaXZlZDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiU2VsZWN0TWVudS1pdGVtXCIgcm9sZT1cIm1lbnVpdGVtcmFkaW9cIiBhcmlhLWNoZWNrZWQ9XCJmYWxzZVwiIHRhYmluZGV4PVwiMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIiBuYW1lPVwidHlwZVwiIGlkPVwidHlwZV9taXJyb3JcIiB2YWx1ZT1cIm1pcnJvclwiIGhpZGRlbj1cImhpZGRlblwiIGRhdGEtYXV0b3N1Ym1pdD1cInRydWVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1jaGVjayBTZWxlY3RNZW51LWljb24gU2VsZWN0TWVudS1pY29uLS1jaGVja1wiPlxuICAgIDxwYXRoIGQ9XCJNMTMuNzggNC4yMmEuNzUuNzUgMCAwIDEgMCAxLjA2bC03LjI1IDcuMjVhLjc1Ljc1IDAgMCAxLTEuMDYgMEwyLjIyIDkuMjhhLjc1MS43NTEgMCAwIDEgLjAxOC0xLjA0Mi43NTEuNzUxIDAgMCAxIDEuMDQyLS4wMThMNiAxMC45NGw2LjcyLTYuNzJhLjc1Ljc1IDAgMCAxIDEuMDYgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtbm9ybWFsXCIgZGF0YS1tZW51LWJ1dHRvbi10ZXh0PVwiXCI+TWlycm9yczwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiU2VsZWN0TWVudS1pdGVtXCIgcm9sZT1cIm1lbnVpdGVtcmFkaW9cIiBhcmlhLWNoZWNrZWQ9XCJmYWxzZVwiIHRhYmluZGV4PVwiMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIiBuYW1lPVwidHlwZVwiIGlkPVwidHlwZV90ZW1wbGF0ZVwiIHZhbHVlPVwidGVtcGxhdGVcIiBoaWRkZW49XCJoaWRkZW5cIiBkYXRhLWF1dG9zdWJtaXQ9XCJ0cnVlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tY2hlY2sgU2VsZWN0TWVudS1pY29uIFNlbGVjdE1lbnUtaWNvbi0tY2hlY2tcIj5cbiAgICA8cGF0aCBkPVwiTTEzLjc4IDQuMjJhLjc1Ljc1IDAgMCAxIDAgMS4wNmwtNy4yNSA3LjI1YS43NS43NSAwIDAgMS0xLjA2IDBMMi4yMiA5LjI4YS43NTEuNzUxIDAgMCAxIC4wMTgtMS4wNDIuNzUxLjc1MSAwIDAgMSAxLjA0Mi0uMDE4TDYgMTAuOTRsNi43Mi02LjcyYS43NS43NSAwIDAgMSAxLjA2IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LW5vcm1hbFwiIGRhdGEtbWVudS1idXR0b24tdGV4dD1cIlwiPlRlbXBsYXRlczwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2RldGFpbHMtbWVudT5cbiAgICAgICAgICAgICAgICA8L2RldGFpbHM+XG5cbiAgICAgICAgICAgICAgICAgIDxkZXRhaWxzIGNsYXNzPVwiZGV0YWlscy1yZXNldCBkZXRhaWxzLW92ZXJsYXkgcG9zaXRpb24tcmVsYXRpdmUgbXQtMSBtdC1sZy0wIG1yLW1kLTIgbWwtbWQtMlwiIGlkPVwibGFuZ3VhZ2Utb3B0aW9uc1wiPlxuICAgICAgICAgICAgICAgICAgICAgIDxzdW1tYXJ5IGFyaWEtaGFzcG9wdXA9XCJtZW51XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImJ0blwiIHJvbGU9XCJidXR0b25cIj4gICAgPHNwYW4+TGFuZ3VhZ2U8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJkcm9wZG93bi1jYXJldFwiPjwvc3Bhbj5cbjwvc3VtbWFyeT4gICAgICAgICAgICAgICAgICAgIDxkZXRhaWxzLW1lbnUgY2xhc3M9XCJTZWxlY3RNZW51IGxlZnQtbWQtMCBsZWZ0LWxnLWF1dG8gcmlnaHQtbWQtYXV0byByaWdodC1sZy0wXCIgcm9sZT1cIm1lbnVcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiU2VsZWN0TWVudS1tb2RhbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGhlYWRlciBjbGFzcz1cIlNlbGVjdE1lbnUtaGVhZGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiU2VsZWN0TWVudS10aXRsZVwiPlNlbGVjdCBsYW5ndWFnZTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cIlNlbGVjdE1lbnUtY2xvc2VCdXR0b25cIiB0eXBlPVwiYnV0dG9uXCIgZGF0YS10b2dnbGUtZm9yPVwibGFuZ3VhZ2Utb3B0aW9uc1wiPjxzdmcgYXJpYS1sYWJlbD1cIkNsb3NlIG1lbnVcIiBhcmlhLWhpZGRlbj1cImZhbHNlXCIgcm9sZT1cImltZ1wiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi14XCI+XG4gICAgPHBhdGggZD1cIk0zLjcyIDMuNzJhLjc1Ljc1IDAgMCAxIDEuMDYgMEw4IDYuOTRsMy4yMi0zLjIyYS43NDkuNzQ5IDAgMCAxIDEuMjc1LjMyNi43NDkuNzQ5IDAgMCAxLS4yMTUuNzM0TDkuMDYgOGwzLjIyIDMuMjJhLjc0OS43NDkgMCAwIDEtLjMyNiAxLjI3NS43NDkuNzQ5IDAgMCAxLS43MzQtLjIxNUw4IDkuMDZsLTMuMjIgMy4yMmEuNzUxLjc1MSAwIDAgMS0xLjA0Mi0uMDE4Ljc1MS43NTEgMCAwIDEtLjAxOC0xLjA0Mkw2Ljk0IDggMy43MiA0Ljc4YS43NS43NSAwIDAgMSAwLTEuMDZaXCI+PC9wYXRoPlxuPC9zdmc+PC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2hlYWRlcj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJTZWxlY3RNZW51LWxpc3RcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiU2VsZWN0TWVudS1pdGVtXCIgcm9sZT1cIm1lbnVpdGVtcmFkaW9cIiBhcmlhLWNoZWNrZWQ9XCJ0cnVlXCIgdGFiaW5kZXg9XCIwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJsYW5ndWFnZVwiIGlkPVwibGFuZ3VhZ2VfXCIgdmFsdWU9XCJcIiBoaWRkZW49XCJoaWRkZW5cIiBkYXRhLWF1dG9zdWJtaXQ9XCJ0cnVlXCIgY2hlY2tlZD1cImNoZWNrZWRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1jaGVjayBTZWxlY3RNZW51LWljb24gU2VsZWN0TWVudS1pY29uLS1jaGVja1wiPlxuICAgIDxwYXRoIGQ9XCJNMTMuNzggNC4yMmEuNzUuNzUgMCAwIDEgMCAxLjA2bC03LjI1IDcuMjVhLjc1Ljc1IDAgMCAxLTEuMDYgMEwyLjIyIDkuMjhhLjc1MS43NTEgMCAwIDEgLjAxOC0xLjA0Mi43NTEuNzUxIDAgMCAxIDEuMDQyLS4wMThMNiAxMC45NGw2LjcyLTYuNzJhLjc1Ljc1IDAgMCAxIDEuMDYgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtbm9ybWFsXCIgZGF0YS1tZW51LWJ1dHRvbi10ZXh0PVwiXCI+QWxsPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cIlNlbGVjdE1lbnUtaXRlbVwiIHJvbGU9XCJtZW51aXRlbXJhZGlvXCIgYXJpYS1jaGVja2VkPVwiZmFsc2VcIiB0YWJpbmRleD1cIjBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIiBuYW1lPVwibGFuZ3VhZ2VcIiBpZD1cImxhbmd1YWdlX2RvY2tlcmZpbGVcIiB2YWx1ZT1cImRvY2tlcmZpbGVcIiBoaWRkZW49XCJoaWRkZW5cIiBkYXRhLWF1dG9zdWJtaXQ9XCJ0cnVlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1jaGVjayBTZWxlY3RNZW51LWljb24gU2VsZWN0TWVudS1pY29uLS1jaGVja1wiPlxuICAgIDxwYXRoIGQ9XCJNMTMuNzggNC4yMmEuNzUuNzUgMCAwIDEgMCAxLjA2bC03LjI1IDcuMjVhLjc1Ljc1IDAgMCAxLTEuMDYgMEwyLjIyIDkuMjhhLjc1MS43NTEgMCAwIDEgLjAxOC0xLjA0Mi43NTEuNzUxIDAgMCAxIDEuMDQyLS4wMThMNiAxMC45NGw2LjcyLTYuNzJhLjc1Ljc1IDAgMCAxIDEuMDYgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGV4dC1ub3JtYWxcIiBkYXRhLW1lbnUtYnV0dG9uLXRleHQ9XCJcIj5Eb2NrZXJmaWxlPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiU2VsZWN0TWVudS1pdGVtXCIgcm9sZT1cIm1lbnVpdGVtcmFkaW9cIiBhcmlhLWNoZWNrZWQ9XCJmYWxzZVwiIHRhYmluZGV4PVwiMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJsYW5ndWFnZVwiIGlkPVwibGFuZ3VhZ2VfaHRtbFwiIHZhbHVlPVwiaHRtbFwiIGhpZGRlbj1cImhpZGRlblwiIGRhdGEtYXV0b3N1Ym1pdD1cInRydWVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWNoZWNrIFNlbGVjdE1lbnUtaWNvbiBTZWxlY3RNZW51LWljb24tLWNoZWNrXCI+XG4gICAgPHBhdGggZD1cIk0xMy43OCA0LjIyYS43NS43NSAwIDAgMSAwIDEuMDZsLTcuMjUgNy4yNWEuNzUuNzUgMCAwIDEtMS4wNiAwTDIuMjIgOS4yOGEuNzUxLjc1MSAwIDAgMSAuMDE4LTEuMDQyLjc1MS43NTEgMCAwIDEgMS4wNDItLjAxOEw2IDEwLjk0bDYuNzItNi43MmEuNzUuNzUgMCAwIDEgMS4wNiAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LW5vcm1hbFwiIGRhdGEtbWVudS1idXR0b24tdGV4dD1cIlwiPkhUTUw8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJTZWxlY3RNZW51LWl0ZW1cIiByb2xlPVwibWVudWl0ZW1yYWRpb1wiIGFyaWEtY2hlY2tlZD1cImZhbHNlXCIgdGFiaW5kZXg9XCIwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgbmFtZT1cImxhbmd1YWdlXCIgaWQ9XCJsYW5ndWFnZV9qYXZhc2NyaXB0XCIgdmFsdWU9XCJqYXZhc2NyaXB0XCIgaGlkZGVuPVwiaGlkZGVuXCIgZGF0YS1hdXRvc3VibWl0PVwidHJ1ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tY2hlY2sgU2VsZWN0TWVudS1pY29uIFNlbGVjdE1lbnUtaWNvbi0tY2hlY2tcIj5cbiAgICA8cGF0aCBkPVwiTTEzLjc4IDQuMjJhLjc1Ljc1IDAgMCAxIDAgMS4wNmwtNy4yNSA3LjI1YS43NS43NSAwIDAgMS0xLjA2IDBMMi4yMiA5LjI4YS43NTEuNzUxIDAgMCAxIC4wMTgtMS4wNDIuNzUxLjc1MSAwIDAgMSAxLjA0Mi0uMDE4TDYgMTAuOTRsNi43Mi02LjcyYS43NS43NSAwIDAgMSAxLjA2IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtbm9ybWFsXCIgZGF0YS1tZW51LWJ1dHRvbi10ZXh0PVwiXCI+SmF2YVNjcmlwdDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cIlNlbGVjdE1lbnUtaXRlbVwiIHJvbGU9XCJtZW51aXRlbXJhZGlvXCIgYXJpYS1jaGVja2VkPVwiZmFsc2VcIiB0YWJpbmRleD1cIjBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIiBuYW1lPVwibGFuZ3VhZ2VcIiBpZD1cImxhbmd1YWdlX3B5dGhvblwiIHZhbHVlPVwicHl0aG9uXCIgaGlkZGVuPVwiaGlkZGVuXCIgZGF0YS1hdXRvc3VibWl0PVwidHJ1ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tY2hlY2sgU2VsZWN0TWVudS1pY29uIFNlbGVjdE1lbnUtaWNvbi0tY2hlY2tcIj5cbiAgICA8cGF0aCBkPVwiTTEzLjc4IDQuMjJhLjc1Ljc1IDAgMCAxIDAgMS4wNmwtNy4yNSA3LjI1YS43NS43NSAwIDAgMS0xLjA2IDBMMi4yMiA5LjI4YS43NTEuNzUxIDAgMCAxIC4wMTgtMS4wNDIuNzUxLjc1MSAwIDAgMSAxLjA0Mi0uMDE4TDYgMTAuOTRsNi43Mi02LjcyYS43NS43NSAwIDAgMSAxLjA2IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtbm9ybWFsXCIgZGF0YS1tZW51LWJ1dHRvbi10ZXh0PVwiXCI+UHl0aG9uPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiU2VsZWN0TWVudS1pdGVtXCIgcm9sZT1cIm1lbnVpdGVtcmFkaW9cIiBhcmlhLWNoZWNrZWQ9XCJmYWxzZVwiIHRhYmluZGV4PVwiMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJsYW5ndWFnZVwiIGlkPVwibGFuZ3VhZ2VfcnVieVwiIHZhbHVlPVwicnVieVwiIGhpZGRlbj1cImhpZGRlblwiIGRhdGEtYXV0b3N1Ym1pdD1cInRydWVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWNoZWNrIFNlbGVjdE1lbnUtaWNvbiBTZWxlY3RNZW51LWljb24tLWNoZWNrXCI+XG4gICAgPHBhdGggZD1cIk0xMy43OCA0LjIyYS43NS43NSAwIDAgMSAwIDEuMDZsLTcuMjUgNy4yNWEuNzUuNzUgMCAwIDEtMS4wNiAwTDIuMjIgOS4yOGEuNzUxLjc1MSAwIDAgMSAuMDE4LTEuMDQyLjc1MS43NTEgMCAwIDEgMS4wNDItLjAxOEw2IDEwLjk0bDYuNzItNi43MmEuNzUuNzUgMCAwIDEgMS4wNiAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LW5vcm1hbFwiIGRhdGEtbWVudS1idXR0b24tdGV4dD1cIlwiPlJ1Ynk8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJTZWxlY3RNZW51LWl0ZW1cIiByb2xlPVwibWVudWl0ZW1yYWRpb1wiIGFyaWEtY2hlY2tlZD1cImZhbHNlXCIgdGFiaW5kZXg9XCIwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInJhZGlvXCIgbmFtZT1cImxhbmd1YWdlXCIgaWQ9XCJsYW5ndWFnZV9ydXN0XCIgdmFsdWU9XCJydXN0XCIgaGlkZGVuPVwiaGlkZGVuXCIgZGF0YS1hdXRvc3VibWl0PVwidHJ1ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tY2hlY2sgU2VsZWN0TWVudS1pY29uIFNlbGVjdE1lbnUtaWNvbi0tY2hlY2tcIj5cbiAgICA8cGF0aCBkPVwiTTEzLjc4IDQuMjJhLjc1Ljc1IDAgMCAxIDAgMS4wNmwtNy4yNSA3LjI1YS43NS43NSAwIDAgMS0xLjA2IDBMMi4yMiA5LjI4YS43NTEuNzUxIDAgMCAxIC4wMTgtMS4wNDIuNzUxLjc1MSAwIDAgMSAxLjA0Mi0uMDE4TDYgMTAuOTRsNi43Mi02LjcyYS43NS43NSAwIDAgMSAxLjA2IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtbm9ybWFsXCIgZGF0YS1tZW51LWJ1dHRvbi10ZXh0PVwiXCI+UnVzdDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cIlNlbGVjdE1lbnUtaXRlbVwiIHJvbGU9XCJtZW51aXRlbXJhZGlvXCIgYXJpYS1jaGVja2VkPVwiZmFsc2VcIiB0YWJpbmRleD1cIjBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIiBuYW1lPVwibGFuZ3VhZ2VcIiBpZD1cImxhbmd1YWdlX3Njc3NcIiB2YWx1ZT1cInNjc3NcIiBoaWRkZW49XCJoaWRkZW5cIiBkYXRhLWF1dG9zdWJtaXQ9XCJ0cnVlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1jaGVjayBTZWxlY3RNZW51LWljb24gU2VsZWN0TWVudS1pY29uLS1jaGVja1wiPlxuICAgIDxwYXRoIGQ9XCJNMTMuNzggNC4yMmEuNzUuNzUgMCAwIDEgMCAxLjA2bC03LjI1IDcuMjVhLjc1Ljc1IDAgMCAxLTEuMDYgMEwyLjIyIDkuMjhhLjc1MS43NTEgMCAwIDEgLjAxOC0xLjA0Mi43NTEuNzUxIDAgMCAxIDEuMDQyLS4wMThMNiAxMC45NGw2LjcyLTYuNzJhLjc1Ljc1IDAgMCAxIDEuMDYgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwidGV4dC1ub3JtYWxcIiBkYXRhLW1lbnUtYnV0dG9uLXRleHQ9XCJcIj5TQ1NTPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiU2VsZWN0TWVudS1pdGVtXCIgcm9sZT1cIm1lbnVpdGVtcmFkaW9cIiBhcmlhLWNoZWNrZWQ9XCJmYWxzZVwiIHRhYmluZGV4PVwiMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJsYW5ndWFnZVwiIGlkPVwibGFuZ3VhZ2Vfc2hlbGxcIiB2YWx1ZT1cInNoZWxsXCIgaGlkZGVuPVwiaGlkZGVuXCIgZGF0YS1hdXRvc3VibWl0PVwidHJ1ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tY2hlY2sgU2VsZWN0TWVudS1pY29uIFNlbGVjdE1lbnUtaWNvbi0tY2hlY2tcIj5cbiAgICA8cGF0aCBkPVwiTTEzLjc4IDQuMjJhLjc1Ljc1IDAgMCAxIDAgMS4wNmwtNy4yNSA3LjI1YS43NS43NSAwIDAgMS0xLjA2IDBMMi4yMiA5LjI4YS43NTEuNzUxIDAgMCAxIC4wMTgtMS4wNDIuNzUxLjc1MSAwIDAgMSAxLjA0Mi0uMDE4TDYgMTAuOTRsNi43Mi02LjcyYS43NS43NSAwIDAgMSAxLjA2IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtbm9ybWFsXCIgZGF0YS1tZW51LWJ1dHRvbi10ZXh0PVwiXCI+U2hlbGw8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2RldGFpbHMtbWVudT5cbiAgICAgICAgICAgICAgICAgIDwvZGV0YWlscz5cblxuICAgICAgICAgICAgICAgIDxkZXRhaWxzIGNsYXNzPVwiZGV0YWlscy1yZXNldCBkZXRhaWxzLW92ZXJsYXkgcG9zaXRpb24tcmVsYXRpdmUgbXQtMSBtdC1sZy0wIG1sLTFcIiBpZD1cInNvcnQtb3B0aW9uc1wiPlxuICAgICAgICAgICAgICAgICAgICA8c3VtbWFyeSBhcmlhLWhhc3BvcHVwPVwibWVudVwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJidG5cIiByb2xlPVwiYnV0dG9uXCI+ICAgIDxzcGFuPlNvcnQ8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZHJvcGRvd24tY2FyZXRcIj48L3NwYW4+XG48L3N1bW1hcnk+ICAgICAgICAgICAgICAgICAgPGRldGFpbHMtbWVudSBjbGFzcz1cIlNlbGVjdE1lbnUgbGVmdC1tZC0wIGxlZnQtbGctYXV0byByaWdodC1tZC1hdXRvIHJpZ2h0LWxnLTBcIiByb2xlPVwibWVudVwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiU2VsZWN0TWVudS1tb2RhbFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxoZWFkZXIgY2xhc3M9XCJTZWxlY3RNZW51LWhlYWRlclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJTZWxlY3RNZW51LXRpdGxlXCI+U2VsZWN0IG9yZGVyPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cIlNlbGVjdE1lbnUtY2xvc2VCdXR0b25cIiB0eXBlPVwiYnV0dG9uXCIgZGF0YS10b2dnbGUtZm9yPVwic29ydC1vcHRpb25zXCI+PHN2ZyBhcmlhLWxhYmVsPVwiQ2xvc2UgbWVudVwiIGFyaWEtaGlkZGVuPVwiZmFsc2VcIiByb2xlPVwiaW1nXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLXhcIj5cbiAgICA8cGF0aCBkPVwiTTMuNzIgMy43MmEuNzUuNzUgMCAwIDEgMS4wNiAwTDggNi45NGwzLjIyLTMuMjJhLjc0OS43NDkgMCAwIDEgMS4yNzUuMzI2Ljc0OS43NDkgMCAwIDEtLjIxNS43MzRMOS4wNiA4bDMuMjIgMy4yMmEuNzQ5Ljc0OSAwIDAgMS0uMzI2IDEuMjc1Ljc0OS43NDkgMCAwIDEtLjczNC0uMjE1TDggOS4wNmwtMy4yMiAzLjIyYS43NTEuNzUxIDAgMCAxLTEuMDQyLS4wMTguNzUxLjc1MSAwIDAgMS0uMDE4LTEuMDQyTDYuOTQgOCAzLjcyIDQuNzhhLjc1Ljc1IDAgMCAxIDAtMS4wNlpcIj48L3BhdGg+XG48L3N2Zz48L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICA8L2hlYWRlcj5cbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiU2VsZWN0TWVudS1saXN0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJTZWxlY3RNZW51LWl0ZW1cIiByb2xlPVwibWVudWl0ZW1yYWRpb1wiIGFyaWEtY2hlY2tlZD1cInRydWVcIiB0YWJpbmRleD1cIjBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJzb3J0XCIgaWQ9XCJzb3J0X1wiIHZhbHVlPVwiXCIgaGlkZGVuPVwiaGlkZGVuXCIgZGF0YS1hdXRvc3VibWl0PVwidHJ1ZVwiIGNoZWNrZWQ9XCJjaGVja2VkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWNoZWNrIFNlbGVjdE1lbnUtaWNvbiBTZWxlY3RNZW51LWljb24tLWNoZWNrXCI+XG4gICAgPHBhdGggZD1cIk0xMy43OCA0LjIyYS43NS43NSAwIDAgMSAwIDEuMDZsLTcuMjUgNy4yNWEuNzUuNzUgMCAwIDEtMS4wNiAwTDIuMjIgOS4yOGEuNzUxLjc1MSAwIDAgMSAuMDE4LTEuMDQyLjc1MS43NTEgMCAwIDEgMS4wNDItLjAxOEw2IDEwLjk0bDYuNzItNi43MmEuNzUuNzUgMCAwIDEgMS4wNiAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtbm9ybWFsXCIgZGF0YS1tZW51LWJ1dHRvbi10ZXh0PVwiXCI+TGFzdCB1cGRhdGVkPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cIlNlbGVjdE1lbnUtaXRlbVwiIHJvbGU9XCJtZW51aXRlbXJhZGlvXCIgYXJpYS1jaGVja2VkPVwiZmFsc2VcIiB0YWJpbmRleD1cIjBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJzb3J0XCIgaWQ9XCJzb3J0X25hbWVcIiB2YWx1ZT1cIm5hbWVcIiBoaWRkZW49XCJoaWRkZW5cIiBkYXRhLWF1dG9zdWJtaXQ9XCJ0cnVlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWNoZWNrIFNlbGVjdE1lbnUtaWNvbiBTZWxlY3RNZW51LWljb24tLWNoZWNrXCI+XG4gICAgPHBhdGggZD1cIk0xMy43OCA0LjIyYS43NS43NSAwIDAgMSAwIDEuMDZsLTcuMjUgNy4yNWEuNzUuNzUgMCAwIDEtMS4wNiAwTDIuMjIgOS4yOGEuNzUxLjc1MSAwIDAgMSAuMDE4LTEuMDQyLjc1MS43NTEgMCAwIDEgMS4wNDItLjAxOEw2IDEwLjk0bDYuNzItNi43MmEuNzUuNzUgMCAwIDEgMS4wNiAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInRleHQtbm9ybWFsXCIgZGF0YS1tZW51LWJ1dHRvbi10ZXh0PVwiXCI+TmFtZTwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJTZWxlY3RNZW51LWl0ZW1cIiByb2xlPVwibWVudWl0ZW1yYWRpb1wiIGFyaWEtY2hlY2tlZD1cImZhbHNlXCIgdGFiaW5kZXg9XCIwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwicmFkaW9cIiBuYW1lPVwic29ydFwiIGlkPVwic29ydF9zdGFyZ2F6ZXJzXCIgdmFsdWU9XCJzdGFyZ2F6ZXJzXCIgaGlkZGVuPVwiaGlkZGVuXCIgZGF0YS1hdXRvc3VibWl0PVwidHJ1ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1jaGVjayBTZWxlY3RNZW51LWljb24gU2VsZWN0TWVudS1pY29uLS1jaGVja1wiPlxuICAgIDxwYXRoIGQ9XCJNMTMuNzggNC4yMmEuNzUuNzUgMCAwIDEgMCAxLjA2bC03LjI1IDcuMjVhLjc1Ljc1IDAgMCAxLTEuMDYgMEwyLjIyIDkuMjhhLjc1MS43NTEgMCAwIDEgLjAxOC0xLjA0Mi43NTEuNzUxIDAgMCAxIDEuMDQyLS4wMThMNiAxMC45NGw2LjcyLTYuNzJhLjc1Ljc1IDAgMCAxIDEuMDYgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LW5vcm1hbFwiIGRhdGEtbWVudS1idXR0b24tdGV4dD1cIlwiPlN0YXJzPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2RldGFpbHMtbWVudT5cbiAgICAgICAgICAgICAgICA8L2RldGFpbHM+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImQtbm9uZSBkLW1kLWZsZXggZmxleC1tZC1pdGVtcy1jZW50ZXIgZmxleC1tZC1qdXN0aWZ5LWVuZFwiPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuPC9mb3JtPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBpZD1cIm9yZy1yZXBvc2l0b3JpZXNcIiBkYXRhLWRlbGF5LXJlc3VsdHM9XCJcIj5cbiAgICAgICAgXG4gICAgICA8ZGl2IGNsYXNzPVwib3JnLXJlcG9zIHJlcG8tbGlzdFwiPlxuICAgIDxzcGFuIGNsYXNzPVwic3Itb25seVwiIGRhdGEtYXV0b3NlYXJjaC1yZXN1bHRzPVwiXCI+U2hvd2luZyAxMCBvZiAxMjQgcmVwb3NpdG9yaWVzPC9zcGFuPlxuICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkJveFwiPlxuICBcbiAgXG4gICAgPHVsIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCI+XG4gICAgICAgIDxsaSBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiQm94LXJvd1wiPiAgICAgICAgICA8ZGl2IGl0ZW1wcm9wPVwib3duc1wiIGl0ZW10eXBlPVwiaHR0cDovL3NjaGVtYS5vcmcvQ29kZVwiIGl0ZW1zY29wZT1cIml0ZW1zY29wZVwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJwdWJsaWMgc291cmNlIGQtYmxvY2tcIj5cbiAgXG4gICAgPGRpdiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiZC1mbGV4IGZsZXgtanVzdGlmeS1iZXR3ZWVuXCI+XG4gICAgICA8ZGl2IGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJtYi0xIGZsZXgtYXV0b1wiPlxuICAgICAgICA8YSBpdGVtcHJvcD1cIm5hbWUgY29kZVJlcG9zaXRvcnlcIiBkYXRhLWhvdmVyY2FyZC10eXBlPVwicmVwb3NpdG9yeVwiIGRhdGEtaG92ZXJjYXJkLXVybD1cIi9yYWlscy9yYWlscy9ob3ZlcmNhcmRcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6cmVwb19ud28mcXVvdDt9XCIgaHJlZj1cIi9yYWlscy9yYWlsc1wiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMaW5rIGY0IGQtaW5saW5lLWJsb2NrIHRleHQtYm9sZCBtci0xXCI+XG4gICAgICAgICAgcmFpbHNcbjwvYT5cbiAgICAgICAgPHNwYW4gdGl0bGU9XCJMYWJlbDogUHVibGljXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxhYmVsIExhYmVsLS1zZWNvbmRhcnkgdi1hbGlnbi1taWRkbGUgbWwtMSBtYi0xXCI+XG4gICAgICAgICAgUHVibGljXG48L3NwYW4+XG5cbiAgICAgICAgICA8cCBpdGVtcHJvcD1cImRlc2NyaXB0aW9uXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImNvbG9yLWZnLW11dGVkIG1iLTMgd2ItYnJlYWstd29yZFwiPlxuICAgICAgICAgICAgUnVieSBvbiBSYWlsc1xuPC9wPjwvZGl2PlxuICAgICAgPHNwYW4gZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cInBvc2l0aW9uLXJlbGF0aXZlXCI+PGEgaWQ9XCJjb21taXQtYWN0aXZpdHktbGluay04NTE0XCIgaHJlZj1cIi9yYWlscy9yYWlscy9ncmFwaHMvY29tbWl0LWFjdGl2aXR5XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxpbmsgZC1pbmxpbmUtYmxvY2tcIiBhcmlhLWxhYmVsbGVkYnk9XCJ0b29sdGlwLWVhZDQwYWE4LWI4YTctNDkwOC05NTk5LWE4ZTkxZTNlOGY4N1wiPlxuICAgICAgICA8ZGl2IGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJmbGV4LWl0ZW1zLWNlbnRlciBkLW5vbmUgZC1tZC1mbGV4XCI+XG4gICAgICAgICAgXG4gIDxzdmcgd2lkdGg9XCIxNTVcIiBoZWlnaHQ9XCIzMFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxuICAgIDxkZWZzPlxuICAgICAgPGxpbmVhckdyYWRpZW50IGlkPVwiZ3JhZGllbnQtODUxNFwiIHgxPVwiMFwiIHgyPVwiMFwiIHkxPVwiMVwiIHkyPVwiMFwiPlxuICAgICAgICA8c3RvcCBvZmZzZXQ9XCIwJVwiIHN0b3AtY29sb3I9XCJ2YXIoLS1jb2xvci1jYWxlbmRhci1ncmFwaC1kYXktTDEtYmcpXCI+PC9zdG9wPlxuICAgICAgICA8c3RvcCBvZmZzZXQ9XCIxMCVcIiBzdG9wLWNvbG9yPVwidmFyKC0tY29sb3ItY2FsZW5kYXItZ3JhcGgtZGF5LUwyLWJnKVwiPjwvc3RvcD5cbiAgICAgICAgPHN0b3Agb2Zmc2V0PVwiMjUlXCIgc3RvcC1jb2xvcj1cInZhcigtLWNvbG9yLWNhbGVuZGFyLWdyYXBoLWRheS1MMy1iZylcIj48L3N0b3A+XG4gICAgICAgIDxzdG9wIG9mZnNldD1cIjUwJVwiIHN0b3AtY29sb3I9XCJ2YXIoLS1jb2xvci1jYWxlbmRhci1ncmFwaC1kYXktTDQtYmcpXCI+PC9zdG9wPlxuICAgICAgPC9saW5lYXJHcmFkaWVudD5cbiAgICAgIDxtYXNrIGlkPVwic3BhcmtsaW5lLTg1MTRcIiB4PVwiMFwiIHk9XCIwXCIgd2lkdGg9XCIxNTVcIiBoZWlnaHQ9XCIyOFwiPlxuICAgICAgICA8cG9seWxpbmUgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAsIDI4KSBzY2FsZSgxLC0xKVwiIHBvaW50cz1cIjAsMTEuNzUgMywxMC4yMyA2LDYuMyA5LDE0LjMyIDEyLDEzLjcxIDE1LDIwLjgzIDE4LDE2LjQzOTk5OTk5OTk5OTk5OCAyMSwxMS45IDI0LDE3LjY1IDI3LDE0Ljc3IDMwLDIyLjQ5IDMzLDE0LjQ3IDM2LDEzLjExIDM5LDE1LjM4IDQyLDE2LjU5IDQ1LDExLjI5IDQ4LDEwLjY5IDUxLDEyLjk2IDU0LDEwLjA4IDU3LDEwLjY5IDYwLDcuOTYgNjMsMy4yNyA2NiwyMy41NSA2OSwyOS4wIDcyLDE0LjAyIDc1LDEyLjA1IDc4LDEyLjA1IDgxLDguODcwMDAwMDAwMDAwMDAxIDg0LDE3LjY1IDg3LDEyLjk2IDkwLDcuMzYgOTMsNy4yMSA5Niw2LjMgOTksNy45NiAxMDIsOC4yNiAxMDUsNy45NiAxMDgsMTEuOSAxMTEsOS45MyAxMTQsMTIuMDUgMTE3LDEyLjY1IDEyMCw4LjI2IDEyMywxNi41OSAxMjYsMTAuNjkgMTI5LDE0LjkyIDEzMiwxMy4xMSAxMzUsMTIuNjUgMTM4LDYuNiAxNDEsNy45NiAxNDQsNC42MyAxNDcsNS4zOSAxNTAsNi45IDE1Myw2LjkgXCIgZmlsbD1cInRyYW5zcGFyZW50XCIgc3Ryb2tlPVwiIzhjYzY2NVwiIHN0cm9rZS13aWR0aD1cIjJcIj5cbiAgICAgIDwvcG9seWxpbmU+PC9tYXNrPlxuICAgIDwvZGVmcz5cblxuICAgIDxnIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgwLCAyLjApXCI+XG4gICAgICA8cmVjdCB4PVwiMFwiIHk9XCItMlwiIHdpZHRoPVwiMTU1XCIgaGVpZ2h0PVwiMzBcIiBzdHlsZT1cInN0cm9rZTogbm9uZTsgZmlsbDogdXJsKCNncmFkaWVudC04NTE0KTsgbWFzazogdXJsKCNzcGFya2xpbmUtODUxNClcIj48L3JlY3Q+XG4gICAgPC9nPlxuICA8L3N2Zz5cbjwvZGl2PjwvYT48dG9vbC10aXAgaWQ9XCJ0b29sdGlwLWVhZDQwYWE4LWI4YTctNDkwOC05NTk5LWE4ZTkxZTNlOGY4N1wiIGZvcj1cImNvbW1pdC1hY3Rpdml0eS1saW5rLTg1MTRcIiBwb3BvdmVyPVwibWFudWFsXCIgZGF0YS1kaXJlY3Rpb249XCJzXCIgZGF0YS10eXBlPVwibGFiZWxcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwic3Itb25seSBwb3NpdGlvbi1hYnNvbHV0ZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHJvbGU9XCJ0b29sdGlwXCI+cmFpbHMvcmFpbHPigJlzIHBhc3QgeWVhciBvZiBjb21taXQgYWN0aXZpdHk8L3Rvb2wtdGlwPjwvc3Bhbj5cbjwvZGl2PlxuICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImNvbG9yLWZnLW11dGVkIGY2XCI+XG5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJtci0zXCI+XG4gIDxzcGFuIGNsYXNzPVwicmVwby1sYW5ndWFnZS1jb2xvclwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogIzcwMTUxNlwiPjwvc3Bhbj5cbiAgPHNwYW4gaXRlbXByb3A9XCJwcm9ncmFtbWluZ0xhbmd1YWdlXCI+UnVieTwvc3Bhbj5cbjwvc3Bhbj5cblxuXG4gICAgICAgIDxhIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O3Byb2ZpbGVzOm9yZ19yZXBvc19saXN0X2l0ZW0mcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RhcmdldDpzdGFycyZxdW90O31cIiBocmVmPVwiL3JhaWxzL3JhaWxzL3N0YXJnYXplcnNcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibm8td3JhcCBMaW5rIExpbmstLW11dGVkIG1yLTNcIj5cbiAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1zdGFyIG1yLTFcIj5cbiAgICA8cGF0aCBkPVwiTTggLjI1YS43NS43NSAwIDAgMSAuNjczLjQxOGwxLjg4MiAzLjgxNSA0LjIxLjYxMmEuNzUuNzUgMCAwIDEgLjQxNiAxLjI3OWwtMy4wNDYgMi45Ny43MTkgNC4xOTJhLjc1MS43NTEgMCAwIDEtMS4wODguNzkxTDggMTIuMzQ3bC0zLjc2NiAxLjk4YS43NS43NSAwIDAgMS0xLjA4OC0uNzlsLjcyLTQuMTk0TC44MTggNi4zNzRhLjc1Ljc1IDAgMCAxIC40MTYtMS4yOGw0LjIxLS42MTFMNy4zMjcuNjY4QS43NS43NSAwIDAgMSA4IC4yNVptMCAyLjQ0NUw2LjYxNSA1LjVhLjc1Ljc1IDAgMCAxLS41NjQuNDFsLTMuMDk3LjQ1IDIuMjQgMi4xODRhLjc1Ljc1IDAgMCAxIC4yMTYuNjY0bC0uNTI4IDMuMDg0IDIuNzY5LTEuNDU2YS43NS43NSAwIDAgMSAuNjk4IDBsMi43NyAxLjQ1Ni0uNTMtMy4wODRhLjc1Ljc1IDAgMCAxIC4yMTYtLjY2NGwyLjI0LTIuMTgzLTMuMDk2LS40NWEuNzUuNzUgMCAwIDEtLjU2NC0uNDFMOCAyLjY5NFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICA1NSwzNjJcbjwvYT5cbiAgICAgICAgPHNwYW4gZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm1yLTNcIj5cbiAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1sYXcgbXItMVwiPlxuICAgIDxwYXRoIGQ9XCJNOC43NS43NVYyaC45ODVjLjMwNCAwIC42MDMuMDguODY3LjIzMWwxLjI5LjczNmMuMDM4LjAyMi4wOC4wMzMuMTI0LjAzM2gyLjIzNGEuNzUuNzUgMCAwIDEgMCAxLjVoLS40MjdsMi4xMTEgNC42OTJhLjc1Ljc1IDAgMCAxLS4xNTQuODM4bC0uNTMtLjUzLjUyOS41MzEtLjAwMS4wMDItLjAwMi4wMDItLjAwNi4wMDYtLjAwNi4wMDUtLjAxLjAxLS4wNDUuMDRjLS4yMS4xNzYtLjQ0MS4zMjctLjY4Ni40NUMxNC41NTYgMTAuNzggMTMuODggMTEgMTMgMTFhNC40OTggNC40OTggMCAwIDEtMi4wMjMtLjQ1NCAzLjU0NCAzLjU0NCAwIDAgMS0uNjg2LS40NWwtLjA0NS0uMDQtLjAxNi0uMDE1LS4wMDYtLjAwNi0uMDA0LS4wMDR2LS4wMDFhLjc1Ljc1IDAgMCAxLS4xNTQtLjgzOEwxMi4xNzggNC41aC0uMTYyYy0uMzA1IDAtLjYwNC0uMDc5LS44NjgtLjIzMWwtMS4yOS0uNzM2YS4yNDUuMjQ1IDAgMCAwLS4xMjQtLjAzM0g4Ljc1VjEzaDIuNWEuNzUuNzUgMCAwIDEgMCAxLjVoLTYuNWEuNzUuNzUgMCAwIDEgMC0xLjVoMi41VjMuNWgtLjk4NGEuMjQ1LjI0NSAwIDAgMC0uMTI0LjAzM2wtMS4yODkuNzM3Yy0uMjY1LjE1LS41NjQuMjMtLjg2OS4yM2gtLjE2MmwyLjExMiA0LjY5MmEuNzUuNzUgMCAwIDEtLjE1NC44MzhsLS41My0uNTMuNTI5LjUzMS0uMDAxLjAwMi0uMDAyLjAwMi0uMDA2LjAwNi0uMDE2LjAxNS0uMDQ1LjA0Yy0uMjEuMTc2LS40NDEuMzI3LS42ODYuNDVDNC41NTYgMTAuNzggMy44OCAxMSAzIDExYTQuNDk4IDQuNDk4IDAgMCAxLTIuMDIzLS40NTQgMy41NDQgMy41NDQgMCAwIDEtLjY4Ni0uNDVsLS4wNDUtLjA0LS4wMTYtLjAxNS0uMDA2LS4wMDYtLjAwNC0uMDA0di0uMDAxYS43NS43NSAwIDAgMS0uMTU0LS44MzhMMi4xNzggNC41SDEuNzVhLjc1Ljc1IDAgMCAxIDAtMS41aDIuMjM0YS4yNDkuMjQ5IDAgMCAwIC4xMjUtLjAzM2wxLjI4OC0uNzM3Yy4yNjUtLjE1LjU2NC0uMjMuODY5LS4yM2guOTg0Vi43NWEuNzUuNzUgMCAwIDEgMS41IDBabTIuOTQ1IDguNDc3Yy4yODUuMTM1LjcxOC4yNzMgMS4zMDUuMjczczEuMDItLjEzOCAxLjMwNS0uMjczTDEzIDYuMzI3Wm0tMTAgMGMuMjg1LjEzNS43MTguMjczIDEuMzA1LjI3M3MxLjAyLS4xMzggMS4zMDUtLjI3M0wzIDYuMzI3WlwiPjwvcGF0aD5cbjwvc3ZnPk1JVFxuPC9zcGFuPlxuICAgICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6Zm9ya3MmcXVvdDt9XCIgaHJlZj1cIi9yYWlscy9yYWlscy9mb3Jrc1wiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMaW5rIExpbmstLW11dGVkIG1yLTNcIj5cbiAgICAgICAgICA8c3ZnIGFyaWEtbGFiZWw9XCJmb3JrXCIgcm9sZT1cImltZ1wiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1yZXBvLWZvcmtlZCBtci0xXCI+XG4gICAgPHBhdGggZD1cIk01IDUuMzcydi44NzhjMCAuNDE0LjMzNi43NS43NS43NWg0LjVhLjc1Ljc1IDAgMCAwIC43NS0uNzV2LS44NzhhMi4yNSAyLjI1IDAgMSAxIDEuNSAwdi44NzhhMi4yNSAyLjI1IDAgMCAxLTIuMjUgMi4yNWgtMS41djIuMTI4YTIuMjUxIDIuMjUxIDAgMSAxLTEuNSAwVjguNWgtMS41QTIuMjUgMi4yNSAwIDAgMSAzLjUgNi4yNXYtLjg3OGEyLjI1IDIuMjUgMCAxIDEgMS41IDBaTTUgMy4yNWEuNzUuNzUgMCAxIDAtMS41IDAgLjc1Ljc1IDAgMCAwIDEuNSAwWm02Ljc1Ljc1YS43NS43NSAwIDEgMCAwLTEuNS43NS43NSAwIDAgMCAwIDEuNVptLTMgOC43NWEuNzUuNzUgMCAxIDAtMS41IDAgLjc1Ljc1IDAgMCAwIDEuNSAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAgIDIxLDQ0M1xuPC9hPlxuICAgICAgPGEgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7cHJvZmlsZXM6b3JnX3JlcG9zX2xpc3RfaXRlbSZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y2xpY2smcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGFyZ2V0Omlzc3VlcyZxdW90O31cIiBocmVmPVwiL3JhaWxzL3JhaWxzL2lzc3Vlc1wiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJuby13cmFwIExpbmsgTGluay0tbXV0ZWQgbXItM1wiPlxuICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1pc3N1ZS1vcGVuZWQgbXItMVwiPlxuICAgIDxwYXRoIGQ9XCJNOCA5LjVhMS41IDEuNSAwIDEgMCAwLTMgMS41IDEuNSAwIDAgMCAwIDNaXCI+PC9wYXRoPjxwYXRoIGQ9XCJNOCAwYTggOCAwIDEgMSAwIDE2QTggOCAwIDAgMSA4IDBaTTEuNSA4YTYuNSA2LjUgMCAxIDAgMTMgMCA2LjUgNi41IDAgMCAwLTEzIDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgIDUxM1xuPC9hPlxuXG4gICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6cHVsbF9yZXF1ZXN0cyZxdW90O31cIiBocmVmPVwiL3JhaWxzL3JhaWxzL3B1bGxzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm5vLXdyYXAgTGluayBMaW5rLS1tdXRlZCBtci0zXCI+XG4gICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWdpdC1wdWxsLXJlcXVlc3QgbXItMVwiPlxuICAgIDxwYXRoIGQ9XCJNMS41IDMuMjVhMi4yNSAyLjI1IDAgMSAxIDMgMi4xMjJ2NS4yNTZhMi4yNTEgMi4yNTEgMCAxIDEtMS41IDBWNS4zNzJBMi4yNSAyLjI1IDAgMCAxIDEuNSAzLjI1Wm01LjY3Ny0uMTc3TDkuNTczLjY3N0EuMjUuMjUgMCAwIDEgMTAgLjg1NFYyLjVoMUEyLjUgMi41IDAgMCAxIDEzLjUgNXY1LjYyOGEyLjI1MSAyLjI1MSAwIDEgMS0xLjUgMFY1YTEgMSAwIDAgMC0xLTFoLTF2MS42NDZhLjI1LjI1IDAgMCAxLS40MjcuMTc3TDcuMTc3IDMuNDI3YS4yNS4yNSAwIDAgMSAwLS4zNTRaTTMuNzUgMi41YS43NS43NSAwIDEgMCAwIDEuNS43NS43NSAwIDAgMCAwLTEuNVptMCA5LjVhLjc1Ljc1IDAgMSAwIDAgMS41Ljc1Ljc1IDAgMCAwIDAtMS41Wm04LjI1Ljc1YS43NS43NSAwIDEgMCAxLjUgMCAuNzUuNzUgMCAwIDAtMS41IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgIDcxNVxuPC9hPlxuICAgICAgPHNwYW4gZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm5vLXdyYXBcIj5cbiAgICAgICAgICBVcGRhdGVkIDxyZWxhdGl2ZS10aW1lIGRhdGV0aW1lPVwiMjAyNC0wNy0yNlQxNTozOTozOVpcIiBjbGFzcz1cIm5vLXdyYXBcIiB0aXRsZT1cIkp1bCAyNiwgMjAyNCwgMTI6MzkgUE0gR01ULTNcIj5KdWwgMjYsIDIwMjQ8L3JlbGF0aXZlLXRpbWU+XG48L3NwYW4+PC9kaXY+PC9kaXY+XG48L2xpPlxuICAgICAgICA8bGkgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkJveC1yb3dcIj4gICAgICAgICAgPGRpdiBpdGVtcHJvcD1cIm93bnNcIiBpdGVtdHlwZT1cImh0dHA6Ly9zY2hlbWEub3JnL0NvZGVcIiBpdGVtc2NvcGU9XCJpdGVtc2NvcGVcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwicHVibGljIHNvdXJjZSBkLWJsb2NrXCI+XG4gIFxuICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImQtZmxleCBmbGV4LWp1c3RpZnktYmV0d2VlblwiPlxuICAgICAgPGRpdiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibWItMSBmbGV4LWF1dG9cIj5cbiAgICAgICAgPGEgaXRlbXByb3A9XCJuYW1lIGNvZGVSZXBvc2l0b3J5XCIgZGF0YS1ob3ZlcmNhcmQtdHlwZT1cInJlcG9zaXRvcnlcIiBkYXRhLWhvdmVyY2FyZC11cmw9XCIvcmFpbHMvc29saWRfY2FjaGUvaG92ZXJjYXJkXCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7cHJvZmlsZXM6b3JnX3JlcG9zX2xpc3RfaXRlbSZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y2xpY2smcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGFyZ2V0OnJlcG9fbndvJnF1b3Q7fVwiIGhyZWY9XCIvcmFpbHMvc29saWRfY2FjaGVcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiTGluayBmNCBkLWlubGluZS1ibG9jayB0ZXh0LWJvbGQgbXItMVwiPlxuICAgICAgICAgIHNvbGlkX2NhY2hlXG48L2E+XG4gICAgICAgIDxzcGFuIHRpdGxlPVwiTGFiZWw6IFB1YmxpY1wiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMYWJlbCBMYWJlbC0tc2Vjb25kYXJ5IHYtYWxpZ24tbWlkZGxlIG1sLTEgbWItMVwiPlxuICAgICAgICAgIFB1YmxpY1xuPC9zcGFuPlxuXG4gICAgICAgICAgPHAgaXRlbXByb3A9XCJkZXNjcmlwdGlvblwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJjb2xvci1mZy1tdXRlZCBtYi0zIHdiLWJyZWFrLXdvcmRcIj5cbiAgICAgICAgICAgIEEgZGF0YWJhc2UtYmFja2VkIEFjdGl2ZVN1cHBvcnQ6OkNhY2hlOjpTdG9yZVxuPC9wPjwvZGl2PlxuICAgICAgPHNwYW4gZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cInBvc2l0aW9uLXJlbGF0aXZlXCI+PGEgaWQ9XCJjb21taXQtYWN0aXZpdHktbGluay01NjcyNDg4NzZcIiBocmVmPVwiL3JhaWxzL3NvbGlkX2NhY2hlL2dyYXBocy9jb21taXQtYWN0aXZpdHlcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiTGluayBkLWlubGluZS1ibG9ja1wiIGFyaWEtbGFiZWxsZWRieT1cInRvb2x0aXAtMWZlZDM2YjYtY2Q1NS00Y2Q1LWE3NzYtNDBmODJjODBiZWVmXCI+XG4gICAgICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImZsZXgtaXRlbXMtY2VudGVyIGQtbm9uZSBkLW1kLWZsZXhcIj5cbiAgICAgICAgICBcbiAgPHN2ZyB3aWR0aD1cIjE1NVwiIGhlaWdodD1cIjMwXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+XG4gICAgPGRlZnM+XG4gICAgICA8bGluZWFyR3JhZGllbnQgaWQ9XCJncmFkaWVudC01NjcyNDg4NzZcIiB4MT1cIjBcIiB4Mj1cIjBcIiB5MT1cIjFcIiB5Mj1cIjBcIj5cbiAgICAgICAgPHN0b3Agb2Zmc2V0PVwiMCVcIiBzdG9wLWNvbG9yPVwidmFyKC0tY29sb3ItY2FsZW5kYXItZ3JhcGgtZGF5LUwxLWJnKVwiPjwvc3RvcD5cbiAgICAgICAgPHN0b3Agb2Zmc2V0PVwiMTAlXCIgc3RvcC1jb2xvcj1cInZhcigtLWNvbG9yLWNhbGVuZGFyLWdyYXBoLWRheS1MMi1iZylcIj48L3N0b3A+XG4gICAgICAgIDxzdG9wIG9mZnNldD1cIjI1JVwiIHN0b3AtY29sb3I9XCJ2YXIoLS1jb2xvci1jYWxlbmRhci1ncmFwaC1kYXktTDMtYmcpXCI+PC9zdG9wPlxuICAgICAgICA8c3RvcCBvZmZzZXQ9XCI1MCVcIiBzdG9wLWNvbG9yPVwidmFyKC0tY29sb3ItY2FsZW5kYXItZ3JhcGgtZGF5LUw0LWJnKVwiPjwvc3RvcD5cbiAgICAgIDwvbGluZWFyR3JhZGllbnQ+XG4gICAgICA8bWFzayBpZD1cInNwYXJrbGluZS01NjcyNDg4NzZcIiB4PVwiMFwiIHk9XCIwXCIgd2lkdGg9XCIxNTVcIiBoZWlnaHQ9XCIyOFwiPlxuICAgICAgICA8cG9seWxpbmUgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAsIDI4KSBzY2FsZSgxLC0xKVwiIHBvaW50cz1cIjAsOCAzLDYgNiwzIDksMSAxMiwxIDE1LDEgMTgsNSAyMSw0IDI0LDIzIDI3LDEzIDMwLDEyIDMzLDMgMzYsMSAzOSwzIDQyLDEgNDUsMTEgNDgsMSA1MSwxIDU0LDIgNTcsMSA2MCw2IDYzLDEgNjYsMjcgNjksMTcgNzIsNSA3NSwyOCA3OCw5IDgxLDE0IDg0LDYgODcsMiA5MCwxOSA5MywxMyA5Niw1IDk5LDUgMTAyLDIgMTA1LDIgMTA4LDIgMTExLDEgMTE0LDYgMTE3LDIgMTIwLDEgMTIzLDMgMTI2LDMgMTI5LDMgMTMyLDIgMTM1LDEgMTM4LDEgMTQxLDEgMTQ0LDE0IDE0NywxIDE1MCwxIDE1MywxMCBcIiBmaWxsPVwidHJhbnNwYXJlbnRcIiBzdHJva2U9XCIjOGNjNjY1XCIgc3Ryb2tlLXdpZHRoPVwiMlwiPlxuICAgICAgPC9wb2x5bGluZT48L21hc2s+XG4gICAgPC9kZWZzPlxuXG4gICAgPGcgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAsIDEpXCI+XG4gICAgICA8cmVjdCB4PVwiMFwiIHk9XCItMlwiIHdpZHRoPVwiMTU1XCIgaGVpZ2h0PVwiMzBcIiBzdHlsZT1cInN0cm9rZTogbm9uZTsgZmlsbDogdXJsKCNncmFkaWVudC01NjcyNDg4NzYpOyBtYXNrOiB1cmwoI3NwYXJrbGluZS01NjcyNDg4NzYpXCI+PC9yZWN0PlxuICAgIDwvZz5cbiAgPC9zdmc+XG48L2Rpdj48L2E+PHRvb2wtdGlwIGlkPVwidG9vbHRpcC0xZmVkMzZiNi1jZDU1LTRjZDUtYTc3Ni00MGY4MmM4MGJlZWZcIiBmb3I9XCJjb21taXQtYWN0aXZpdHktbGluay01NjcyNDg4NzZcIiBwb3BvdmVyPVwibWFudWFsXCIgZGF0YS1kaXJlY3Rpb249XCJzXCIgZGF0YS10eXBlPVwibGFiZWxcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwic3Itb25seSBwb3NpdGlvbi1hYnNvbHV0ZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHJvbGU9XCJ0b29sdGlwXCI+cmFpbHMvc29saWRfY2FjaGXigJlzIHBhc3QgeWVhciBvZiBjb21taXQgYWN0aXZpdHk8L3Rvb2wtdGlwPjwvc3Bhbj5cbjwvZGl2PlxuICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImNvbG9yLWZnLW11dGVkIGY2XCI+XG5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJtci0zXCI+XG4gIDxzcGFuIGNsYXNzPVwicmVwby1sYW5ndWFnZS1jb2xvclwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogIzcwMTUxNlwiPjwvc3Bhbj5cbiAgPHNwYW4gaXRlbXByb3A9XCJwcm9ncmFtbWluZ0xhbmd1YWdlXCI+UnVieTwvc3Bhbj5cbjwvc3Bhbj5cblxuXG4gICAgICAgIDxhIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O3Byb2ZpbGVzOm9yZ19yZXBvc19saXN0X2l0ZW0mcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RhcmdldDpzdGFycyZxdW90O31cIiBocmVmPVwiL3JhaWxzL3NvbGlkX2NhY2hlL3N0YXJnYXplcnNcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibm8td3JhcCBMaW5rIExpbmstLW11dGVkIG1yLTNcIj5cbiAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1zdGFyIG1yLTFcIj5cbiAgICA8cGF0aCBkPVwiTTggLjI1YS43NS43NSAwIDAgMSAuNjczLjQxOGwxLjg4MiAzLjgxNSA0LjIxLjYxMmEuNzUuNzUgMCAwIDEgLjQxNiAxLjI3OWwtMy4wNDYgMi45Ny43MTkgNC4xOTJhLjc1MS43NTEgMCAwIDEtMS4wODguNzkxTDggMTIuMzQ3bC0zLjc2NiAxLjk4YS43NS43NSAwIDAgMS0xLjA4OC0uNzlsLjcyLTQuMTk0TC44MTggNi4zNzRhLjc1Ljc1IDAgMCAxIC40MTYtMS4yOGw0LjIxLS42MTFMNy4zMjcuNjY4QS43NS43NSAwIDAgMSA4IC4yNVptMCAyLjQ0NUw2LjYxNSA1LjVhLjc1Ljc1IDAgMCAxLS41NjQuNDFsLTMuMDk3LjQ1IDIuMjQgMi4xODRhLjc1Ljc1IDAgMCAxIC4yMTYuNjY0bC0uNTI4IDMuMDg0IDIuNzY5LTEuNDU2YS43NS43NSAwIDAgMSAuNjk4IDBsMi43NyAxLjQ1Ni0uNTMtMy4wODRhLjc1Ljc1IDAgMCAxIC4yMTYtLjY2NGwyLjI0LTIuMTgzLTMuMDk2LS40NWEuNzUuNzUgMCAwIDEtLjU2NC0uNDFMOCAyLjY5NFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICA3NjRcbjwvYT5cbiAgICAgICAgPHNwYW4gZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm1yLTNcIj5cbiAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1sYXcgbXItMVwiPlxuICAgIDxwYXRoIGQ9XCJNOC43NS43NVYyaC45ODVjLjMwNCAwIC42MDMuMDguODY3LjIzMWwxLjI5LjczNmMuMDM4LjAyMi4wOC4wMzMuMTI0LjAzM2gyLjIzNGEuNzUuNzUgMCAwIDEgMCAxLjVoLS40MjdsMi4xMTEgNC42OTJhLjc1Ljc1IDAgMCAxLS4xNTQuODM4bC0uNTMtLjUzLjUyOS41MzEtLjAwMS4wMDItLjAwMi4wMDItLjAwNi4wMDYtLjAwNi4wMDUtLjAxLjAxLS4wNDUuMDRjLS4yMS4xNzYtLjQ0MS4zMjctLjY4Ni40NUMxNC41NTYgMTAuNzggMTMuODggMTEgMTMgMTFhNC40OTggNC40OTggMCAwIDEtMi4wMjMtLjQ1NCAzLjU0NCAzLjU0NCAwIDAgMS0uNjg2LS40NWwtLjA0NS0uMDQtLjAxNi0uMDE1LS4wMDYtLjAwNi0uMDA0LS4wMDR2LS4wMDFhLjc1Ljc1IDAgMCAxLS4xNTQtLjgzOEwxMi4xNzggNC41aC0uMTYyYy0uMzA1IDAtLjYwNC0uMDc5LS44NjgtLjIzMWwtMS4yOS0uNzM2YS4yNDUuMjQ1IDAgMCAwLS4xMjQtLjAzM0g4Ljc1VjEzaDIuNWEuNzUuNzUgMCAwIDEgMCAxLjVoLTYuNWEuNzUuNzUgMCAwIDEgMC0xLjVoMi41VjMuNWgtLjk4NGEuMjQ1LjI0NSAwIDAgMC0uMTI0LjAzM2wtMS4yODkuNzM3Yy0uMjY1LjE1LS41NjQuMjMtLjg2OS4yM2gtLjE2MmwyLjExMiA0LjY5MmEuNzUuNzUgMCAwIDEtLjE1NC44MzhsLS41My0uNTMuNTI5LjUzMS0uMDAxLjAwMi0uMDAyLjAwMi0uMDA2LjAwNi0uMDE2LjAxNS0uMDQ1LjA0Yy0uMjEuMTc2LS40NDEuMzI3LS42ODYuNDVDNC41NTYgMTAuNzggMy44OCAxMSAzIDExYTQuNDk4IDQuNDk4IDAgMCAxLTIuMDIzLS40NTQgMy41NDQgMy41NDQgMCAwIDEtLjY4Ni0uNDVsLS4wNDUtLjA0LS4wMTYtLjAxNS0uMDA2LS4wMDYtLjAwNC0uMDA0di0uMDAxYS43NS43NSAwIDAgMS0uMTU0LS44MzhMMi4xNzggNC41SDEuNzVhLjc1Ljc1IDAgMCAxIDAtMS41aDIuMjM0YS4yNDkuMjQ5IDAgMCAwIC4xMjUtLjAzM2wxLjI4OC0uNzM3Yy4yNjUtLjE1LjU2NC0uMjMuODY5LS4yM2guOTg0Vi43NWEuNzUuNzUgMCAwIDEgMS41IDBabTIuOTQ1IDguNDc3Yy4yODUuMTM1LjcxOC4yNzMgMS4zMDUuMjczczEuMDItLjEzOCAxLjMwNS0uMjczTDEzIDYuMzI3Wm0tMTAgMGMuMjg1LjEzNS43MTguMjczIDEuMzA1LjI3M3MxLjAyLS4xMzggMS4zMDUtLjI3M0wzIDYuMzI3WlwiPjwvcGF0aD5cbjwvc3ZnPk1JVFxuPC9zcGFuPlxuICAgICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6Zm9ya3MmcXVvdDt9XCIgaHJlZj1cIi9yYWlscy9zb2xpZF9jYWNoZS9mb3Jrc1wiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMaW5rIExpbmstLW11dGVkIG1yLTNcIj5cbiAgICAgICAgICA8c3ZnIGFyaWEtbGFiZWw9XCJmb3JrXCIgcm9sZT1cImltZ1wiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1yZXBvLWZvcmtlZCBtci0xXCI+XG4gICAgPHBhdGggZD1cIk01IDUuMzcydi44NzhjMCAuNDE0LjMzNi43NS43NS43NWg0LjVhLjc1Ljc1IDAgMCAwIC43NS0uNzV2LS44NzhhMi4yNSAyLjI1IDAgMSAxIDEuNSAwdi44NzhhMi4yNSAyLjI1IDAgMCAxLTIuMjUgMi4yNWgtMS41djIuMTI4YTIuMjUxIDIuMjUxIDAgMSAxLTEuNSAwVjguNWgtMS41QTIuMjUgMi4yNSAwIDAgMSAzLjUgNi4yNXYtLjg3OGEyLjI1IDIuMjUgMCAxIDEgMS41IDBaTTUgMy4yNWEuNzUuNzUgMCAxIDAtMS41IDAgLjc1Ljc1IDAgMCAwIDEuNSAwWm02Ljc1Ljc1YS43NS43NSAwIDEgMCAwLTEuNS43NS43NSAwIDAgMCAwIDEuNVptLTMgOC43NWEuNzUuNzUgMCAxIDAtMS41IDAgLjc1Ljc1IDAgMCAwIDEuNSAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAgIDQ4XG48L2E+XG4gICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6aXNzdWVzJnF1b3Q7fVwiIGhyZWY9XCIvcmFpbHMvc29saWRfY2FjaGUvaXNzdWVzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm5vLXdyYXAgTGluayBMaW5rLS1tdXRlZCBtci0zXCI+XG4gICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWlzc3VlLW9wZW5lZCBtci0xXCI+XG4gICAgPHBhdGggZD1cIk04IDkuNWExLjUgMS41IDAgMSAwIDAtMyAxLjUgMS41IDAgMCAwIDAgM1pcIj48L3BhdGg+PHBhdGggZD1cIk04IDBhOCA4IDAgMSAxIDAgMTZBOCA4IDAgMCAxIDggMFpNMS41IDhhNi41IDYuNSAwIDEgMCAxMyAwIDYuNSA2LjUgMCAwIDAtMTMgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgNVxuPC9hPlxuXG4gICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6cHVsbF9yZXF1ZXN0cyZxdW90O31cIiBocmVmPVwiL3JhaWxzL3NvbGlkX2NhY2hlL3B1bGxzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm5vLXdyYXAgTGluayBMaW5rLS1tdXRlZCBtci0zXCI+XG4gICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWdpdC1wdWxsLXJlcXVlc3QgbXItMVwiPlxuICAgIDxwYXRoIGQ9XCJNMS41IDMuMjVhMi4yNSAyLjI1IDAgMSAxIDMgMi4xMjJ2NS4yNTZhMi4yNTEgMi4yNTEgMCAxIDEtMS41IDBWNS4zNzJBMi4yNSAyLjI1IDAgMCAxIDEuNSAzLjI1Wm01LjY3Ny0uMTc3TDkuNTczLjY3N0EuMjUuMjUgMCAwIDEgMTAgLjg1NFYyLjVoMUEyLjUgMi41IDAgMCAxIDEzLjUgNXY1LjYyOGEyLjI1MSAyLjI1MSAwIDEgMS0xLjUgMFY1YTEgMSAwIDAgMC0xLTFoLTF2MS42NDZhLjI1LjI1IDAgMCAxLS40MjcuMTc3TDcuMTc3IDMuNDI3YS4yNS4yNSAwIDAgMSAwLS4zNTRaTTMuNzUgMi41YS43NS43NSAwIDEgMCAwIDEuNS43NS43NSAwIDAgMCAwLTEuNVptMCA5LjVhLjc1Ljc1IDAgMSAwIDAgMS41Ljc1Ljc1IDAgMCAwIDAtMS41Wm04LjI1Ljc1YS43NS43NSAwIDEgMCAxLjUgMCAuNzUuNzUgMCAwIDAtMS41IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgIDNcbjwvYT5cbiAgICAgIDxzcGFuIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJuby13cmFwXCI+XG4gICAgICAgICAgVXBkYXRlZCA8cmVsYXRpdmUtdGltZSBkYXRldGltZT1cIjIwMjQtMDctMjZUMDg6Mzg6MzRaXCIgY2xhc3M9XCJuby13cmFwXCIgdGl0bGU9XCJKdWwgMjYsIDIwMjQsIDU6MzggQU0gR01ULTNcIj5KdWwgMjYsIDIwMjQ8L3JlbGF0aXZlLXRpbWU+XG48L3NwYW4+PC9kaXY+PC9kaXY+XG48L2xpPlxuICAgICAgICA8bGkgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkJveC1yb3dcIj4gICAgICAgICAgPGRpdiBpdGVtcHJvcD1cIm93bnNcIiBpdGVtdHlwZT1cImh0dHA6Ly9zY2hlbWEub3JnL0NvZGVcIiBpdGVtc2NvcGU9XCJpdGVtc2NvcGVcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwicHVibGljIHNvdXJjZSBkLWJsb2NrXCI+XG4gIFxuICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImQtZmxleCBmbGV4LWp1c3RpZnktYmV0d2VlblwiPlxuICAgICAgPGRpdiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibWItMSBmbGV4LWF1dG9cIj5cbiAgICAgICAgPGEgaXRlbXByb3A9XCJuYW1lIGNvZGVSZXBvc2l0b3J5XCIgZGF0YS1ob3ZlcmNhcmQtdHlwZT1cInJlcG9zaXRvcnlcIiBkYXRhLWhvdmVyY2FyZC11cmw9XCIvcmFpbHMvc29saWRfcXVldWUvaG92ZXJjYXJkXCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7cHJvZmlsZXM6b3JnX3JlcG9zX2xpc3RfaXRlbSZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y2xpY2smcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGFyZ2V0OnJlcG9fbndvJnF1b3Q7fVwiIGhyZWY9XCIvcmFpbHMvc29saWRfcXVldWVcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiTGluayBmNCBkLWlubGluZS1ibG9jayB0ZXh0LWJvbGQgbXItMVwiPlxuICAgICAgICAgIHNvbGlkX3F1ZXVlXG48L2E+XG4gICAgICAgIDxzcGFuIHRpdGxlPVwiTGFiZWw6IFB1YmxpY1wiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMYWJlbCBMYWJlbC0tc2Vjb25kYXJ5IHYtYWxpZ24tbWlkZGxlIG1sLTEgbWItMVwiPlxuICAgICAgICAgIFB1YmxpY1xuPC9zcGFuPlxuXG4gICAgICAgICAgPHAgaXRlbXByb3A9XCJkZXNjcmlwdGlvblwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJjb2xvci1mZy1tdXRlZCBtYi0zIHdiLWJyZWFrLXdvcmRcIj5cbiAgICAgICAgICAgIERhdGFiYXNlLWJhY2tlZCBBY3RpdmUgSm9iIGJhY2tlbmRcbjwvcD48L2Rpdj5cbiAgICAgIDxzcGFuIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJwb3NpdGlvbi1yZWxhdGl2ZVwiPjxhIGlkPVwiY29tbWl0LWFjdGl2aXR5LWxpbmstNTg4NTA4ODU2XCIgaHJlZj1cIi9yYWlscy9zb2xpZF9xdWV1ZS9ncmFwaHMvY29tbWl0LWFjdGl2aXR5XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxpbmsgZC1pbmxpbmUtYmxvY2tcIiBhcmlhLWxhYmVsbGVkYnk9XCJ0b29sdGlwLWZiYWM1M2IyLWQzODAtNDQ4MC05YjRkLTI1ZGM4MzBlNjE2OFwiPlxuICAgICAgICA8ZGl2IGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJmbGV4LWl0ZW1zLWNlbnRlciBkLW5vbmUgZC1tZC1mbGV4XCI+XG4gICAgICAgICAgXG4gIDxzdmcgd2lkdGg9XCIxNTVcIiBoZWlnaHQ9XCIzMFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxuICAgIDxkZWZzPlxuICAgICAgPGxpbmVhckdyYWRpZW50IGlkPVwiZ3JhZGllbnQtNTg4NTA4ODU2XCIgeDE9XCIwXCIgeDI9XCIwXCIgeTE9XCIxXCIgeTI9XCIwXCI+XG4gICAgICAgIDxzdG9wIG9mZnNldD1cIjAlXCIgc3RvcC1jb2xvcj1cInZhcigtLWNvbG9yLWNhbGVuZGFyLWdyYXBoLWRheS1MMS1iZylcIj48L3N0b3A+XG4gICAgICAgIDxzdG9wIG9mZnNldD1cIjEwJVwiIHN0b3AtY29sb3I9XCJ2YXIoLS1jb2xvci1jYWxlbmRhci1ncmFwaC1kYXktTDItYmcpXCI+PC9zdG9wPlxuICAgICAgICA8c3RvcCBvZmZzZXQ9XCIyNSVcIiBzdG9wLWNvbG9yPVwidmFyKC0tY29sb3ItY2FsZW5kYXItZ3JhcGgtZGF5LUwzLWJnKVwiPjwvc3RvcD5cbiAgICAgICAgPHN0b3Agb2Zmc2V0PVwiNTAlXCIgc3RvcC1jb2xvcj1cInZhcigtLWNvbG9yLWNhbGVuZGFyLWdyYXBoLWRheS1MNC1iZylcIj48L3N0b3A+XG4gICAgICA8L2xpbmVhckdyYWRpZW50PlxuICAgICAgPG1hc2sgaWQ9XCJzcGFya2xpbmUtNTg4NTA4ODU2XCIgeD1cIjBcIiB5PVwiMFwiIHdpZHRoPVwiMTU1XCIgaGVpZ2h0PVwiMjhcIj5cbiAgICAgICAgPHBvbHlsaW5lIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgwLCAyOCkgc2NhbGUoMSwtMSlcIiBwb2ludHM9XCIwLDEuMCAzLDUuMjQgNiwxLjAgOSwxLjAgMTIsMS4wIDE1LDEuODUgMTgsNy43OSAyMSwyLjcgMjQsMS4wIDI3LDEuMCAzMCw2Ljk0IDMzLDEuODUgMzYsNi4wOSAzOSwxMi4wMyA0MiwxNy4xMiA0NSw3Ljc5IDQ4LDIyLjIxIDUxLDEzLjczIDU0LDEwLjMzIDU3LDIwLjUyIDYwLDI5LjAgNjMsMjIuMjEgNjYsNy43OSA2OSwzLjU1IDcyLDEyLjAzIDc1LDIuNyA3OCwyLjcgODEsMi43IDg0LDcuNzkgODcsMTcuMTIgOTAsNS4yNCA5MywzLjU1IDk2LDUuMjQgOTksNC4zOTAwMDAwMDAwMDAwMDEgMTAyLDIuNyAxMDUsNi45NCAxMDgsOC42NCAxMTEsNi4wOSAxMTQsMS44NSAxMTcsNS4yNCAxMjAsNi45NCAxMjMsNC4zOTAwMDAwMDAwMDAwMDEgMTI2LDEuODUgMTI5LDUuMjQgMTMyLDEuMCAxMzUsMy41NSAxMzgsMS4wIDE0MSw1LjI0IDE0NCw0LjM5MDAwMDAwMDAwMDAwMSAxNDcsMS44NSAxNTAsNS4yNCAxNTMsNC4zOTAwMDAwMDAwMDAwMDEgXCIgZmlsbD1cInRyYW5zcGFyZW50XCIgc3Ryb2tlPVwiIzhjYzY2NVwiIHN0cm9rZS13aWR0aD1cIjJcIj5cbiAgICAgIDwvcG9seWxpbmU+PC9tYXNrPlxuICAgIDwvZGVmcz5cblxuICAgIDxnIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgwLCAyLjApXCI+XG4gICAgICA8cmVjdCB4PVwiMFwiIHk9XCItMlwiIHdpZHRoPVwiMTU1XCIgaGVpZ2h0PVwiMzBcIiBzdHlsZT1cInN0cm9rZTogbm9uZTsgZmlsbDogdXJsKCNncmFkaWVudC01ODg1MDg4NTYpOyBtYXNrOiB1cmwoI3NwYXJrbGluZS01ODg1MDg4NTYpXCI+PC9yZWN0PlxuICAgIDwvZz5cbiAgPC9zdmc+XG48L2Rpdj48L2E+PHRvb2wtdGlwIGlkPVwidG9vbHRpcC1mYmFjNTNiMi1kMzgwLTQ0ODAtOWI0ZC0yNWRjODMwZTYxNjhcIiBmb3I9XCJjb21taXQtYWN0aXZpdHktbGluay01ODg1MDg4NTZcIiBwb3BvdmVyPVwibWFudWFsXCIgZGF0YS1kaXJlY3Rpb249XCJzXCIgZGF0YS10eXBlPVwibGFiZWxcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwic3Itb25seSBwb3NpdGlvbi1hYnNvbHV0ZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHJvbGU9XCJ0b29sdGlwXCI+cmFpbHMvc29saWRfcXVldWXigJlzIHBhc3QgeWVhciBvZiBjb21taXQgYWN0aXZpdHk8L3Rvb2wtdGlwPjwvc3Bhbj5cbjwvZGl2PlxuICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImNvbG9yLWZnLW11dGVkIGY2XCI+XG5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJtci0zXCI+XG4gIDxzcGFuIGNsYXNzPVwicmVwby1sYW5ndWFnZS1jb2xvclwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogIzcwMTUxNlwiPjwvc3Bhbj5cbiAgPHNwYW4gaXRlbXByb3A9XCJwcm9ncmFtbWluZ0xhbmd1YWdlXCI+UnVieTwvc3Bhbj5cbjwvc3Bhbj5cblxuXG4gICAgICAgIDxhIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O3Byb2ZpbGVzOm9yZ19yZXBvc19saXN0X2l0ZW0mcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RhcmdldDpzdGFycyZxdW90O31cIiBocmVmPVwiL3JhaWxzL3NvbGlkX3F1ZXVlL3N0YXJnYXplcnNcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibm8td3JhcCBMaW5rIExpbmstLW11dGVkIG1yLTNcIj5cbiAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1zdGFyIG1yLTFcIj5cbiAgICA8cGF0aCBkPVwiTTggLjI1YS43NS43NSAwIDAgMSAuNjczLjQxOGwxLjg4MiAzLjgxNSA0LjIxLjYxMmEuNzUuNzUgMCAwIDEgLjQxNiAxLjI3OWwtMy4wNDYgMi45Ny43MTkgNC4xOTJhLjc1MS43NTEgMCAwIDEtMS4wODguNzkxTDggMTIuMzQ3bC0zLjc2NiAxLjk4YS43NS43NSAwIDAgMS0xLjA4OC0uNzlsLjcyLTQuMTk0TC44MTggNi4zNzRhLjc1Ljc1IDAgMCAxIC40MTYtMS4yOGw0LjIxLS42MTFMNy4zMjcuNjY4QS43NS43NSAwIDAgMSA4IC4yNVptMCAyLjQ0NUw2LjYxNSA1LjVhLjc1Ljc1IDAgMCAxLS41NjQuNDFsLTMuMDk3LjQ1IDIuMjQgMi4xODRhLjc1Ljc1IDAgMCAxIC4yMTYuNjY0bC0uNTI4IDMuMDg0IDIuNzY5LTEuNDU2YS43NS43NSAwIDAgMSAuNjk4IDBsMi43NyAxLjQ1Ni0uNTMtMy4wODRhLjc1Ljc1IDAgMCAxIC4yMTYtLjY2NGwyLjI0LTIuMTgzLTMuMDk2LS40NWEuNzUuNzUgMCAwIDEtLjU2NC0uNDFMOCAyLjY5NFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAxLDY2NFxuPC9hPlxuICAgICAgICA8c3BhbiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibXItM1wiPlxuICAgICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWxhdyBtci0xXCI+XG4gICAgPHBhdGggZD1cIk04Ljc1Ljc1VjJoLjk4NWMuMzA0IDAgLjYwMy4wOC44NjcuMjMxbDEuMjkuNzM2Yy4wMzguMDIyLjA4LjAzMy4xMjQuMDMzaDIuMjM0YS43NS43NSAwIDAgMSAwIDEuNWgtLjQyN2wyLjExMSA0LjY5MmEuNzUuNzUgMCAwIDEtLjE1NC44MzhsLS41My0uNTMuNTI5LjUzMS0uMDAxLjAwMi0uMDAyLjAwMi0uMDA2LjAwNi0uMDA2LjAwNS0uMDEuMDEtLjA0NS4wNGMtLjIxLjE3Ni0uNDQxLjMyNy0uNjg2LjQ1QzE0LjU1NiAxMC43OCAxMy44OCAxMSAxMyAxMWE0LjQ5OCA0LjQ5OCAwIDAgMS0yLjAyMy0uNDU0IDMuNTQ0IDMuNTQ0IDAgMCAxLS42ODYtLjQ1bC0uMDQ1LS4wNC0uMDE2LS4wMTUtLjAwNi0uMDA2LS4wMDQtLjAwNHYtLjAwMWEuNzUuNzUgMCAwIDEtLjE1NC0uODM4TDEyLjE3OCA0LjVoLS4xNjJjLS4zMDUgMC0uNjA0LS4wNzktLjg2OC0uMjMxbC0xLjI5LS43MzZhLjI0NS4yNDUgMCAwIDAtLjEyNC0uMDMzSDguNzVWMTNoMi41YS43NS43NSAwIDAgMSAwIDEuNWgtNi41YS43NS43NSAwIDAgMSAwLTEuNWgyLjVWMy41aC0uOTg0YS4yNDUuMjQ1IDAgMCAwLS4xMjQuMDMzbC0xLjI4OS43MzdjLS4yNjUuMTUtLjU2NC4yMy0uODY5LjIzaC0uMTYybDIuMTEyIDQuNjkyYS43NS43NSAwIDAgMS0uMTU0LjgzOGwtLjUzLS41My41MjkuNTMxLS4wMDEuMDAyLS4wMDIuMDAyLS4wMDYuMDA2LS4wMTYuMDE1LS4wNDUuMDRjLS4yMS4xNzYtLjQ0MS4zMjctLjY4Ni40NUM0LjU1NiAxMC43OCAzLjg4IDExIDMgMTFhNC40OTggNC40OTggMCAwIDEtMi4wMjMtLjQ1NCAzLjU0NCAzLjU0NCAwIDAgMS0uNjg2LS40NWwtLjA0NS0uMDQtLjAxNi0uMDE1LS4wMDYtLjAwNi0uMDA0LS4wMDR2LS4wMDFhLjc1Ljc1IDAgMCAxLS4xNTQtLjgzOEwyLjE3OCA0LjVIMS43NWEuNzUuNzUgMCAwIDEgMC0xLjVoMi4yMzRhLjI0OS4yNDkgMCAwIDAgLjEyNS0uMDMzbDEuMjg4LS43MzdjLjI2NS0uMTUuNTY0LS4yMy44NjktLjIzaC45ODRWLjc1YS43NS43NSAwIDAgMSAxLjUgMFptMi45NDUgOC40NzdjLjI4NS4xMzUuNzE4LjI3MyAxLjMwNS4yNzNzMS4wMi0uMTM4IDEuMzA1LS4yNzNMMTMgNi4zMjdabS0xMCAwYy4yODUuMTM1LjcxOC4yNzMgMS4zMDUuMjczczEuMDItLjEzOCAxLjMwNS0uMjczTDMgNi4zMjdaXCI+PC9wYXRoPlxuPC9zdmc+TUlUXG48L3NwYW4+XG4gICAgICAgIDxhIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O3Byb2ZpbGVzOm9yZ19yZXBvc19saXN0X2l0ZW0mcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RhcmdldDpmb3JrcyZxdW90O31cIiBocmVmPVwiL3JhaWxzL3NvbGlkX3F1ZXVlL2ZvcmtzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxpbmsgTGluay0tbXV0ZWQgbXItM1wiPlxuICAgICAgICAgIDxzdmcgYXJpYS1sYWJlbD1cImZvcmtcIiByb2xlPVwiaW1nXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLXJlcG8tZm9ya2VkIG1yLTFcIj5cbiAgICA8cGF0aCBkPVwiTTUgNS4zNzJ2Ljg3OGMwIC40MTQuMzM2Ljc1Ljc1Ljc1aDQuNWEuNzUuNzUgMCAwIDAgLjc1LS43NXYtLjg3OGEyLjI1IDIuMjUgMCAxIDEgMS41IDB2Ljg3OGEyLjI1IDIuMjUgMCAwIDEtMi4yNSAyLjI1aC0xLjV2Mi4xMjhhMi4yNTEgMi4yNTEgMCAxIDEtMS41IDBWOC41aC0xLjVBMi4yNSAyLjI1IDAgMCAxIDMuNSA2LjI1di0uODc4YTIuMjUgMi4yNSAwIDEgMSAxLjUgMFpNNSAzLjI1YS43NS43NSAwIDEgMC0xLjUgMCAuNzUuNzUgMCAwIDAgMS41IDBabTYuNzUuNzVhLjc1Ljc1IDAgMSAwIDAtMS41Ljc1Ljc1IDAgMCAwIDAgMS41Wm0tMyA4Ljc1YS43NS43NSAwIDEgMC0xLjUgMCAuNzUuNzUgMCAwIDAgMS41IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgOTBcbjwvYT5cbiAgICAgIDxhIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O3Byb2ZpbGVzOm9yZ19yZXBvc19saXN0X2l0ZW0mcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RhcmdldDppc3N1ZXMmcXVvdDt9XCIgaHJlZj1cIi9yYWlscy9zb2xpZF9xdWV1ZS9pc3N1ZXNcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibm8td3JhcCBMaW5rIExpbmstLW11dGVkIG1yLTNcIj5cbiAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24taXNzdWUtb3BlbmVkIG1yLTFcIj5cbiAgICA8cGF0aCBkPVwiTTggOS41YTEuNSAxLjUgMCAxIDAgMC0zIDEuNSAxLjUgMCAwIDAgMCAzWlwiPjwvcGF0aD48cGF0aCBkPVwiTTggMGE4IDggMCAxIDEgMCAxNkE4IDggMCAwIDEgOCAwWk0xLjUgOGE2LjUgNi41IDAgMSAwIDEzIDAgNi41IDYuNSAwIDAgMC0xMyAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAzMlxuPC9hPlxuXG4gICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6cHVsbF9yZXF1ZXN0cyZxdW90O31cIiBocmVmPVwiL3JhaWxzL3NvbGlkX3F1ZXVlL3B1bGxzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm5vLXdyYXAgTGluayBMaW5rLS1tdXRlZCBtci0zXCI+XG4gICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWdpdC1wdWxsLXJlcXVlc3QgbXItMVwiPlxuICAgIDxwYXRoIGQ9XCJNMS41IDMuMjVhMi4yNSAyLjI1IDAgMSAxIDMgMi4xMjJ2NS4yNTZhMi4yNTEgMi4yNTEgMCAxIDEtMS41IDBWNS4zNzJBMi4yNSAyLjI1IDAgMCAxIDEuNSAzLjI1Wm01LjY3Ny0uMTc3TDkuNTczLjY3N0EuMjUuMjUgMCAwIDEgMTAgLjg1NFYyLjVoMUEyLjUgMi41IDAgMCAxIDEzLjUgNXY1LjYyOGEyLjI1MSAyLjI1MSAwIDEgMS0xLjUgMFY1YTEgMSAwIDAgMC0xLTFoLTF2MS42NDZhLjI1LjI1IDAgMCAxLS40MjcuMTc3TDcuMTc3IDMuNDI3YS4yNS4yNSAwIDAgMSAwLS4zNTRaTTMuNzUgMi41YS43NS43NSAwIDEgMCAwIDEuNS43NS43NSAwIDAgMCAwLTEuNVptMCA5LjVhLjc1Ljc1IDAgMSAwIDAgMS41Ljc1Ljc1IDAgMCAwIDAtMS41Wm04LjI1Ljc1YS43NS43NSAwIDEgMCAxLjUgMCAuNzUuNzUgMCAwIDAtMS41IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgIDZcbjwvYT5cbiAgICAgIDxzcGFuIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJuby13cmFwXCI+XG4gICAgICAgICAgVXBkYXRlZCA8cmVsYXRpdmUtdGltZSBkYXRldGltZT1cIjIwMjQtMDctMjZUMDg6MTA6MDNaXCIgY2xhc3M9XCJuby13cmFwXCIgdGl0bGU9XCJKdWwgMjYsIDIwMjQsIDU6MTAgQU0gR01ULTNcIj5KdWwgMjYsIDIwMjQ8L3JlbGF0aXZlLXRpbWU+XG48L3NwYW4+PC9kaXY+PC9kaXY+XG48L2xpPlxuICAgICAgICA8bGkgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkJveC1yb3dcIj4gICAgICAgICAgPGRpdiBpdGVtcHJvcD1cIm93bnNcIiBpdGVtdHlwZT1cImh0dHA6Ly9zY2hlbWEub3JnL0NvZGVcIiBpdGVtc2NvcGU9XCJpdGVtc2NvcGVcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwicHVibGljIHNvdXJjZSBkLWJsb2NrXCI+XG4gIFxuICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImQtZmxleCBmbGV4LWp1c3RpZnktYmV0d2VlblwiPlxuICAgICAgPGRpdiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibWItMSBmbGV4LWF1dG9cIj5cbiAgICAgICAgPGEgaXRlbXByb3A9XCJuYW1lIGNvZGVSZXBvc2l0b3J5XCIgZGF0YS1ob3ZlcmNhcmQtdHlwZT1cInJlcG9zaXRvcnlcIiBkYXRhLWhvdmVyY2FyZC11cmw9XCIvcmFpbHMvbWlzc2lvbl9jb250cm9sLWpvYnMvaG92ZXJjYXJkXCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7cHJvZmlsZXM6b3JnX3JlcG9zX2xpc3RfaXRlbSZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y2xpY2smcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGFyZ2V0OnJlcG9fbndvJnF1b3Q7fVwiIGhyZWY9XCIvcmFpbHMvbWlzc2lvbl9jb250cm9sLWpvYnNcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiTGluayBmNCBkLWlubGluZS1ibG9jayB0ZXh0LWJvbGQgbXItMVwiPlxuICAgICAgICAgIG1pc3Npb25fY29udHJvbC1qb2JzXG48L2E+XG4gICAgICAgIDxzcGFuIHRpdGxlPVwiTGFiZWw6IFB1YmxpY1wiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMYWJlbCBMYWJlbC0tc2Vjb25kYXJ5IHYtYWxpZ24tbWlkZGxlIG1sLTEgbWItMVwiPlxuICAgICAgICAgIFB1YmxpY1xuPC9zcGFuPlxuXG4gICAgICAgICAgPHAgaXRlbXByb3A9XCJkZXNjcmlwdGlvblwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJjb2xvci1mZy1tdXRlZCBtYi0zIHdiLWJyZWFrLXdvcmRcIj5cbiAgICAgICAgICAgIERhc2hib2FyZCBhbmQgQWN0aXZlIEpvYiBleHRlbnNpb25zIHRvIG9wZXJhdGUgYW5kIHRyb3VibGVzaG9vdCBiYWNrZ3JvdW5kIGpvYnNcbjwvcD48L2Rpdj5cbiAgICAgIDxzcGFuIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJwb3NpdGlvbi1yZWxhdGl2ZVwiPjxhIGlkPVwiY29tbWl0LWFjdGl2aXR5LWxpbmstNTIwOTI3Njc5XCIgaHJlZj1cIi9yYWlscy9taXNzaW9uX2NvbnRyb2wtam9icy9ncmFwaHMvY29tbWl0LWFjdGl2aXR5XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxpbmsgZC1pbmxpbmUtYmxvY2tcIiBhcmlhLWxhYmVsbGVkYnk9XCJ0b29sdGlwLWJlMWRhYzIxLTRkNTQtNDIxZS1hODNkLWExNWQzYWQ2NGM5MVwiPlxuICAgICAgICA8ZGl2IGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJmbGV4LWl0ZW1zLWNlbnRlciBkLW5vbmUgZC1tZC1mbGV4XCI+XG4gICAgICAgICAgXG4gIDxzdmcgd2lkdGg9XCIxNTVcIiBoZWlnaHQ9XCIzMFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxuICAgIDxkZWZzPlxuICAgICAgPGxpbmVhckdyYWRpZW50IGlkPVwiZ3JhZGllbnQtNTIwOTI3Njc5XCIgeDE9XCIwXCIgeDI9XCIwXCIgeTE9XCIxXCIgeTI9XCIwXCI+XG4gICAgICAgIDxzdG9wIG9mZnNldD1cIjAlXCIgc3RvcC1jb2xvcj1cInZhcigtLWNvbG9yLWNhbGVuZGFyLWdyYXBoLWRheS1MMS1iZylcIj48L3N0b3A+XG4gICAgICAgIDxzdG9wIG9mZnNldD1cIjEwJVwiIHN0b3AtY29sb3I9XCJ2YXIoLS1jb2xvci1jYWxlbmRhci1ncmFwaC1kYXktTDItYmcpXCI+PC9zdG9wPlxuICAgICAgICA8c3RvcCBvZmZzZXQ9XCIyNSVcIiBzdG9wLWNvbG9yPVwidmFyKC0tY29sb3ItY2FsZW5kYXItZ3JhcGgtZGF5LUwzLWJnKVwiPjwvc3RvcD5cbiAgICAgICAgPHN0b3Agb2Zmc2V0PVwiNTAlXCIgc3RvcC1jb2xvcj1cInZhcigtLWNvbG9yLWNhbGVuZGFyLWdyYXBoLWRheS1MNC1iZylcIj48L3N0b3A+XG4gICAgICA8L2xpbmVhckdyYWRpZW50PlxuICAgICAgPG1hc2sgaWQ9XCJzcGFya2xpbmUtNTIwOTI3Njc5XCIgeD1cIjBcIiB5PVwiMFwiIHdpZHRoPVwiMTU1XCIgaGVpZ2h0PVwiMjhcIj5cbiAgICAgICAgPHBvbHlsaW5lIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgwLCAyOCkgc2NhbGUoMSwtMSlcIiBwb2ludHM9XCIwLDEuMCAzLDEuMCA2LDEuMCA5LDEuMCAxMiwxLjAgMTUsMy45NSAxOCwzLjIxIDIxLDYuMTYgMjQsMS4wIDI3LDEuMCAzMCwxLjAgMzMsMS4wIDM2LDUuNDIgMzksMS4wIDQyLDEuMCA0NSwxLjAgNDgsMS4wIDUxLDEuMCA1NCwzLjIxIDU3LDEuMCA2MCwxLjAgNjMsMS4wIDY2LDEuMCA2OSwxLjAgNzIsOC4zNzAwMDAwMDAwMDAwMDEgNzUsMjIuMzcgNzgsMjkuMCA4MSw1LjQyIDg0LDE3LjIxIDg3LDExLjMyIDkwLDEyLjc5IDkzLDQuNjggOTYsMy4yMSA5OSw0LjY4IDEwMiw1LjQyIDEwNSw2LjE2IDEwOCwzLjIxIDExMSwxLjAgMTE0LDEuMCAxMTcsMS4wIDEyMCwyLjQ2OTk5OTk5OTk5OTk5OTggMTIzLDEuNzQgMTI2LDMuMjEgMTI5LDEuMCAxMzIsMS4wIDEzNSwxLjAgMTM4LDEuMCAxNDEsMS43NCAxNDQsMi40Njk5OTk5OTk5OTk5OTk4IDE0NywxLjAgMTUwLDEuMCAxNTMsMS4wIFwiIGZpbGw9XCJ0cmFuc3BhcmVudFwiIHN0cm9rZT1cIiM4Y2M2NjVcIiBzdHJva2Utd2lkdGg9XCIyXCI+XG4gICAgICA8L3BvbHlsaW5lPjwvbWFzaz5cbiAgICA8L2RlZnM+XG5cbiAgICA8ZyB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoMCwgMi4wKVwiPlxuICAgICAgPHJlY3QgeD1cIjBcIiB5PVwiLTJcIiB3aWR0aD1cIjE1NVwiIGhlaWdodD1cIjMwXCIgc3R5bGU9XCJzdHJva2U6IG5vbmU7IGZpbGw6IHVybCgjZ3JhZGllbnQtNTIwOTI3Njc5KTsgbWFzazogdXJsKCNzcGFya2xpbmUtNTIwOTI3Njc5KVwiPjwvcmVjdD5cbiAgICA8L2c+XG4gIDwvc3ZnPlxuPC9kaXY+PC9hPjx0b29sLXRpcCBpZD1cInRvb2x0aXAtYmUxZGFjMjEtNGQ1NC00MjFlLWE4M2QtYTE1ZDNhZDY0YzkxXCIgZm9yPVwiY29tbWl0LWFjdGl2aXR5LWxpbmstNTIwOTI3Njc5XCIgcG9wb3Zlcj1cIm1hbnVhbFwiIGRhdGEtZGlyZWN0aW9uPVwic1wiIGRhdGEtdHlwZT1cImxhYmVsXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cInNyLW9ubHkgcG9zaXRpb24tYWJzb2x1dGVcIiBhcmlhLWhpZGRlbj1cInRydWVcIiByb2xlPVwidG9vbHRpcFwiPnJhaWxzL21pc3Npb25fY29udHJvbC1qb2Jz4oCZcyBwYXN0IHllYXIgb2YgY29tbWl0IGFjdGl2aXR5PC90b29sLXRpcD48L3NwYW4+XG48L2Rpdj5cbiAgICA8ZGl2IGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJjb2xvci1mZy1tdXRlZCBmNlwiPlxuXG4gICAgICAgIDxzcGFuIGNsYXNzPVwibXItM1wiPlxuICA8c3BhbiBjbGFzcz1cInJlcG8tbGFuZ3VhZ2UtY29sb3JcIiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6ICM3MDE1MTZcIj48L3NwYW4+XG4gIDxzcGFuIGl0ZW1wcm9wPVwicHJvZ3JhbW1pbmdMYW5ndWFnZVwiPlJ1Ynk8L3NwYW4+XG48L3NwYW4+XG5cblxuICAgICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6c3RhcnMmcXVvdDt9XCIgaHJlZj1cIi9yYWlscy9taXNzaW9uX2NvbnRyb2wtam9icy9zdGFyZ2F6ZXJzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm5vLXdyYXAgTGluayBMaW5rLS1tdXRlZCBtci0zXCI+XG4gICAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tc3RhciBtci0xXCI+XG4gICAgPHBhdGggZD1cIk04IC4yNWEuNzUuNzUgMCAwIDEgLjY3My40MThsMS44ODIgMy44MTUgNC4yMS42MTJhLjc1Ljc1IDAgMCAxIC40MTYgMS4yNzlsLTMuMDQ2IDIuOTcuNzE5IDQuMTkyYS43NTEuNzUxIDAgMCAxLTEuMDg4Ljc5MUw4IDEyLjM0N2wtMy43NjYgMS45OGEuNzUuNzUgMCAwIDEtMS4wODgtLjc5bC43Mi00LjE5NEwuODE4IDYuMzc0YS43NS43NSAwIDAgMSAuNDE2LTEuMjhsNC4yMS0uNjExTDcuMzI3LjY2OEEuNzUuNzUgMCAwIDEgOCAuMjVabTAgMi40NDVMNi42MTUgNS41YS43NS43NSAwIDAgMS0uNTY0LjQxbC0zLjA5Ny40NSAyLjI0IDIuMTg0YS43NS43NSAwIDAgMSAuMjE2LjY2NGwtLjUyOCAzLjA4NCAyLjc2OS0xLjQ1NmEuNzUuNzUgMCAwIDEgLjY5OCAwbDIuNzcgMS40NTYtLjUzLTMuMDg0YS43NS43NSAwIDAgMSAuMjE2LS42NjRsMi4yNC0yLjE4My0zLjA5Ni0uNDVhLjc1Ljc1IDAgMCAxLS41NjQtLjQxTDggMi42OTRaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgNDU3XG48L2E+XG4gICAgICAgIDxzcGFuIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJtci0zXCI+XG4gICAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tbGF3IG1yLTFcIj5cbiAgICA8cGF0aCBkPVwiTTguNzUuNzVWMmguOTg1Yy4zMDQgMCAuNjAzLjA4Ljg2Ny4yMzFsMS4yOS43MzZjLjAzOC4wMjIuMDguMDMzLjEyNC4wMzNoMi4yMzRhLjc1Ljc1IDAgMCAxIDAgMS41aC0uNDI3bDIuMTExIDQuNjkyYS43NS43NSAwIDAgMS0uMTU0LjgzOGwtLjUzLS41My41MjkuNTMxLS4wMDEuMDAyLS4wMDIuMDAyLS4wMDYuMDA2LS4wMDYuMDA1LS4wMS4wMS0uMDQ1LjA0Yy0uMjEuMTc2LS40NDEuMzI3LS42ODYuNDVDMTQuNTU2IDEwLjc4IDEzLjg4IDExIDEzIDExYTQuNDk4IDQuNDk4IDAgMCAxLTIuMDIzLS40NTQgMy41NDQgMy41NDQgMCAwIDEtLjY4Ni0uNDVsLS4wNDUtLjA0LS4wMTYtLjAxNS0uMDA2LS4wMDYtLjAwNC0uMDA0di0uMDAxYS43NS43NSAwIDAgMS0uMTU0LS44MzhMMTIuMTc4IDQuNWgtLjE2MmMtLjMwNSAwLS42MDQtLjA3OS0uODY4LS4yMzFsLTEuMjktLjczNmEuMjQ1LjI0NSAwIDAgMC0uMTI0LS4wMzNIOC43NVYxM2gyLjVhLjc1Ljc1IDAgMCAxIDAgMS41aC02LjVhLjc1Ljc1IDAgMCAxIDAtMS41aDIuNVYzLjVoLS45ODRhLjI0NS4yNDUgMCAwIDAtLjEyNC4wMzNsLTEuMjg5LjczN2MtLjI2NS4xNS0uNTY0LjIzLS44NjkuMjNoLS4xNjJsMi4xMTIgNC42OTJhLjc1Ljc1IDAgMCAxLS4xNTQuODM4bC0uNTMtLjUzLjUyOS41MzEtLjAwMS4wMDItLjAwMi4wMDItLjAwNi4wMDYtLjAxNi4wMTUtLjA0NS4wNGMtLjIxLjE3Ni0uNDQxLjMyNy0uNjg2LjQ1QzQuNTU2IDEwLjc4IDMuODggMTEgMyAxMWE0LjQ5OCA0LjQ5OCAwIDAgMS0yLjAyMy0uNDU0IDMuNTQ0IDMuNTQ0IDAgMCAxLS42ODYtLjQ1bC0uMDQ1LS4wNC0uMDE2LS4wMTUtLjAwNi0uMDA2LS4wMDQtLjAwNHYtLjAwMWEuNzUuNzUgMCAwIDEtLjE1NC0uODM4TDIuMTc4IDQuNUgxLjc1YS43NS43NSAwIDAgMSAwLTEuNWgyLjIzNGEuMjQ5LjI0OSAwIDAgMCAuMTI1LS4wMzNsMS4yODgtLjczN2MuMjY1LS4xNS41NjQtLjIzLjg2OS0uMjNoLjk4NFYuNzVhLjc1Ljc1IDAgMCAxIDEuNSAwWm0yLjk0NSA4LjQ3N2MuMjg1LjEzNS43MTguMjczIDEuMzA1LjI3M3MxLjAyLS4xMzggMS4zMDUtLjI3M0wxMyA2LjMyN1ptLTEwIDBjLjI4NS4xMzUuNzE4LjI3MyAxLjMwNS4yNzNzMS4wMi0uMTM4IDEuMzA1LS4yNzNMMyA2LjMyN1pcIj48L3BhdGg+XG48L3N2Zz5NSVRcbjwvc3Bhbj5cbiAgICAgICAgPGEgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7cHJvZmlsZXM6b3JnX3JlcG9zX2xpc3RfaXRlbSZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y2xpY2smcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGFyZ2V0OmZvcmtzJnF1b3Q7fVwiIGhyZWY9XCIvcmFpbHMvbWlzc2lvbl9jb250cm9sLWpvYnMvZm9ya3NcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiTGluayBMaW5rLS1tdXRlZCBtci0zXCI+XG4gICAgICAgICAgPHN2ZyBhcmlhLWxhYmVsPVwiZm9ya1wiIHJvbGU9XCJpbWdcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tcmVwby1mb3JrZWQgbXItMVwiPlxuICAgIDxwYXRoIGQ9XCJNNSA1LjM3MnYuODc4YzAgLjQxNC4zMzYuNzUuNzUuNzVoNC41YS43NS43NSAwIDAgMCAuNzUtLjc1di0uODc4YTIuMjUgMi4yNSAwIDEgMSAxLjUgMHYuODc4YTIuMjUgMi4yNSAwIDAgMS0yLjI1IDIuMjVoLTEuNXYyLjEyOGEyLjI1MSAyLjI1MSAwIDEgMS0xLjUgMFY4LjVoLTEuNUEyLjI1IDIuMjUgMCAwIDEgMy41IDYuMjV2LS44NzhhMi4yNSAyLjI1IDAgMSAxIDEuNSAwWk01IDMuMjVhLjc1Ljc1IDAgMSAwLTEuNSAwIC43NS43NSAwIDAgMCAxLjUgMFptNi43NS43NWEuNzUuNzUgMCAxIDAgMC0xLjUuNzUuNzUgMCAwIDAgMCAxLjVabS0zIDguNzVhLjc1Ljc1IDAgMSAwLTEuNSAwIC43NS43NSAwIDAgMCAxLjUgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICA0OVxuPC9hPlxuICAgICAgPGEgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7cHJvZmlsZXM6b3JnX3JlcG9zX2xpc3RfaXRlbSZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y2xpY2smcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGFyZ2V0Omlzc3VlcyZxdW90O31cIiBocmVmPVwiL3JhaWxzL21pc3Npb25fY29udHJvbC1qb2JzL2lzc3Vlc1wiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJuby13cmFwIExpbmsgTGluay0tbXV0ZWRcIj5cbiAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24taXNzdWUtb3BlbmVkIG1yLTFcIj5cbiAgICA8cGF0aCBkPVwiTTggOS41YTEuNSAxLjUgMCAxIDAgMC0zIDEuNSAxLjUgMCAwIDAgMCAzWlwiPjwvcGF0aD48cGF0aCBkPVwiTTggMGE4IDggMCAxIDEgMCAxNkE4IDggMCAwIDEgOCAwWk0xLjUgOGE2LjUgNi41IDAgMSAwIDEzIDAgNi41IDYuNSAwIDAgMC0xMyAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAyMFxuPC9hPlxuICAgICAgICA8YSBocmVmPVwiL3JhaWxzL21pc3Npb25fY29udHJvbC1qb2JzL2lzc3Vlcz9xPWxhYmVsJTNBJTIyZ29vZCtmaXJzdCtpc3N1ZSUyMitpcyUzQWlzc3VlK2lzJTNBb3BlblwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJuby13cmFwIExpbmsgTGluay0tbXV0ZWQgbXItM1wiPlxuICAgICAgICAgICgyIGlzc3VlcyBuZWVkIGhlbHApXG48L2E+XG4gICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6cHVsbF9yZXF1ZXN0cyZxdW90O31cIiBocmVmPVwiL3JhaWxzL21pc3Npb25fY29udHJvbC1qb2JzL3B1bGxzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm5vLXdyYXAgTGluayBMaW5rLS1tdXRlZCBtci0zXCI+XG4gICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWdpdC1wdWxsLXJlcXVlc3QgbXItMVwiPlxuICAgIDxwYXRoIGQ9XCJNMS41IDMuMjVhMi4yNSAyLjI1IDAgMSAxIDMgMi4xMjJ2NS4yNTZhMi4yNTEgMi4yNTEgMCAxIDEtMS41IDBWNS4zNzJBMi4yNSAyLjI1IDAgMCAxIDEuNSAzLjI1Wm01LjY3Ny0uMTc3TDkuNTczLjY3N0EuMjUuMjUgMCAwIDEgMTAgLjg1NFYyLjVoMUEyLjUgMi41IDAgMCAxIDEzLjUgNXY1LjYyOGEyLjI1MSAyLjI1MSAwIDEgMS0xLjUgMFY1YTEgMSAwIDAgMC0xLTFoLTF2MS42NDZhLjI1LjI1IDAgMCAxLS40MjcuMTc3TDcuMTc3IDMuNDI3YS4yNS4yNSAwIDAgMSAwLS4zNTRaTTMuNzUgMi41YS43NS43NSAwIDEgMCAwIDEuNS43NS43NSAwIDAgMCAwLTEuNVptMCA5LjVhLjc1Ljc1IDAgMSAwIDAgMS41Ljc1Ljc1IDAgMCAwIDAtMS41Wm04LjI1Ljc1YS43NS43NSAwIDEgMCAxLjUgMCAuNzUuNzUgMCAwIDAtMS41IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgIDEzXG48L2E+XG4gICAgICA8c3BhbiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibm8td3JhcFwiPlxuICAgICAgICAgIFVwZGF0ZWQgPHJlbGF0aXZlLXRpbWUgZGF0ZXRpbWU9XCIyMDI0LTA3LTI0VDExOjE4OjI2WlwiIGNsYXNzPVwibm8td3JhcFwiIHRpdGxlPVwiSnVsIDI0LCAyMDI0LCA4OjE4IEFNIEdNVC0zXCI+SnVsIDI0LCAyMDI0PC9yZWxhdGl2ZS10aW1lPlxuPC9zcGFuPjwvZGl2PjwvZGl2PlxuPC9saT5cbiAgICAgICAgPGxpIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJCb3gtcm93XCI+ICAgICAgICAgIDxkaXYgaXRlbXByb3A9XCJvd25zXCIgaXRlbXR5cGU9XCJodHRwOi8vc2NoZW1hLm9yZy9Db2RlXCIgaXRlbXNjb3BlPVwiaXRlbXNjb3BlXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cInB1YmxpYyBzb3VyY2UgZC1ibG9ja1wiPlxuICBcbiAgICA8ZGl2IGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJkLWZsZXggZmxleC1qdXN0aWZ5LWJldHdlZW5cIj5cbiAgICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm1iLTEgZmxleC1hdXRvXCI+XG4gICAgICAgIDxhIGl0ZW1wcm9wPVwibmFtZSBjb2RlUmVwb3NpdG9yeVwiIGRhdGEtaG92ZXJjYXJkLXR5cGU9XCJyZXBvc2l0b3J5XCIgZGF0YS1ob3ZlcmNhcmQtdXJsPVwiL3JhaWxzL3dlYnNpdGUvaG92ZXJjYXJkXCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7cHJvZmlsZXM6b3JnX3JlcG9zX2xpc3RfaXRlbSZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y2xpY2smcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGFyZ2V0OnJlcG9fbndvJnF1b3Q7fVwiIGhyZWY9XCIvcmFpbHMvd2Vic2l0ZVwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMaW5rIGY0IGQtaW5saW5lLWJsb2NrIHRleHQtYm9sZCBtci0xXCI+XG4gICAgICAgICAgd2Vic2l0ZVxuPC9hPlxuICAgICAgICA8c3BhbiB0aXRsZT1cIkxhYmVsOiBQdWJsaWNcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiTGFiZWwgTGFiZWwtLXNlY29uZGFyeSB2LWFsaWduLW1pZGRsZSBtbC0xIG1iLTFcIj5cbiAgICAgICAgICBQdWJsaWNcbjwvc3Bhbj5cblxuPC9kaXY+XG4gICAgICA8c3BhbiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwicG9zaXRpb24tcmVsYXRpdmVcIj48YSBpZD1cImNvbW1pdC1hY3Rpdml0eS1saW5rLTQzNjIxNjk5MlwiIGhyZWY9XCIvcmFpbHMvd2Vic2l0ZS9ncmFwaHMvY29tbWl0LWFjdGl2aXR5XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxpbmsgZC1pbmxpbmUtYmxvY2tcIiBhcmlhLWxhYmVsbGVkYnk9XCJ0b29sdGlwLWMzYjI4ZDc5LWQ1YTEtNDBhYS1hNzBlLTQ1MWUyNmMzYTZjOVwiPlxuICAgICAgICA8ZGl2IGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJmbGV4LWl0ZW1zLWNlbnRlciBkLW5vbmUgZC1tZC1mbGV4XCI+XG4gICAgICAgICAgXG4gIDxzdmcgd2lkdGg9XCIxNTVcIiBoZWlnaHQ9XCIzMFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxuICAgIDxkZWZzPlxuICAgICAgPGxpbmVhckdyYWRpZW50IGlkPVwiZ3JhZGllbnQtNDM2MjE2OTkyXCIgeDE9XCIwXCIgeDI9XCIwXCIgeTE9XCIxXCIgeTI9XCIwXCI+XG4gICAgICAgIDxzdG9wIG9mZnNldD1cIjAlXCIgc3RvcC1jb2xvcj1cInZhcigtLWNvbG9yLWNhbGVuZGFyLWdyYXBoLWRheS1MMS1iZylcIj48L3N0b3A+XG4gICAgICAgIDxzdG9wIG9mZnNldD1cIjEwJVwiIHN0b3AtY29sb3I9XCJ2YXIoLS1jb2xvci1jYWxlbmRhci1ncmFwaC1kYXktTDItYmcpXCI+PC9zdG9wPlxuICAgICAgICA8c3RvcCBvZmZzZXQ9XCIyNSVcIiBzdG9wLWNvbG9yPVwidmFyKC0tY29sb3ItY2FsZW5kYXItZ3JhcGgtZGF5LUwzLWJnKVwiPjwvc3RvcD5cbiAgICAgICAgPHN0b3Agb2Zmc2V0PVwiNTAlXCIgc3RvcC1jb2xvcj1cInZhcigtLWNvbG9yLWNhbGVuZGFyLWdyYXBoLWRheS1MNC1iZylcIj48L3N0b3A+XG4gICAgICA8L2xpbmVhckdyYWRpZW50PlxuICAgICAgPG1hc2sgaWQ9XCJzcGFya2xpbmUtNDM2MjE2OTkyXCIgeD1cIjBcIiB5PVwiMFwiIHdpZHRoPVwiMTU1XCIgaGVpZ2h0PVwiMjhcIj5cbiAgICAgICAgPHBvbHlsaW5lIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgwLCAyOCkgc2NhbGUoMSwtMSlcIiBwb2ludHM9XCIwLDIyLjM3IDMsMTIuMDUgNiw3LjYzIDksMTUuNzQgMTIsMTcuMjEgMTUsMS43NCAxOCw5LjExIDIxLDYuODkgMjQsNi4xNiAyNywyMC44OSAzMCwxMS4zMiAzMyw1LjQyIDM2LDEwLjU4IDM5LDMuMjEgNDIsNS40MiA0NSw0LjY4IDQ4LDIuNDY5OTk5OTk5OTk5OTk5OCA1MSw5Ljg0IDU0LDEuNzQgNTcsMTIuNzkgNjAsMjEuNjMgNjMsMy4yMSA2NiwzLjIxIDY5LDQuNjggNzIsNy42MyA3NSw2Ljg5IDc4LDIuNDY5OTk5OTk5OTk5OTk5OCA4MSw2Ljg5IDg0LDIuNDY5OTk5OTk5OTk5OTk5OCA4NywzLjk1IDkwLDQuNjggOTMsMi40Njk5OTk5OTk5OTk5OTk4IDk2LDQuNjggOTksMTUuNzQgMTAyLDMuOTUgMTA1LDI5LjAgMTA4LDUuNDIgMTExLDUuNDIgMTE0LDIxLjYzIDExNywxOS40MiAxMjAsMy4yMSAxMjMsNC42OCAxMjYsNC42OCAxMjksMjMuODQgMTMyLDYuODkgMTM1LDIzLjExIDEzOCwzLjIxIDE0MSwyLjQ2OTk5OTk5OTk5OTk5OTggMTQ0LDMuOTUgMTQ3LDEuNzQgMTUwLDUuNDIgMTUzLDMuMjEgXCIgZmlsbD1cInRyYW5zcGFyZW50XCIgc3Ryb2tlPVwiIzhjYzY2NVwiIHN0cm9rZS13aWR0aD1cIjJcIj5cbiAgICAgIDwvcG9seWxpbmU+PC9tYXNrPlxuICAgIDwvZGVmcz5cblxuICAgIDxnIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgwLCAyLjApXCI+XG4gICAgICA8cmVjdCB4PVwiMFwiIHk9XCItMlwiIHdpZHRoPVwiMTU1XCIgaGVpZ2h0PVwiMzBcIiBzdHlsZT1cInN0cm9rZTogbm9uZTsgZmlsbDogdXJsKCNncmFkaWVudC00MzYyMTY5OTIpOyBtYXNrOiB1cmwoI3NwYXJrbGluZS00MzYyMTY5OTIpXCI+PC9yZWN0PlxuICAgIDwvZz5cbiAgPC9zdmc+XG48L2Rpdj48L2E+PHRvb2wtdGlwIGlkPVwidG9vbHRpcC1jM2IyOGQ3OS1kNWExLTQwYWEtYTcwZS00NTFlMjZjM2E2YzlcIiBmb3I9XCJjb21taXQtYWN0aXZpdHktbGluay00MzYyMTY5OTJcIiBwb3BvdmVyPVwibWFudWFsXCIgZGF0YS1kaXJlY3Rpb249XCJzXCIgZGF0YS10eXBlPVwibGFiZWxcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwic3Itb25seSBwb3NpdGlvbi1hYnNvbHV0ZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHJvbGU9XCJ0b29sdGlwXCI+cmFpbHMvd2Vic2l0ZeKAmXMgcGFzdCB5ZWFyIG9mIGNvbW1pdCBhY3Rpdml0eTwvdG9vbC10aXA+PC9zcGFuPlxuPC9kaXY+XG4gICAgPGRpdiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiY29sb3ItZmctbXV0ZWQgZjZcIj5cblxuICAgICAgICA8c3BhbiBjbGFzcz1cIm1yLTNcIj5cbiAgPHNwYW4gY2xhc3M9XCJyZXBvLWxhbmd1YWdlLWNvbG9yXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiAjZTM0YzI2XCI+PC9zcGFuPlxuICA8c3BhbiBpdGVtcHJvcD1cInByb2dyYW1taW5nTGFuZ3VhZ2VcIj5IVE1MPC9zcGFuPlxuPC9zcGFuPlxuXG5cbiAgICAgICAgPGEgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7cHJvZmlsZXM6b3JnX3JlcG9zX2xpc3RfaXRlbSZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y2xpY2smcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGFyZ2V0OnN0YXJzJnF1b3Q7fVwiIGhyZWY9XCIvcmFpbHMvd2Vic2l0ZS9zdGFyZ2F6ZXJzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm5vLXdyYXAgTGluayBMaW5rLS1tdXRlZCBtci0zXCI+XG4gICAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tc3RhciBtci0xXCI+XG4gICAgPHBhdGggZD1cIk04IC4yNWEuNzUuNzUgMCAwIDEgLjY3My40MThsMS44ODIgMy44MTUgNC4yMS42MTJhLjc1Ljc1IDAgMCAxIC40MTYgMS4yNzlsLTMuMDQ2IDIuOTcuNzE5IDQuMTkyYS43NTEuNzUxIDAgMCAxLTEuMDg4Ljc5MUw4IDEyLjM0N2wtMy43NjYgMS45OGEuNzUuNzUgMCAwIDEtMS4wODgtLjc5bC43Mi00LjE5NEwuODE4IDYuMzc0YS43NS43NSAwIDAgMSAuNDE2LTEuMjhsNC4yMS0uNjExTDcuMzI3LjY2OEEuNzUuNzUgMCAwIDEgOCAuMjVabTAgMi40NDVMNi42MTUgNS41YS43NS43NSAwIDAgMS0uNTY0LjQxbC0zLjA5Ny40NSAyLjI0IDIuMTg0YS43NS43NSAwIDAgMSAuMjE2LjY2NGwtLjUyOCAzLjA4NCAyLjc2OS0xLjQ1NmEuNzUuNzUgMCAwIDEgLjY5OCAwbDIuNzcgMS40NTYtLjUzLTMuMDg0YS43NS43NSAwIDAgMSAuMjE2LS42NjRsMi4yNC0yLjE4My0zLjA5Ni0uNDVhLjc1Ljc1IDAgMCAxLS41NjQtLjQxTDggMi42OTRaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgNjFcbjwvYT5cblxuICAgICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6Zm9ya3MmcXVvdDt9XCIgaHJlZj1cIi9yYWlscy93ZWJzaXRlL2ZvcmtzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxpbmsgTGluay0tbXV0ZWQgbXItM1wiPlxuICAgICAgICAgIDxzdmcgYXJpYS1sYWJlbD1cImZvcmtcIiByb2xlPVwiaW1nXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLXJlcG8tZm9ya2VkIG1yLTFcIj5cbiAgICA8cGF0aCBkPVwiTTUgNS4zNzJ2Ljg3OGMwIC40MTQuMzM2Ljc1Ljc1Ljc1aDQuNWEuNzUuNzUgMCAwIDAgLjc1LS43NXYtLjg3OGEyLjI1IDIuMjUgMCAxIDEgMS41IDB2Ljg3OGEyLjI1IDIuMjUgMCAwIDEtMi4yNSAyLjI1aC0xLjV2Mi4xMjhhMi4yNTEgMi4yNTEgMCAxIDEtMS41IDBWOC41aC0xLjVBMi4yNSAyLjI1IDAgMCAxIDMuNSA2LjI1di0uODc4YTIuMjUgMi4yNSAwIDEgMSAxLjUgMFpNNSAzLjI1YS43NS43NSAwIDEgMC0xLjUgMCAuNzUuNzUgMCAwIDAgMS41IDBabTYuNzUuNzVhLjc1Ljc1IDAgMSAwIDAtMS41Ljc1Ljc1IDAgMCAwIDAgMS41Wm0tMyA4Ljc1YS43NS43NSAwIDEgMC0xLjUgMCAuNzUuNzUgMCAwIDAgMS41IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgODNcbjwvYT5cbiAgICAgIDxhIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O3Byb2ZpbGVzOm9yZ19yZXBvc19saXN0X2l0ZW0mcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RhcmdldDppc3N1ZXMmcXVvdDt9XCIgaHJlZj1cIi9yYWlscy93ZWJzaXRlL2lzc3Vlc1wiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJuby13cmFwIExpbmsgTGluay0tbXV0ZWQgbXItM1wiPlxuICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1pc3N1ZS1vcGVuZWQgbXItMVwiPlxuICAgIDxwYXRoIGQ9XCJNOCA5LjVhMS41IDEuNSAwIDEgMCAwLTMgMS41IDEuNSAwIDAgMCAwIDNaXCI+PC9wYXRoPjxwYXRoIGQ9XCJNOCAwYTggOCAwIDEgMSAwIDE2QTggOCAwIDAgMSA4IDBaTTEuNSA4YTYuNSA2LjUgMCAxIDAgMTMgMCA2LjUgNi41IDAgMCAwLTEzIDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgIDJcbjwvYT5cblxuICAgICAgPGEgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7cHJvZmlsZXM6b3JnX3JlcG9zX2xpc3RfaXRlbSZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y2xpY2smcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGFyZ2V0OnB1bGxfcmVxdWVzdHMmcXVvdDt9XCIgaHJlZj1cIi9yYWlscy93ZWJzaXRlL3B1bGxzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm5vLXdyYXAgTGluayBMaW5rLS1tdXRlZCBtci0zXCI+XG4gICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWdpdC1wdWxsLXJlcXVlc3QgbXItMVwiPlxuICAgIDxwYXRoIGQ9XCJNMS41IDMuMjVhMi4yNSAyLjI1IDAgMSAxIDMgMi4xMjJ2NS4yNTZhMi4yNTEgMi4yNTEgMCAxIDEtMS41IDBWNS4zNzJBMi4yNSAyLjI1IDAgMCAxIDEuNSAzLjI1Wm01LjY3Ny0uMTc3TDkuNTczLjY3N0EuMjUuMjUgMCAwIDEgMTAgLjg1NFYyLjVoMUEyLjUgMi41IDAgMCAxIDEzLjUgNXY1LjYyOGEyLjI1MSAyLjI1MSAwIDEgMS0xLjUgMFY1YTEgMSAwIDAgMC0xLTFoLTF2MS42NDZhLjI1LjI1IDAgMCAxLS40MjcuMTc3TDcuMTc3IDMuNDI3YS4yNS4yNSAwIDAgMSAwLS4zNTRaTTMuNzUgMi41YS43NS43NSAwIDEgMCAwIDEuNS43NS43NSAwIDAgMCAwLTEuNVptMCA5LjVhLjc1Ljc1IDAgMSAwIDAgMS41Ljc1Ljc1IDAgMCAwIDAtMS41Wm04LjI1Ljc1YS43NS43NSAwIDEgMCAxLjUgMCAuNzUuNzUgMCAwIDAtMS41IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgIDNcbjwvYT5cbiAgICAgIDxzcGFuIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJuby13cmFwXCI+XG4gICAgICAgICAgVXBkYXRlZCA8cmVsYXRpdmUtdGltZSBkYXRldGltZT1cIjIwMjQtMDctMjNUMTM6MTQ6NTlaXCIgY2xhc3M9XCJuby13cmFwXCIgdGl0bGU9XCJKdWwgMjMsIDIwMjQsIDEwOjE0IEFNIEdNVC0zXCI+SnVsIDIzLCAyMDI0PC9yZWxhdGl2ZS10aW1lPlxuPC9zcGFuPjwvZGl2PjwvZGl2PlxuPC9saT5cbiAgICAgICAgPGxpIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJCb3gtcm93XCI+ICAgICAgICAgIDxkaXYgaXRlbXByb3A9XCJvd25zXCIgaXRlbXR5cGU9XCJodHRwOi8vc2NoZW1hLm9yZy9Db2RlXCIgaXRlbXNjb3BlPVwiaXRlbXNjb3BlXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cInB1YmxpYyBzb3VyY2UgZC1ibG9ja1wiPlxuICBcbiAgICA8ZGl2IGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJkLWZsZXggZmxleC1qdXN0aWZ5LWJldHdlZW5cIj5cbiAgICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm1iLTEgZmxleC1hdXRvXCI+XG4gICAgICAgIDxhIGl0ZW1wcm9wPVwibmFtZSBjb2RlUmVwb3NpdG9yeVwiIGRhdGEtaG92ZXJjYXJkLXR5cGU9XCJyZXBvc2l0b3J5XCIgZGF0YS1ob3ZlcmNhcmQtdXJsPVwiL3JhaWxzL2J1aWxka2l0ZS1jb25maWcvaG92ZXJjYXJkXCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7cHJvZmlsZXM6b3JnX3JlcG9zX2xpc3RfaXRlbSZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y2xpY2smcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGFyZ2V0OnJlcG9fbndvJnF1b3Q7fVwiIGhyZWY9XCIvcmFpbHMvYnVpbGRraXRlLWNvbmZpZ1wiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMaW5rIGY0IGQtaW5saW5lLWJsb2NrIHRleHQtYm9sZCBtci0xXCI+XG4gICAgICAgICAgYnVpbGRraXRlLWNvbmZpZ1xuPC9hPlxuICAgICAgICA8c3BhbiB0aXRsZT1cIkxhYmVsOiBQdWJsaWNcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiTGFiZWwgTGFiZWwtLXNlY29uZGFyeSB2LWFsaWduLW1pZGRsZSBtbC0xIG1iLTFcIj5cbiAgICAgICAgICBQdWJsaWNcbjwvc3Bhbj5cblxuICAgICAgICAgIDxwIGl0ZW1wcm9wPVwiZGVzY3JpcHRpb25cIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiY29sb3ItZmctbXV0ZWQgbWItMyB3Yi1icmVhay13b3JkXCI+XG4gICAgICAgICAgICBGYWxsYmFjayBjb25maWd1cmF0aW9uIGZvciBicmFuY2hlcyB0aGF0IGxhY2sgYSAuYnVpbGRraXRlLyBkaXJlY3RvcnlcbjwvcD48L2Rpdj5cbiAgICAgIDxzcGFuIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJwb3NpdGlvbi1yZWxhdGl2ZVwiPjxhIGlkPVwiY29tbWl0LWFjdGl2aXR5LWxpbmstMTY5MjM5NDU0XCIgaHJlZj1cIi9yYWlscy9idWlsZGtpdGUtY29uZmlnL2dyYXBocy9jb21taXQtYWN0aXZpdHlcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiTGluayBkLWlubGluZS1ibG9ja1wiIGFyaWEtbGFiZWxsZWRieT1cInRvb2x0aXAtZGYyMzAzMDctZmMyNy00YmUwLWE5NmItMmU1NzFjZDQ1YjlmXCI+XG4gICAgICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImZsZXgtaXRlbXMtY2VudGVyIGQtbm9uZSBkLW1kLWZsZXhcIj5cbiAgICAgICAgICBcbiAgPHN2ZyB3aWR0aD1cIjE1NVwiIGhlaWdodD1cIjMwXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+XG4gICAgPGRlZnM+XG4gICAgICA8bGluZWFyR3JhZGllbnQgaWQ9XCJncmFkaWVudC0xNjkyMzk0NTRcIiB4MT1cIjBcIiB4Mj1cIjBcIiB5MT1cIjFcIiB5Mj1cIjBcIj5cbiAgICAgICAgPHN0b3Agb2Zmc2V0PVwiMCVcIiBzdG9wLWNvbG9yPVwidmFyKC0tY29sb3ItY2FsZW5kYXItZ3JhcGgtZGF5LUwxLWJnKVwiPjwvc3RvcD5cbiAgICAgICAgPHN0b3Agb2Zmc2V0PVwiMTAlXCIgc3RvcC1jb2xvcj1cInZhcigtLWNvbG9yLWNhbGVuZGFyLWdyYXBoLWRheS1MMi1iZylcIj48L3N0b3A+XG4gICAgICAgIDxzdG9wIG9mZnNldD1cIjI1JVwiIHN0b3AtY29sb3I9XCJ2YXIoLS1jb2xvci1jYWxlbmRhci1ncmFwaC1kYXktTDMtYmcpXCI+PC9zdG9wPlxuICAgICAgICA8c3RvcCBvZmZzZXQ9XCI1MCVcIiBzdG9wLWNvbG9yPVwidmFyKC0tY29sb3ItY2FsZW5kYXItZ3JhcGgtZGF5LUw0LWJnKVwiPjwvc3RvcD5cbiAgICAgIDwvbGluZWFyR3JhZGllbnQ+XG4gICAgICA8bWFzayBpZD1cInNwYXJrbGluZS0xNjkyMzk0NTRcIiB4PVwiMFwiIHk9XCIwXCIgd2lkdGg9XCIxNTVcIiBoZWlnaHQ9XCIyOFwiPlxuICAgICAgICA8cG9seWxpbmUgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAsIDI4KSBzY2FsZSgxLC0xKVwiIHBvaW50cz1cIjAsMS4wIDMsMi4yNyA2LDEuMCA5LDEuMCAxMiwyLjkxIDE1LDIuMjcgMTgsMS4wIDIxLDEuMCAyNCwxLjAgMjcsMS4wIDMwLDEuMCAzMywyLjI3IDM2LDEuMCAzOSwxLjAgNDIsNi43MyA0NSwyOS4wIDQ4LDE3LjU1IDUxLDIuMjcgNTQsNi4wOSA1NywxLjAgNjAsMS4wIDYzLDIuMjcgNjYsMTMuMDkgNjksMS42NDAwMDAwMDAwMDAwMDAxIDcyLDQuMTggNzUsNS40NSA3OCwxLjY0MDAwMDAwMDAwMDAwMDEgODEsMS4wIDg0LDEuNjQwMDAwMDAwMDAwMDAwMSA4NywxNC4zNiA5MCwxLjY0MDAwMDAwMDAwMDAwMDEgOTMsMS4wIDk2LDcuMzYgOTksMy41NSAxMDIsMS42NDAwMDAwMDAwMDAwMDAxIDEwNSwxLjAgMTA4LDEuMCAxMTEsMTAuNTUgMTE0LDMuNTUgMTE3LDUuNDUgMTIwLDIuOTEgMTIzLDIuOTEgMTI2LDEuNjQwMDAwMDAwMDAwMDAwMSAxMjksMS4wIDEzMiwyLjI3IDEzNSwxLjAgMTM4LDIuMjcgMTQxLDguMCAxNDQsMS4wIDE0NywxLjY0MDAwMDAwMDAwMDAwMDEgMTUwLDEuMCAxNTMsMi4yNyBcIiBmaWxsPVwidHJhbnNwYXJlbnRcIiBzdHJva2U9XCIjOGNjNjY1XCIgc3Ryb2tlLXdpZHRoPVwiMlwiPlxuICAgICAgPC9wb2x5bGluZT48L21hc2s+XG4gICAgPC9kZWZzPlxuXG4gICAgPGcgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAsIDIuMClcIj5cbiAgICAgIDxyZWN0IHg9XCIwXCIgeT1cIi0yXCIgd2lkdGg9XCIxNTVcIiBoZWlnaHQ9XCIzMFwiIHN0eWxlPVwic3Ryb2tlOiBub25lOyBmaWxsOiB1cmwoI2dyYWRpZW50LTE2OTIzOTQ1NCk7IG1hc2s6IHVybCgjc3BhcmtsaW5lLTE2OTIzOTQ1NClcIj48L3JlY3Q+XG4gICAgPC9nPlxuICA8L3N2Zz5cbjwvZGl2PjwvYT48dG9vbC10aXAgaWQ9XCJ0b29sdGlwLWRmMjMwMzA3LWZjMjctNGJlMC1hOTZiLTJlNTcxY2Q0NWI5ZlwiIGZvcj1cImNvbW1pdC1hY3Rpdml0eS1saW5rLTE2OTIzOTQ1NFwiIHBvcG92ZXI9XCJtYW51YWxcIiBkYXRhLWRpcmVjdGlvbj1cInNcIiBkYXRhLXR5cGU9XCJsYWJlbFwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJzci1vbmx5IHBvc2l0aW9uLWFic29sdXRlXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgcm9sZT1cInRvb2x0aXBcIj5yYWlscy9idWlsZGtpdGUtY29uZmln4oCZcyBwYXN0IHllYXIgb2YgY29tbWl0IGFjdGl2aXR5PC90b29sLXRpcD48L3NwYW4+XG48L2Rpdj5cbiAgICA8ZGl2IGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJjb2xvci1mZy1tdXRlZCBmNlwiPlxuXG4gICAgICAgIDxzcGFuIGNsYXNzPVwibXItM1wiPlxuICA8c3BhbiBjbGFzcz1cInJlcG8tbGFuZ3VhZ2UtY29sb3JcIiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6ICM3MDE1MTZcIj48L3NwYW4+XG4gIDxzcGFuIGl0ZW1wcm9wPVwicHJvZ3JhbW1pbmdMYW5ndWFnZVwiPlJ1Ynk8L3NwYW4+XG48L3NwYW4+XG5cblxuICAgICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6c3RhcnMmcXVvdDt9XCIgaHJlZj1cIi9yYWlscy9idWlsZGtpdGUtY29uZmlnL3N0YXJnYXplcnNcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibm8td3JhcCBMaW5rIExpbmstLW11dGVkIG1yLTNcIj5cbiAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1zdGFyIG1yLTFcIj5cbiAgICA8cGF0aCBkPVwiTTggLjI1YS43NS43NSAwIDAgMSAuNjczLjQxOGwxLjg4MiAzLjgxNSA0LjIxLjYxMmEuNzUuNzUgMCAwIDEgLjQxNiAxLjI3OWwtMy4wNDYgMi45Ny43MTkgNC4xOTJhLjc1MS43NTEgMCAwIDEtMS4wODguNzkxTDggMTIuMzQ3bC0zLjc2NiAxLjk4YS43NS43NSAwIDAgMS0xLjA4OC0uNzlsLjcyLTQuMTk0TC44MTggNi4zNzRhLjc1Ljc1IDAgMCAxIC40MTYtMS4yOGw0LjIxLS42MTFMNy4zMjcuNjY4QS43NS43NSAwIDAgMSA4IC4yNVptMCAyLjQ0NUw2LjYxNSA1LjVhLjc1Ljc1IDAgMCAxLS41NjQuNDFsLTMuMDk3LjQ1IDIuMjQgMi4xODRhLjc1Ljc1IDAgMCAxIC4yMTYuNjY0bC0uNTI4IDMuMDg0IDIuNzY5LTEuNDU2YS43NS43NSAwIDAgMSAuNjk4IDBsMi43NyAxLjQ1Ni0uNTMtMy4wODRhLjc1Ljc1IDAgMCAxIC4yMTYtLjY2NGwyLjI0LTIuMTgzLTMuMDk2LS40NWEuNzUuNzUgMCAwIDEtLjU2NC0uNDFMOCAyLjY5NFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAxOFxuPC9hPlxuXG4gICAgICAgIDxhIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O3Byb2ZpbGVzOm9yZ19yZXBvc19saXN0X2l0ZW0mcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RhcmdldDpmb3JrcyZxdW90O31cIiBocmVmPVwiL3JhaWxzL2J1aWxka2l0ZS1jb25maWcvZm9ya3NcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiTGluayBMaW5rLS1tdXRlZCBtci0zXCI+XG4gICAgICAgICAgPHN2ZyBhcmlhLWxhYmVsPVwiZm9ya1wiIHJvbGU9XCJpbWdcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tcmVwby1mb3JrZWQgbXItMVwiPlxuICAgIDxwYXRoIGQ9XCJNNSA1LjM3MnYuODc4YzAgLjQxNC4zMzYuNzUuNzUuNzVoNC41YS43NS43NSAwIDAgMCAuNzUtLjc1di0uODc4YTIuMjUgMi4yNSAwIDEgMSAxLjUgMHYuODc4YTIuMjUgMi4yNSAwIDAgMS0yLjI1IDIuMjVoLTEuNXYyLjEyOGEyLjI1MSAyLjI1MSAwIDEgMS0xLjUgMFY4LjVoLTEuNUEyLjI1IDIuMjUgMCAwIDEgMy41IDYuMjV2LS44NzhhMi4yNSAyLjI1IDAgMSAxIDEuNSAwWk01IDMuMjVhLjc1Ljc1IDAgMSAwLTEuNSAwIC43NS43NSAwIDAgMCAxLjUgMFptNi43NS43NWEuNzUuNzUgMCAxIDAgMC0xLjUuNzUuNzUgMCAwIDAgMCAxLjVabS0zIDguNzVhLjc1Ljc1IDAgMSAwLTEuNSAwIC43NS43NSAwIDAgMCAxLjUgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAyM1xuPC9hPlxuICAgICAgPGEgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7cHJvZmlsZXM6b3JnX3JlcG9zX2xpc3RfaXRlbSZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y2xpY2smcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGFyZ2V0Omlzc3VlcyZxdW90O31cIiBocmVmPVwiL3JhaWxzL2J1aWxka2l0ZS1jb25maWcvaXNzdWVzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm5vLXdyYXAgTGluayBMaW5rLS1tdXRlZCBtci0zXCI+XG4gICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWlzc3VlLW9wZW5lZCBtci0xXCI+XG4gICAgPHBhdGggZD1cIk04IDkuNWExLjUgMS41IDAgMSAwIDAtMyAxLjUgMS41IDAgMCAwIDAgM1pcIj48L3BhdGg+PHBhdGggZD1cIk04IDBhOCA4IDAgMSAxIDAgMTZBOCA4IDAgMCAxIDggMFpNMS41IDhhNi41IDYuNSAwIDEgMCAxMyAwIDYuNSA2LjUgMCAwIDAtMTMgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgMFxuPC9hPlxuXG4gICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6cHVsbF9yZXF1ZXN0cyZxdW90O31cIiBocmVmPVwiL3JhaWxzL2J1aWxka2l0ZS1jb25maWcvcHVsbHNcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibm8td3JhcCBMaW5rIExpbmstLW11dGVkIG1yLTNcIj5cbiAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tZ2l0LXB1bGwtcmVxdWVzdCBtci0xXCI+XG4gICAgPHBhdGggZD1cIk0xLjUgMy4yNWEyLjI1IDIuMjUgMCAxIDEgMyAyLjEyMnY1LjI1NmEyLjI1MSAyLjI1MSAwIDEgMS0xLjUgMFY1LjM3MkEyLjI1IDIuMjUgMCAwIDEgMS41IDMuMjVabTUuNjc3LS4xNzdMOS41NzMuNjc3QS4yNS4yNSAwIDAgMSAxMCAuODU0VjIuNWgxQTIuNSAyLjUgMCAwIDEgMTMuNSA1djUuNjI4YTIuMjUxIDIuMjUxIDAgMSAxLTEuNSAwVjVhMSAxIDAgMCAwLTEtMWgtMXYxLjY0NmEuMjUuMjUgMCAwIDEtLjQyNy4xNzdMNy4xNzcgMy40MjdhLjI1LjI1IDAgMCAxIDAtLjM1NFpNMy43NSAyLjVhLjc1Ljc1IDAgMSAwIDAgMS41Ljc1Ljc1IDAgMCAwIDAtMS41Wm0wIDkuNWEuNzUuNzUgMCAxIDAgMCAxLjUuNzUuNzUgMCAwIDAgMC0xLjVabTguMjUuNzVhLjc1Ljc1IDAgMSAwIDEuNSAwIC43NS43NSAwIDAgMC0xLjUgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgNFxuPC9hPlxuICAgICAgPHNwYW4gZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm5vLXdyYXBcIj5cbiAgICAgICAgICBVcGRhdGVkIDxyZWxhdGl2ZS10aW1lIGRhdGV0aW1lPVwiMjAyNC0wNy0yM1QwOTo1NTo1NFpcIiBjbGFzcz1cIm5vLXdyYXBcIiB0aXRsZT1cIkp1bCAyMywgMjAyNCwgNjo1NSBBTSBHTVQtM1wiPkp1bCAyMywgMjAyNDwvcmVsYXRpdmUtdGltZT5cbjwvc3Bhbj48L2Rpdj48L2Rpdj5cbjwvbGk+XG4gICAgICAgIDxsaSBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiQm94LXJvd1wiPiAgICAgICAgICA8ZGl2IGl0ZW1wcm9wPVwib3duc1wiIGl0ZW10eXBlPVwiaHR0cDovL3NjaGVtYS5vcmcvQ29kZVwiIGl0ZW1zY29wZT1cIml0ZW1zY29wZVwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJwdWJsaWMgc291cmNlIGQtYmxvY2tcIj5cbiAgXG4gICAgPGRpdiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiZC1mbGV4IGZsZXgtanVzdGlmeS1iZXR3ZWVuXCI+XG4gICAgICA8ZGl2IGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJtYi0xIGZsZXgtYXV0b1wiPlxuICAgICAgICA8YSBpdGVtcHJvcD1cIm5hbWUgY29kZVJlcG9zaXRvcnlcIiBkYXRhLWhvdmVyY2FyZC10eXBlPVwicmVwb3NpdG9yeVwiIGRhdGEtaG92ZXJjYXJkLXVybD1cIi9yYWlscy9zcHJvY2tldHMvaG92ZXJjYXJkXCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7cHJvZmlsZXM6b3JnX3JlcG9zX2xpc3RfaXRlbSZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y2xpY2smcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGFyZ2V0OnJlcG9fbndvJnF1b3Q7fVwiIGhyZWY9XCIvcmFpbHMvc3Byb2NrZXRzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxpbmsgZjQgZC1pbmxpbmUtYmxvY2sgdGV4dC1ib2xkIG1yLTFcIj5cbiAgICAgICAgICBzcHJvY2tldHNcbjwvYT5cbiAgICAgICAgPHNwYW4gdGl0bGU9XCJMYWJlbDogUHVibGljXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxhYmVsIExhYmVsLS1zZWNvbmRhcnkgdi1hbGlnbi1taWRkbGUgbWwtMSBtYi0xXCI+XG4gICAgICAgICAgUHVibGljXG48L3NwYW4+XG5cbiAgICAgICAgICA8cCBpdGVtcHJvcD1cImRlc2NyaXB0aW9uXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImNvbG9yLWZnLW11dGVkIG1iLTMgd2ItYnJlYWstd29yZFwiPlxuICAgICAgICAgICAgUmFjay1iYXNlZCBhc3NldCBwYWNrYWdpbmcgc3lzdGVtXG48L3A+PC9kaXY+XG4gICAgICA8c3BhbiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwicG9zaXRpb24tcmVsYXRpdmVcIj48YSBpZD1cImNvbW1pdC1hY3Rpdml0eS1saW5rLTMyMTA0OTI0XCIgaHJlZj1cIi9yYWlscy9zcHJvY2tldHMvZ3JhcGhzL2NvbW1pdC1hY3Rpdml0eVwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMaW5rIGQtaW5saW5lLWJsb2NrXCIgYXJpYS1sYWJlbGxlZGJ5PVwidG9vbHRpcC1iZWY2OWE1NC0yMjVhLTQ0MmQtOWQ4MC00ODU3ZDY4OTk5M2NcIj5cbiAgICAgICAgPGRpdiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiZmxleC1pdGVtcy1jZW50ZXIgZC1ub25lIGQtbWQtZmxleFwiPlxuICAgICAgICAgIFxuICA8c3ZnIHdpZHRoPVwiMTU1XCIgaGVpZ2h0PVwiMzBcIiBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAgICA8ZGVmcz5cbiAgICAgIDxsaW5lYXJHcmFkaWVudCBpZD1cImdyYWRpZW50LTMyMTA0OTI0XCIgeDE9XCIwXCIgeDI9XCIwXCIgeTE9XCIxXCIgeTI9XCIwXCI+XG4gICAgICAgIDxzdG9wIG9mZnNldD1cIjAlXCIgc3RvcC1jb2xvcj1cInZhcigtLWNvbG9yLWNhbGVuZGFyLWdyYXBoLWRheS1MMS1iZylcIj48L3N0b3A+XG4gICAgICAgIDxzdG9wIG9mZnNldD1cIjEwJVwiIHN0b3AtY29sb3I9XCJ2YXIoLS1jb2xvci1jYWxlbmRhci1ncmFwaC1kYXktTDItYmcpXCI+PC9zdG9wPlxuICAgICAgICA8c3RvcCBvZmZzZXQ9XCIyNSVcIiBzdG9wLWNvbG9yPVwidmFyKC0tY29sb3ItY2FsZW5kYXItZ3JhcGgtZGF5LUwzLWJnKVwiPjwvc3RvcD5cbiAgICAgICAgPHN0b3Agb2Zmc2V0PVwiNTAlXCIgc3RvcC1jb2xvcj1cInZhcigtLWNvbG9yLWNhbGVuZGFyLWdyYXBoLWRheS1MNC1iZylcIj48L3N0b3A+XG4gICAgICA8L2xpbmVhckdyYWRpZW50PlxuICAgICAgPG1hc2sgaWQ9XCJzcGFya2xpbmUtMzIxMDQ5MjRcIiB4PVwiMFwiIHk9XCIwXCIgd2lkdGg9XCIxNTVcIiBoZWlnaHQ9XCIyOFwiPlxuICAgICAgICA8cG9seWxpbmUgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAsIDI4KSBzY2FsZSgxLC0xKVwiIHBvaW50cz1cIjAsNCAzLDEgNiwxIDksMSAxMiwxIDE1LDggMTgsMSAyMSwxIDI0LDEgMjcsMSAzMCwxIDMzLDEgMzYsMSAzOSwxIDQyLDEgNDUsMSA0OCwxIDUxLDEgNTQsMSA1NywxIDYwLDEgNjMsMSA2NiwxIDY5LDEgNzIsMSA3NSwxIDc4LDEgODEsMSA4NCwxIDg3LDEgOTAsMSA5MywxIDk2LDEgOTksMSAxMDIsMSAxMDUsMSAxMDgsMSAxMTEsMSAxMTQsMSAxMTcsMSAxMjAsMSAxMjMsMSAxMjYsMSAxMjksMSAxMzIsMSAxMzUsMSAxMzgsMSAxNDEsMSAxNDQsMSAxNDcsMSAxNTAsMSAxNTMsMyBcIiBmaWxsPVwidHJhbnNwYXJlbnRcIiBzdHJva2U9XCIjOGNjNjY1XCIgc3Ryb2tlLXdpZHRoPVwiMlwiPlxuICAgICAgPC9wb2x5bGluZT48L21hc2s+XG4gICAgPC9kZWZzPlxuXG4gICAgPGcgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAsIC05KVwiPlxuICAgICAgPHJlY3QgeD1cIjBcIiB5PVwiLTJcIiB3aWR0aD1cIjE1NVwiIGhlaWdodD1cIjMwXCIgc3R5bGU9XCJzdHJva2U6IG5vbmU7IGZpbGw6IHVybCgjZ3JhZGllbnQtMzIxMDQ5MjQpOyBtYXNrOiB1cmwoI3NwYXJrbGluZS0zMjEwNDkyNClcIj48L3JlY3Q+XG4gICAgPC9nPlxuICA8L3N2Zz5cbjwvZGl2PjwvYT48dG9vbC10aXAgaWQ9XCJ0b29sdGlwLWJlZjY5YTU0LTIyNWEtNDQyZC05ZDgwLTQ4NTdkNjg5OTkzY1wiIGZvcj1cImNvbW1pdC1hY3Rpdml0eS1saW5rLTMyMTA0OTI0XCIgcG9wb3Zlcj1cIm1hbnVhbFwiIGRhdGEtZGlyZWN0aW9uPVwic1wiIGRhdGEtdHlwZT1cImxhYmVsXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cInNyLW9ubHkgcG9zaXRpb24tYWJzb2x1dGVcIiBhcmlhLWhpZGRlbj1cInRydWVcIiByb2xlPVwidG9vbHRpcFwiPnJhaWxzL3Nwcm9ja2V0c+KAmXMgcGFzdCB5ZWFyIG9mIGNvbW1pdCBhY3Rpdml0eTwvdG9vbC10aXA+PC9zcGFuPlxuPC9kaXY+XG4gICAgPGRpdiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiY29sb3ItZmctbXV0ZWQgZjZcIj5cblxuICAgICAgICA8c3BhbiBjbGFzcz1cIm1yLTNcIj5cbiAgPHNwYW4gY2xhc3M9XCJyZXBvLWxhbmd1YWdlLWNvbG9yXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiAjNzAxNTE2XCI+PC9zcGFuPlxuICA8c3BhbiBpdGVtcHJvcD1cInByb2dyYW1taW5nTGFuZ3VhZ2VcIj5SdWJ5PC9zcGFuPlxuPC9zcGFuPlxuXG5cbiAgICAgICAgPGEgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7cHJvZmlsZXM6b3JnX3JlcG9zX2xpc3RfaXRlbSZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y2xpY2smcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGFyZ2V0OnN0YXJzJnF1b3Q7fVwiIGhyZWY9XCIvcmFpbHMvc3Byb2NrZXRzL3N0YXJnYXplcnNcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibm8td3JhcCBMaW5rIExpbmstLW11dGVkIG1yLTNcIj5cbiAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1zdGFyIG1yLTFcIj5cbiAgICA8cGF0aCBkPVwiTTggLjI1YS43NS43NSAwIDAgMSAuNjczLjQxOGwxLjg4MiAzLjgxNSA0LjIxLjYxMmEuNzUuNzUgMCAwIDEgLjQxNiAxLjI3OWwtMy4wNDYgMi45Ny43MTkgNC4xOTJhLjc1MS43NTEgMCAwIDEtMS4wODguNzkxTDggMTIuMzQ3bC0zLjc2NiAxLjk4YS43NS43NSAwIDAgMS0xLjA4OC0uNzlsLjcyLTQuMTk0TC44MTggNi4zNzRhLjc1Ljc1IDAgMCAxIC40MTYtMS4yOGw0LjIxLS42MTFMNy4zMjcuNjY4QS43NS43NSAwIDAgMSA4IC4yNVptMCAyLjQ0NUw2LjYxNSA1LjVhLjc1Ljc1IDAgMCAxLS41NjQuNDFsLTMuMDk3LjQ1IDIuMjQgMi4xODRhLjc1Ljc1IDAgMCAxIC4yMTYuNjY0bC0uNTI4IDMuMDg0IDIuNzY5LTEuNDU2YS43NS43NSAwIDAgMSAuNjk4IDBsMi43NyAxLjQ1Ni0uNTMtMy4wODRhLjc1Ljc1IDAgMCAxIC4yMTYtLjY2NGwyLjI0LTIuMTgzLTMuMDk2LS40NWEuNzUuNzUgMCAwIDEtLjU2NC0uNDFMOCAyLjY5NFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICA5MzNcbjwvYT5cbiAgICAgICAgPHNwYW4gZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm1yLTNcIj5cbiAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1sYXcgbXItMVwiPlxuICAgIDxwYXRoIGQ9XCJNOC43NS43NVYyaC45ODVjLjMwNCAwIC42MDMuMDguODY3LjIzMWwxLjI5LjczNmMuMDM4LjAyMi4wOC4wMzMuMTI0LjAzM2gyLjIzNGEuNzUuNzUgMCAwIDEgMCAxLjVoLS40MjdsMi4xMTEgNC42OTJhLjc1Ljc1IDAgMCAxLS4xNTQuODM4bC0uNTMtLjUzLjUyOS41MzEtLjAwMS4wMDItLjAwMi4wMDItLjAwNi4wMDYtLjAwNi4wMDUtLjAxLjAxLS4wNDUuMDRjLS4yMS4xNzYtLjQ0MS4zMjctLjY4Ni40NUMxNC41NTYgMTAuNzggMTMuODggMTEgMTMgMTFhNC40OTggNC40OTggMCAwIDEtMi4wMjMtLjQ1NCAzLjU0NCAzLjU0NCAwIDAgMS0uNjg2LS40NWwtLjA0NS0uMDQtLjAxNi0uMDE1LS4wMDYtLjAwNi0uMDA0LS4wMDR2LS4wMDFhLjc1Ljc1IDAgMCAxLS4xNTQtLjgzOEwxMi4xNzggNC41aC0uMTYyYy0uMzA1IDAtLjYwNC0uMDc5LS44NjgtLjIzMWwtMS4yOS0uNzM2YS4yNDUuMjQ1IDAgMCAwLS4xMjQtLjAzM0g4Ljc1VjEzaDIuNWEuNzUuNzUgMCAwIDEgMCAxLjVoLTYuNWEuNzUuNzUgMCAwIDEgMC0xLjVoMi41VjMuNWgtLjk4NGEuMjQ1LjI0NSAwIDAgMC0uMTI0LjAzM2wtMS4yODkuNzM3Yy0uMjY1LjE1LS41NjQuMjMtLjg2OS4yM2gtLjE2MmwyLjExMiA0LjY5MmEuNzUuNzUgMCAwIDEtLjE1NC44MzhsLS41My0uNTMuNTI5LjUzMS0uMDAxLjAwMi0uMDAyLjAwMi0uMDA2LjAwNi0uMDE2LjAxNS0uMDQ1LjA0Yy0uMjEuMTc2LS40NDEuMzI3LS42ODYuNDVDNC41NTYgMTAuNzggMy44OCAxMSAzIDExYTQuNDk4IDQuNDk4IDAgMCAxLTIuMDIzLS40NTQgMy41NDQgMy41NDQgMCAwIDEtLjY4Ni0uNDVsLS4wNDUtLjA0LS4wMTYtLjAxNS0uMDA2LS4wMDYtLjAwNC0uMDA0di0uMDAxYS43NS43NSAwIDAgMS0uMTU0LS44MzhMMi4xNzggNC41SDEuNzVhLjc1Ljc1IDAgMCAxIDAtMS41aDIuMjM0YS4yNDkuMjQ5IDAgMCAwIC4xMjUtLjAzM2wxLjI4OC0uNzM3Yy4yNjUtLjE1LjU2NC0uMjMuODY5LS4yM2guOTg0Vi43NWEuNzUuNzUgMCAwIDEgMS41IDBabTIuOTQ1IDguNDc3Yy4yODUuMTM1LjcxOC4yNzMgMS4zMDUuMjczczEuMDItLjEzOCAxLjMwNS0uMjczTDEzIDYuMzI3Wm0tMTAgMGMuMjg1LjEzNS43MTguMjczIDEuMzA1LjI3M3MxLjAyLS4xMzggMS4zMDUtLjI3M0wzIDYuMzI3WlwiPjwvcGF0aD5cbjwvc3ZnPk1JVFxuPC9zcGFuPlxuICAgICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6Zm9ya3MmcXVvdDt9XCIgaHJlZj1cIi9yYWlscy9zcHJvY2tldHMvZm9ya3NcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiTGluayBMaW5rLS1tdXRlZCBtci0zXCI+XG4gICAgICAgICAgPHN2ZyBhcmlhLWxhYmVsPVwiZm9ya1wiIHJvbGU9XCJpbWdcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tcmVwby1mb3JrZWQgbXItMVwiPlxuICAgIDxwYXRoIGQ9XCJNNSA1LjM3MnYuODc4YzAgLjQxNC4zMzYuNzUuNzUuNzVoNC41YS43NS43NSAwIDAgMCAuNzUtLjc1di0uODc4YTIuMjUgMi4yNSAwIDEgMSAxLjUgMHYuODc4YTIuMjUgMi4yNSAwIDAgMS0yLjI1IDIuMjVoLTEuNXYyLjEyOGEyLjI1MSAyLjI1MSAwIDEgMS0xLjUgMFY4LjVoLTEuNUEyLjI1IDIuMjUgMCAwIDEgMy41IDYuMjV2LS44NzhhMi4yNSAyLjI1IDAgMSAxIDEuNSAwWk01IDMuMjVhLjc1Ljc1IDAgMSAwLTEuNSAwIC43NS43NSAwIDAgMCAxLjUgMFptNi43NS43NWEuNzUuNzUgMCAxIDAgMC0xLjUuNzUuNzUgMCAwIDAgMCAxLjVabS0zIDguNzVhLjc1Ljc1IDAgMSAwLTEuNSAwIC43NS43NSAwIDAgMCAxLjUgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICA3OTFcbjwvYT5cbiAgICAgIDxhIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O3Byb2ZpbGVzOm9yZ19yZXBvc19saXN0X2l0ZW0mcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RhcmdldDppc3N1ZXMmcXVvdDt9XCIgaHJlZj1cIi9yYWlscy9zcHJvY2tldHMvaXNzdWVzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm5vLXdyYXAgTGluayBMaW5rLS1tdXRlZCBtci0zXCI+XG4gICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWlzc3VlLW9wZW5lZCBtci0xXCI+XG4gICAgPHBhdGggZD1cIk04IDkuNWExLjUgMS41IDAgMSAwIDAtMyAxLjUgMS41IDAgMCAwIDAgM1pcIj48L3BhdGg+PHBhdGggZD1cIk04IDBhOCA4IDAgMSAxIDAgMTZBOCA4IDAgMCAxIDggMFpNMS41IDhhNi41IDYuNSAwIDEgMCAxMyAwIDYuNSA2LjUgMCAwIDAtMTMgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgODRcbjwvYT5cblxuICAgICAgPGEgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7cHJvZmlsZXM6b3JnX3JlcG9zX2xpc3RfaXRlbSZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y2xpY2smcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGFyZ2V0OnB1bGxfcmVxdWVzdHMmcXVvdDt9XCIgaHJlZj1cIi9yYWlscy9zcHJvY2tldHMvcHVsbHNcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibm8td3JhcCBMaW5rIExpbmstLW11dGVkIG1yLTNcIj5cbiAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tZ2l0LXB1bGwtcmVxdWVzdCBtci0xXCI+XG4gICAgPHBhdGggZD1cIk0xLjUgMy4yNWEyLjI1IDIuMjUgMCAxIDEgMyAyLjEyMnY1LjI1NmEyLjI1MSAyLjI1MSAwIDEgMS0xLjUgMFY1LjM3MkEyLjI1IDIuMjUgMCAwIDEgMS41IDMuMjVabTUuNjc3LS4xNzdMOS41NzMuNjc3QS4yNS4yNSAwIDAgMSAxMCAuODU0VjIuNWgxQTIuNSAyLjUgMCAwIDEgMTMuNSA1djUuNjI4YTIuMjUxIDIuMjUxIDAgMSAxLTEuNSAwVjVhMSAxIDAgMCAwLTEtMWgtMXYxLjY0NmEuMjUuMjUgMCAwIDEtLjQyNy4xNzdMNy4xNzcgMy40MjdhLjI1LjI1IDAgMCAxIDAtLjM1NFpNMy43NSAyLjVhLjc1Ljc1IDAgMSAwIDAgMS41Ljc1Ljc1IDAgMCAwIDAtMS41Wm0wIDkuNWEuNzUuNzUgMCAxIDAgMCAxLjUuNzUuNzUgMCAwIDAgMC0xLjVabTguMjUuNzVhLjc1Ljc1IDAgMSAwIDEuNSAwIC43NS43NSAwIDAgMC0xLjUgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgMTBcbjwvYT5cbiAgICAgIDxzcGFuIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJuby13cmFwXCI+XG4gICAgICAgICAgVXBkYXRlZCA8cmVsYXRpdmUtdGltZSBkYXRldGltZT1cIjIwMjQtMDctMjJUMDc6MTA6MDNaXCIgY2xhc3M9XCJuby13cmFwXCIgdGl0bGU9XCJKdWwgMjIsIDIwMjQsIDQ6MTAgQU0gR01ULTNcIj5KdWwgMjIsIDIwMjQ8L3JlbGF0aXZlLXRpbWU+XG48L3NwYW4+PC9kaXY+PC9kaXY+XG48L2xpPlxuICAgICAgICA8bGkgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkJveC1yb3dcIj4gICAgICAgICAgPGRpdiBpdGVtcHJvcD1cIm93bnNcIiBpdGVtdHlwZT1cImh0dHA6Ly9zY2hlbWEub3JnL0NvZGVcIiBpdGVtc2NvcGU9XCJpdGVtc2NvcGVcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwicHVibGljIHNvdXJjZSBkLWJsb2NrXCI+XG4gIFxuICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImQtZmxleCBmbGV4LWp1c3RpZnktYmV0d2VlblwiPlxuICAgICAgPGRpdiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibWItMSBmbGV4LWF1dG9cIj5cbiAgICAgICAgPGEgaXRlbXByb3A9XCJuYW1lIGNvZGVSZXBvc2l0b3J5XCIgZGF0YS1ob3ZlcmNhcmQtdHlwZT1cInJlcG9zaXRvcnlcIiBkYXRhLWhvdmVyY2FyZC11cmw9XCIvcmFpbHMvbWFyY2VsL2hvdmVyY2FyZFwiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O3Byb2ZpbGVzOm9yZ19yZXBvc19saXN0X2l0ZW0mcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RhcmdldDpyZXBvX253byZxdW90O31cIiBocmVmPVwiL3JhaWxzL21hcmNlbFwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMaW5rIGY0IGQtaW5saW5lLWJsb2NrIHRleHQtYm9sZCBtci0xXCI+XG4gICAgICAgICAgbWFyY2VsXG48L2E+XG4gICAgICAgIDxzcGFuIHRpdGxlPVwiTGFiZWw6IFB1YmxpY1wiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMYWJlbCBMYWJlbC0tc2Vjb25kYXJ5IHYtYWxpZ24tbWlkZGxlIG1sLTEgbWItMVwiPlxuICAgICAgICAgIFB1YmxpY1xuPC9zcGFuPlxuXG4gICAgICAgICAgPHAgaXRlbXByb3A9XCJkZXNjcmlwdGlvblwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJjb2xvci1mZy1tdXRlZCBtYi0zIHdiLWJyZWFrLXdvcmRcIj5cbiAgICAgICAgICAgIEZpbmQgdGhlIG1pbWUgdHlwZSBvZiBmaWxlcywgZXhhbWluaW5nIGZpbGUsIGZpbGVuYW1lIGFuZCBkZWNsYXJlZCB0eXBlXG48L3A+PC9kaXY+XG4gICAgICA8c3BhbiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwicG9zaXRpb24tcmVsYXRpdmVcIj48YSBpZD1cImNvbW1pdC1hY3Rpdml0eS1saW5rLTgyODQ3MDQyXCIgaHJlZj1cIi9yYWlscy9tYXJjZWwvZ3JhcGhzL2NvbW1pdC1hY3Rpdml0eVwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMaW5rIGQtaW5saW5lLWJsb2NrXCIgYXJpYS1sYWJlbGxlZGJ5PVwidG9vbHRpcC00NGY2NDNiMi04ZmZjLTQ5MzUtOGJiOS1jZWQzODQ3ZDgwZWNcIj5cbiAgICAgICAgPGRpdiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiZmxleC1pdGVtcy1jZW50ZXIgZC1ub25lIGQtbWQtZmxleFwiPlxuICAgICAgICAgIFxuICA8c3ZnIHdpZHRoPVwiMTU1XCIgaGVpZ2h0PVwiMzBcIiBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAgICA8ZGVmcz5cbiAgICAgIDxsaW5lYXJHcmFkaWVudCBpZD1cImdyYWRpZW50LTgyODQ3MDQyXCIgeDE9XCIwXCIgeDI9XCIwXCIgeTE9XCIxXCIgeTI9XCIwXCI+XG4gICAgICAgIDxzdG9wIG9mZnNldD1cIjAlXCIgc3RvcC1jb2xvcj1cInZhcigtLWNvbG9yLWNhbGVuZGFyLWdyYXBoLWRheS1MMS1iZylcIj48L3N0b3A+XG4gICAgICAgIDxzdG9wIG9mZnNldD1cIjEwJVwiIHN0b3AtY29sb3I9XCJ2YXIoLS1jb2xvci1jYWxlbmRhci1ncmFwaC1kYXktTDItYmcpXCI+PC9zdG9wPlxuICAgICAgICA8c3RvcCBvZmZzZXQ9XCIyNSVcIiBzdG9wLWNvbG9yPVwidmFyKC0tY29sb3ItY2FsZW5kYXItZ3JhcGgtZGF5LUwzLWJnKVwiPjwvc3RvcD5cbiAgICAgICAgPHN0b3Agb2Zmc2V0PVwiNTAlXCIgc3RvcC1jb2xvcj1cInZhcigtLWNvbG9yLWNhbGVuZGFyLWdyYXBoLWRheS1MNC1iZylcIj48L3N0b3A+XG4gICAgICA8L2xpbmVhckdyYWRpZW50PlxuICAgICAgPG1hc2sgaWQ9XCJzcGFya2xpbmUtODI4NDcwNDJcIiB4PVwiMFwiIHk9XCIwXCIgd2lkdGg9XCIxNTVcIiBoZWlnaHQ9XCIyOFwiPlxuICAgICAgICA8cG9seWxpbmUgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAsIDI4KSBzY2FsZSgxLC0xKVwiIHBvaW50cz1cIjAsMSAzLDEgNiwxIDksMSAxMiwxIDE1LDEgMTgsMyAyMSwxIDI0LDEgMjcsMSAzMCwxIDMzLDEgMzYsMSAzOSwxIDQyLDEgNDUsMSA0OCwxIDUxLDEgNTQsMSA1NywxIDYwLDEgNjMsMSA2NiwxIDY5LDEgNzIsMSA3NSwxIDc4LDEgODEsMSA4NCwxIDg3LDEgOTAsMiA5MywxMyA5NiwyIDk5LDEgMTAyLDEgMTA1LDEgMTA4LDEgMTExLDEgMTE0LDEgMTE3LDEgMTIwLDEgMTIzLDEgMTI2LDEgMTI5LDEgMTMyLDEgMTM1LDEgMTM4LDEgMTQxLDEgMTQ0LDEgMTQ3LDEgMTUwLDEgMTUzLDEgXCIgZmlsbD1cInRyYW5zcGFyZW50XCIgc3Ryb2tlPVwiIzhjYzY2NVwiIHN0cm9rZS13aWR0aD1cIjJcIj5cbiAgICAgIDwvcG9seWxpbmU+PC9tYXNrPlxuICAgIDwvZGVmcz5cblxuICAgIDxnIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgwLCAtNilcIj5cbiAgICAgIDxyZWN0IHg9XCIwXCIgeT1cIi0yXCIgd2lkdGg9XCIxNTVcIiBoZWlnaHQ9XCIzMFwiIHN0eWxlPVwic3Ryb2tlOiBub25lOyBmaWxsOiB1cmwoI2dyYWRpZW50LTgyODQ3MDQyKTsgbWFzazogdXJsKCNzcGFya2xpbmUtODI4NDcwNDIpXCI+PC9yZWN0PlxuICAgIDwvZz5cbiAgPC9zdmc+XG48L2Rpdj48L2E+PHRvb2wtdGlwIGlkPVwidG9vbHRpcC00NGY2NDNiMi04ZmZjLTQ5MzUtOGJiOS1jZWQzODQ3ZDgwZWNcIiBmb3I9XCJjb21taXQtYWN0aXZpdHktbGluay04Mjg0NzA0MlwiIHBvcG92ZXI9XCJtYW51YWxcIiBkYXRhLWRpcmVjdGlvbj1cInNcIiBkYXRhLXR5cGU9XCJsYWJlbFwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJzci1vbmx5IHBvc2l0aW9uLWFic29sdXRlXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgcm9sZT1cInRvb2x0aXBcIj5yYWlscy9tYXJjZWzigJlzIHBhc3QgeWVhciBvZiBjb21taXQgYWN0aXZpdHk8L3Rvb2wtdGlwPjwvc3Bhbj5cbjwvZGl2PlxuICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImNvbG9yLWZnLW11dGVkIGY2XCI+XG5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJtci0zXCI+XG4gIDxzcGFuIGNsYXNzPVwicmVwby1sYW5ndWFnZS1jb2xvclwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogIzcwMTUxNlwiPjwvc3Bhbj5cbiAgPHNwYW4gaXRlbXByb3A9XCJwcm9ncmFtbWluZ0xhbmd1YWdlXCI+UnVieTwvc3Bhbj5cbjwvc3Bhbj5cblxuXG4gICAgICAgIDxhIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O3Byb2ZpbGVzOm9yZ19yZXBvc19saXN0X2l0ZW0mcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RhcmdldDpzdGFycyZxdW90O31cIiBocmVmPVwiL3JhaWxzL21hcmNlbC9zdGFyZ2F6ZXJzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm5vLXdyYXAgTGluayBMaW5rLS1tdXRlZCBtci0zXCI+XG4gICAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tc3RhciBtci0xXCI+XG4gICAgPHBhdGggZD1cIk04IC4yNWEuNzUuNzUgMCAwIDEgLjY3My40MThsMS44ODIgMy44MTUgNC4yMS42MTJhLjc1Ljc1IDAgMCAxIC40MTYgMS4yNzlsLTMuMDQ2IDIuOTcuNzE5IDQuMTkyYS43NTEuNzUxIDAgMCAxLTEuMDg4Ljc5MUw4IDEyLjM0N2wtMy43NjYgMS45OGEuNzUuNzUgMCAwIDEtMS4wODgtLjc5bC43Mi00LjE5NEwuODE4IDYuMzc0YS43NS43NSAwIDAgMSAuNDE2LTEuMjhsNC4yMS0uNjExTDcuMzI3LjY2OEEuNzUuNzUgMCAwIDEgOCAuMjVabTAgMi40NDVMNi42MTUgNS41YS43NS43NSAwIDAgMS0uNTY0LjQxbC0zLjA5Ny40NSAyLjI0IDIuMTg0YS43NS43NSAwIDAgMSAuMjE2LjY2NGwtLjUyOCAzLjA4NCAyLjc2OS0xLjQ1NmEuNzUuNzUgMCAwIDEgLjY5OCAwbDIuNzcgMS40NTYtLjUzLTMuMDg0YS43NS43NSAwIDAgMSAuMjE2LS42NjRsMi4yNC0yLjE4My0zLjA5Ni0uNDVhLjc1Ljc1IDAgMCAxLS41NjQtLjQxTDggMi42OTRaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgMzgwXG48L2E+XG4gICAgICAgIDxzcGFuIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJtci0zXCI+XG4gICAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tbGF3IG1yLTFcIj5cbiAgICA8cGF0aCBkPVwiTTguNzUuNzVWMmguOTg1Yy4zMDQgMCAuNjAzLjA4Ljg2Ny4yMzFsMS4yOS43MzZjLjAzOC4wMjIuMDguMDMzLjEyNC4wMzNoMi4yMzRhLjc1Ljc1IDAgMCAxIDAgMS41aC0uNDI3bDIuMTExIDQuNjkyYS43NS43NSAwIDAgMS0uMTU0LjgzOGwtLjUzLS41My41MjkuNTMxLS4wMDEuMDAyLS4wMDIuMDAyLS4wMDYuMDA2LS4wMDYuMDA1LS4wMS4wMS0uMDQ1LjA0Yy0uMjEuMTc2LS40NDEuMzI3LS42ODYuNDVDMTQuNTU2IDEwLjc4IDEzLjg4IDExIDEzIDExYTQuNDk4IDQuNDk4IDAgMCAxLTIuMDIzLS40NTQgMy41NDQgMy41NDQgMCAwIDEtLjY4Ni0uNDVsLS4wNDUtLjA0LS4wMTYtLjAxNS0uMDA2LS4wMDYtLjAwNC0uMDA0di0uMDAxYS43NS43NSAwIDAgMS0uMTU0LS44MzhMMTIuMTc4IDQuNWgtLjE2MmMtLjMwNSAwLS42MDQtLjA3OS0uODY4LS4yMzFsLTEuMjktLjczNmEuMjQ1LjI0NSAwIDAgMC0uMTI0LS4wMzNIOC43NVYxM2gyLjVhLjc1Ljc1IDAgMCAxIDAgMS41aC02LjVhLjc1Ljc1IDAgMCAxIDAtMS41aDIuNVYzLjVoLS45ODRhLjI0NS4yNDUgMCAwIDAtLjEyNC4wMzNsLTEuMjg5LjczN2MtLjI2NS4xNS0uNTY0LjIzLS44NjkuMjNoLS4xNjJsMi4xMTIgNC42OTJhLjc1Ljc1IDAgMCAxLS4xNTQuODM4bC0uNTMtLjUzLjUyOS41MzEtLjAwMS4wMDItLjAwMi4wMDItLjAwNi4wMDYtLjAxNi4wMTUtLjA0NS4wNGMtLjIxLjE3Ni0uNDQxLjMyNy0uNjg2LjQ1QzQuNTU2IDEwLjc4IDMuODggMTEgMyAxMWE0LjQ5OCA0LjQ5OCAwIDAgMS0yLjAyMy0uNDU0IDMuNTQ0IDMuNTQ0IDAgMCAxLS42ODYtLjQ1bC0uMDQ1LS4wNC0uMDE2LS4wMTUtLjAwNi0uMDA2LS4wMDQtLjAwNHYtLjAwMWEuNzUuNzUgMCAwIDEtLjE1NC0uODM4TDIuMTc4IDQuNUgxLjc1YS43NS43NSAwIDAgMSAwLTEuNWgyLjIzNGEuMjQ5LjI0OSAwIDAgMCAuMTI1LS4wMzNsMS4yODgtLjczN2MuMjY1LS4xNS41NjQtLjIzLjg2OS0uMjNoLjk4NFYuNzVhLjc1Ljc1IDAgMCAxIDEuNSAwWm0yLjk0NSA4LjQ3N2MuMjg1LjEzNS43MTguMjczIDEuMzA1LjI3M3MxLjAyLS4xMzggMS4zMDUtLjI3M0wxMyA2LjMyN1ptLTEwIDBjLjI4NS4xMzUuNzE4LjI3MyAxLjMwNS4yNzNzMS4wMi0uMTM4IDEuMzA1LS4yNzNMMyA2LjMyN1pcIj48L3BhdGg+XG48L3N2Zz5BcGFjaGUtMi4wXG48L3NwYW4+XG4gICAgICAgIDxhIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O3Byb2ZpbGVzOm9yZ19yZXBvc19saXN0X2l0ZW0mcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RhcmdldDpmb3JrcyZxdW90O31cIiBocmVmPVwiL3JhaWxzL21hcmNlbC9mb3Jrc1wiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMaW5rIExpbmstLW11dGVkIG1yLTNcIj5cbiAgICAgICAgICA8c3ZnIGFyaWEtbGFiZWw9XCJmb3JrXCIgcm9sZT1cImltZ1wiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1yZXBvLWZvcmtlZCBtci0xXCI+XG4gICAgPHBhdGggZD1cIk01IDUuMzcydi44NzhjMCAuNDE0LjMzNi43NS43NS43NWg0LjVhLjc1Ljc1IDAgMCAwIC43NS0uNzV2LS44NzhhMi4yNSAyLjI1IDAgMSAxIDEuNSAwdi44NzhhMi4yNSAyLjI1IDAgMCAxLTIuMjUgMi4yNWgtMS41djIuMTI4YTIuMjUxIDIuMjUxIDAgMSAxLTEuNSAwVjguNWgtMS41QTIuMjUgMi4yNSAwIDAgMSAzLjUgNi4yNXYtLjg3OGEyLjI1IDIuMjUgMCAxIDEgMS41IDBaTTUgMy4yNWEuNzUuNzUgMCAxIDAtMS41IDAgLjc1Ljc1IDAgMCAwIDEuNSAwWm02Ljc1Ljc1YS43NS43NSAwIDEgMCAwLTEuNS43NS43NSAwIDAgMCAwIDEuNVptLTMgOC43NWEuNzUuNzUgMCAxIDAtMS41IDAgLjc1Ljc1IDAgMCAwIDEuNSAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAgIDY2XG48L2E+XG4gICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6aXNzdWVzJnF1b3Q7fVwiIGhyZWY9XCIvcmFpbHMvbWFyY2VsL2lzc3Vlc1wiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJuby13cmFwIExpbmsgTGluay0tbXV0ZWQgbXItM1wiPlxuICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1pc3N1ZS1vcGVuZWQgbXItMVwiPlxuICAgIDxwYXRoIGQ9XCJNOCA5LjVhMS41IDEuNSAwIDEgMCAwLTMgMS41IDEuNSAwIDAgMCAwIDNaXCI+PC9wYXRoPjxwYXRoIGQ9XCJNOCAwYTggOCAwIDEgMSAwIDE2QTggOCAwIDAgMSA4IDBaTTEuNSA4YTYuNSA2LjUgMCAxIDAgMTMgMCA2LjUgNi41IDAgMCAwLTEzIDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgIDE0XG48L2E+XG5cbiAgICAgIDxhIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O3Byb2ZpbGVzOm9yZ19yZXBvc19saXN0X2l0ZW0mcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RhcmdldDpwdWxsX3JlcXVlc3RzJnF1b3Q7fVwiIGhyZWY9XCIvcmFpbHMvbWFyY2VsL3B1bGxzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm5vLXdyYXAgTGluayBMaW5rLS1tdXRlZCBtci0zXCI+XG4gICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWdpdC1wdWxsLXJlcXVlc3QgbXItMVwiPlxuICAgIDxwYXRoIGQ9XCJNMS41IDMuMjVhMi4yNSAyLjI1IDAgMSAxIDMgMi4xMjJ2NS4yNTZhMi4yNTEgMi4yNTEgMCAxIDEtMS41IDBWNS4zNzJBMi4yNSAyLjI1IDAgMCAxIDEuNSAzLjI1Wm01LjY3Ny0uMTc3TDkuNTczLjY3N0EuMjUuMjUgMCAwIDEgMTAgLjg1NFYyLjVoMUEyLjUgMi41IDAgMCAxIDEzLjUgNXY1LjYyOGEyLjI1MSAyLjI1MSAwIDEgMS0xLjUgMFY1YTEgMSAwIDAgMC0xLTFoLTF2MS42NDZhLjI1LjI1IDAgMCAxLS40MjcuMTc3TDcuMTc3IDMuNDI3YS4yNS4yNSAwIDAgMSAwLS4zNTRaTTMuNzUgMi41YS43NS43NSAwIDEgMCAwIDEuNS43NS43NSAwIDAgMCAwLTEuNVptMCA5LjVhLjc1Ljc1IDAgMSAwIDAgMS41Ljc1Ljc1IDAgMCAwIDAtMS41Wm04LjI1Ljc1YS43NS43NSAwIDEgMCAxLjUgMCAuNzUuNzUgMCAwIDAtMS41IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgIDVcbjwvYT5cbiAgICAgIDxzcGFuIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJuby13cmFwXCI+XG4gICAgICAgICAgVXBkYXRlZCA8cmVsYXRpdmUtdGltZSBkYXRldGltZT1cIjIwMjQtMDctMjBUMTU6MTM6MjFaXCIgY2xhc3M9XCJuby13cmFwXCIgdGl0bGU9XCJKdWwgMjAsIDIwMjQsIDEyOjEzIFBNIEdNVC0zXCI+SnVsIDIwLCAyMDI0PC9yZWxhdGl2ZS10aW1lPlxuPC9zcGFuPjwvZGl2PjwvZGl2PlxuPC9saT5cbiAgICAgICAgPGxpIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJCb3gtcm93XCI+ICAgICAgICAgIDxkaXYgaXRlbXByb3A9XCJvd25zXCIgaXRlbXR5cGU9XCJodHRwOi8vc2NoZW1hLm9yZy9Db2RlXCIgaXRlbXNjb3BlPVwiaXRlbXNjb3BlXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cInB1YmxpYyBzb3VyY2UgZC1ibG9ja1wiPlxuICBcbiAgICA8ZGl2IGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJkLWZsZXggZmxleC1qdXN0aWZ5LWJldHdlZW5cIj5cbiAgICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm1iLTEgZmxleC1hdXRvXCI+XG4gICAgICAgIDxhIGl0ZW1wcm9wPVwibmFtZSBjb2RlUmVwb3NpdG9yeVwiIGRhdGEtaG92ZXJjYXJkLXR5cGU9XCJyZXBvc2l0b3J5XCIgZGF0YS1ob3ZlcmNhcmQtdXJsPVwiL3JhaWxzL2ltcG9ydG1hcC1yYWlscy9ob3ZlcmNhcmRcIiBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6cmVwb19ud28mcXVvdDt9XCIgaHJlZj1cIi9yYWlscy9pbXBvcnRtYXAtcmFpbHNcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiTGluayBmNCBkLWlubGluZS1ibG9jayB0ZXh0LWJvbGQgbXItMVwiPlxuICAgICAgICAgIGltcG9ydG1hcC1yYWlsc1xuPC9hPlxuICAgICAgICA8c3BhbiB0aXRsZT1cIkxhYmVsOiBQdWJsaWNcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiTGFiZWwgTGFiZWwtLXNlY29uZGFyeSB2LWFsaWduLW1pZGRsZSBtbC0xIG1iLTFcIj5cbiAgICAgICAgICBQdWJsaWNcbjwvc3Bhbj5cblxuICAgICAgICAgIDxwIGl0ZW1wcm9wPVwiZGVzY3JpcHRpb25cIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiY29sb3ItZmctbXV0ZWQgbWItMyB3Yi1icmVhay13b3JkXCI+XG4gICAgICAgICAgICBVc2UgRVNNIHdpdGggaW1wb3J0bWFwIHRvIG1hbmFnZSBtb2Rlcm4gSmF2YVNjcmlwdCBpbiBSYWlscyB3aXRob3V0IHRyYW5zcGlsaW5nIG9yIGJ1bmRsaW5nLlxuPC9wPjwvZGl2PlxuICAgICAgPHNwYW4gZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cInBvc2l0aW9uLXJlbGF0aXZlXCI+PGEgaWQ9XCJjb21taXQtYWN0aXZpdHktbGluay0zOTA1NDgwOTNcIiBocmVmPVwiL3JhaWxzL2ltcG9ydG1hcC1yYWlscy9ncmFwaHMvY29tbWl0LWFjdGl2aXR5XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxpbmsgZC1pbmxpbmUtYmxvY2tcIiBhcmlhLWxhYmVsbGVkYnk9XCJ0b29sdGlwLWI3NGEzNjA5LTliZTMtNDEwYi1iNjUyLWVmYTkxYWY2MDhlMFwiPlxuICAgICAgICA8ZGl2IGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJmbGV4LWl0ZW1zLWNlbnRlciBkLW5vbmUgZC1tZC1mbGV4XCI+XG4gICAgICAgICAgXG4gIDxzdmcgd2lkdGg9XCIxNTVcIiBoZWlnaHQ9XCIzMFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxuICAgIDxkZWZzPlxuICAgICAgPGxpbmVhckdyYWRpZW50IGlkPVwiZ3JhZGllbnQtMzkwNTQ4MDkzXCIgeDE9XCIwXCIgeDI9XCIwXCIgeTE9XCIxXCIgeTI9XCIwXCI+XG4gICAgICAgIDxzdG9wIG9mZnNldD1cIjAlXCIgc3RvcC1jb2xvcj1cInZhcigtLWNvbG9yLWNhbGVuZGFyLWdyYXBoLWRheS1MMS1iZylcIj48L3N0b3A+XG4gICAgICAgIDxzdG9wIG9mZnNldD1cIjEwJVwiIHN0b3AtY29sb3I9XCJ2YXIoLS1jb2xvci1jYWxlbmRhci1ncmFwaC1kYXktTDItYmcpXCI+PC9zdG9wPlxuICAgICAgICA8c3RvcCBvZmZzZXQ9XCIyNSVcIiBzdG9wLWNvbG9yPVwidmFyKC0tY29sb3ItY2FsZW5kYXItZ3JhcGgtZGF5LUwzLWJnKVwiPjwvc3RvcD5cbiAgICAgICAgPHN0b3Agb2Zmc2V0PVwiNTAlXCIgc3RvcC1jb2xvcj1cInZhcigtLWNvbG9yLWNhbGVuZGFyLWdyYXBoLWRheS1MNC1iZylcIj48L3N0b3A+XG4gICAgICA8L2xpbmVhckdyYWRpZW50PlxuICAgICAgPG1hc2sgaWQ9XCJzcGFya2xpbmUtMzkwNTQ4MDkzXCIgeD1cIjBcIiB5PVwiMFwiIHdpZHRoPVwiMTU1XCIgaGVpZ2h0PVwiMjhcIj5cbiAgICAgICAgPHBvbHlsaW5lIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgwLCAyOCkgc2NhbGUoMSwtMSlcIiBwb2ludHM9XCIwLDEgMywxIDYsMSA5LDEgMTIsMSAxNSwxIDE4LDEgMjEsNCAyNCwxIDI3LDEgMzAsMSAzMywxIDM2LDEgMzksMTQgNDIsMSA0NSwxIDQ4LDEgNTEsNiA1NCw2IDU3LDEgNjAsMSA2MywxIDY2LDIwIDY5LDEgNzIsMSA3NSwzIDc4LDMgODEsMSA4NCw1IDg3LDEgOTAsMSA5MywyIDk2LDEgOTksMSAxMDIsMSAxMDUsMSAxMDgsMSAxMTEsMSAxMTQsNiAxMTcsMSAxMjAsMSAxMjMsMSAxMjYsMSAxMjksMSAxMzIsMSAxMzUsMSAxMzgsMSAxNDEsMSAxNDQsMSAxNDcsMSAxNTAsMSAxNTMsMSBcIiBmaWxsPVwidHJhbnNwYXJlbnRcIiBzdHJva2U9XCIjOGNjNjY1XCIgc3Ryb2tlLXdpZHRoPVwiMlwiPlxuICAgICAgPC9wb2x5bGluZT48L21hc2s+XG4gICAgPC9kZWZzPlxuXG4gICAgPGcgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAsIC0zKVwiPlxuICAgICAgPHJlY3QgeD1cIjBcIiB5PVwiLTJcIiB3aWR0aD1cIjE1NVwiIGhlaWdodD1cIjMwXCIgc3R5bGU9XCJzdHJva2U6IG5vbmU7IGZpbGw6IHVybCgjZ3JhZGllbnQtMzkwNTQ4MDkzKTsgbWFzazogdXJsKCNzcGFya2xpbmUtMzkwNTQ4MDkzKVwiPjwvcmVjdD5cbiAgICA8L2c+XG4gIDwvc3ZnPlxuPC9kaXY+PC9hPjx0b29sLXRpcCBpZD1cInRvb2x0aXAtYjc0YTM2MDktOWJlMy00MTBiLWI2NTItZWZhOTFhZjYwOGUwXCIgZm9yPVwiY29tbWl0LWFjdGl2aXR5LWxpbmstMzkwNTQ4MDkzXCIgcG9wb3Zlcj1cIm1hbnVhbFwiIGRhdGEtZGlyZWN0aW9uPVwic1wiIGRhdGEtdHlwZT1cImxhYmVsXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cInNyLW9ubHkgcG9zaXRpb24tYWJzb2x1dGVcIiBhcmlhLWhpZGRlbj1cInRydWVcIiByb2xlPVwidG9vbHRpcFwiPnJhaWxzL2ltcG9ydG1hcC1yYWlsc+KAmXMgcGFzdCB5ZWFyIG9mIGNvbW1pdCBhY3Rpdml0eTwvdG9vbC10aXA+PC9zcGFuPlxuPC9kaXY+XG4gICAgPGRpdiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiY29sb3ItZmctbXV0ZWQgZjZcIj5cblxuICAgICAgICA8c3BhbiBjbGFzcz1cIm1yLTNcIj5cbiAgPHNwYW4gY2xhc3M9XCJyZXBvLWxhbmd1YWdlLWNvbG9yXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiAjNzAxNTE2XCI+PC9zcGFuPlxuICA8c3BhbiBpdGVtcHJvcD1cInByb2dyYW1taW5nTGFuZ3VhZ2VcIj5SdWJ5PC9zcGFuPlxuPC9zcGFuPlxuXG5cbiAgICAgICAgPGEgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7cHJvZmlsZXM6b3JnX3JlcG9zX2xpc3RfaXRlbSZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y2xpY2smcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGFyZ2V0OnN0YXJzJnF1b3Q7fVwiIGhyZWY9XCIvcmFpbHMvaW1wb3J0bWFwLXJhaWxzL3N0YXJnYXplcnNcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibm8td3JhcCBMaW5rIExpbmstLW11dGVkIG1yLTNcIj5cbiAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1zdGFyIG1yLTFcIj5cbiAgICA8cGF0aCBkPVwiTTggLjI1YS43NS43NSAwIDAgMSAuNjczLjQxOGwxLjg4MiAzLjgxNSA0LjIxLjYxMmEuNzUuNzUgMCAwIDEgLjQxNiAxLjI3OWwtMy4wNDYgMi45Ny43MTkgNC4xOTJhLjc1MS43NTEgMCAwIDEtMS4wODguNzkxTDggMTIuMzQ3bC0zLjc2NiAxLjk4YS43NS43NSAwIDAgMS0xLjA4OC0uNzlsLjcyLTQuMTk0TC44MTggNi4zNzRhLjc1Ljc1IDAgMCAxIC40MTYtMS4yOGw0LjIxLS42MTFMNy4zMjcuNjY4QS43NS43NSAwIDAgMSA4IC4yNVptMCAyLjQ0NUw2LjYxNSA1LjVhLjc1Ljc1IDAgMCAxLS41NjQuNDFsLTMuMDk3LjQ1IDIuMjQgMi4xODRhLjc1Ljc1IDAgMCAxIC4yMTYuNjY0bC0uNTI4IDMuMDg0IDIuNzY5LTEuNDU2YS43NS43NSAwIDAgMSAuNjk4IDBsMi43NyAxLjQ1Ni0uNTMtMy4wODRhLjc1Ljc1IDAgMCAxIC4yMTYtLjY2NGwyLjI0LTIuMTgzLTMuMDk2LS40NWEuNzUuNzUgMCAwIDEtLjU2NC0uNDFMOCAyLjY5NFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAxLDAzMlxuPC9hPlxuICAgICAgICA8c3BhbiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibXItM1wiPlxuICAgICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWxhdyBtci0xXCI+XG4gICAgPHBhdGggZD1cIk04Ljc1Ljc1VjJoLjk4NWMuMzA0IDAgLjYwMy4wOC44NjcuMjMxbDEuMjkuNzM2Yy4wMzguMDIyLjA4LjAzMy4xMjQuMDMzaDIuMjM0YS43NS43NSAwIDAgMSAwIDEuNWgtLjQyN2wyLjExMSA0LjY5MmEuNzUuNzUgMCAwIDEtLjE1NC44MzhsLS41My0uNTMuNTI5LjUzMS0uMDAxLjAwMi0uMDAyLjAwMi0uMDA2LjAwNi0uMDA2LjAwNS0uMDEuMDEtLjA0NS4wNGMtLjIxLjE3Ni0uNDQxLjMyNy0uNjg2LjQ1QzE0LjU1NiAxMC43OCAxMy44OCAxMSAxMyAxMWE0LjQ5OCA0LjQ5OCAwIDAgMS0yLjAyMy0uNDU0IDMuNTQ0IDMuNTQ0IDAgMCAxLS42ODYtLjQ1bC0uMDQ1LS4wNC0uMDE2LS4wMTUtLjAwNi0uMDA2LS4wMDQtLjAwNHYtLjAwMWEuNzUuNzUgMCAwIDEtLjE1NC0uODM4TDEyLjE3OCA0LjVoLS4xNjJjLS4zMDUgMC0uNjA0LS4wNzktLjg2OC0uMjMxbC0xLjI5LS43MzZhLjI0NS4yNDUgMCAwIDAtLjEyNC0uMDMzSDguNzVWMTNoMi41YS43NS43NSAwIDAgMSAwIDEuNWgtNi41YS43NS43NSAwIDAgMSAwLTEuNWgyLjVWMy41aC0uOTg0YS4yNDUuMjQ1IDAgMCAwLS4xMjQuMDMzbC0xLjI4OS43MzdjLS4yNjUuMTUtLjU2NC4yMy0uODY5LjIzaC0uMTYybDIuMTEyIDQuNjkyYS43NS43NSAwIDAgMS0uMTU0LjgzOGwtLjUzLS41My41MjkuNTMxLS4wMDEuMDAyLS4wMDIuMDAyLS4wMDYuMDA2LS4wMTYuMDE1LS4wNDUuMDRjLS4yMS4xNzYtLjQ0MS4zMjctLjY4Ni40NUM0LjU1NiAxMC43OCAzLjg4IDExIDMgMTFhNC40OTggNC40OTggMCAwIDEtMi4wMjMtLjQ1NCAzLjU0NCAzLjU0NCAwIDAgMS0uNjg2LS40NWwtLjA0NS0uMDQtLjAxNi0uMDE1LS4wMDYtLjAwNi0uMDA0LS4wMDR2LS4wMDFhLjc1Ljc1IDAgMCAxLS4xNTQtLjgzOEwyLjE3OCA0LjVIMS43NWEuNzUuNzUgMCAwIDEgMC0xLjVoMi4yMzRhLjI0OS4yNDkgMCAwIDAgLjEyNS0uMDMzbDEuMjg4LS43MzdjLjI2NS0uMTUuNTY0LS4yMy44NjktLjIzaC45ODRWLjc1YS43NS43NSAwIDAgMSAxLjUgMFptMi45NDUgOC40NzdjLjI4NS4xMzUuNzE4LjI3MyAxLjMwNS4yNzNzMS4wMi0uMTM4IDEuMzA1LS4yNzNMMTMgNi4zMjdabS0xMCAwYy4yODUuMTM1LjcxOC4yNzMgMS4zMDUuMjczczEuMDItLjEzOCAxLjMwNS0uMjczTDMgNi4zMjdaXCI+PC9wYXRoPlxuPC9zdmc+TUlUXG48L3NwYW4+XG4gICAgICAgIDxhIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O3Byb2ZpbGVzOm9yZ19yZXBvc19saXN0X2l0ZW0mcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RhcmdldDpmb3JrcyZxdW90O31cIiBocmVmPVwiL3JhaWxzL2ltcG9ydG1hcC1yYWlscy9mb3Jrc1wiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMaW5rIExpbmstLW11dGVkIG1yLTNcIj5cbiAgICAgICAgICA8c3ZnIGFyaWEtbGFiZWw9XCJmb3JrXCIgcm9sZT1cImltZ1wiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1yZXBvLWZvcmtlZCBtci0xXCI+XG4gICAgPHBhdGggZD1cIk01IDUuMzcydi44NzhjMCAuNDE0LjMzNi43NS43NS43NWg0LjVhLjc1Ljc1IDAgMCAwIC43NS0uNzV2LS44NzhhMi4yNSAyLjI1IDAgMSAxIDEuNSAwdi44NzhhMi4yNSAyLjI1IDAgMCAxLTIuMjUgMi4yNWgtMS41djIuMTI4YTIuMjUxIDIuMjUxIDAgMSAxLTEuNSAwVjguNWgtMS41QTIuMjUgMi4yNSAwIDAgMSAzLjUgNi4yNXYtLjg3OGEyLjI1IDIuMjUgMCAxIDEgMS41IDBaTTUgMy4yNWEuNzUuNzUgMCAxIDAtMS41IDAgLjc1Ljc1IDAgMCAwIDEuNSAwWm02Ljc1Ljc1YS43NS43NSAwIDEgMCAwLTEuNS43NS43NSAwIDAgMCAwIDEuNVptLTMgOC43NWEuNzUuNzUgMCAxIDAtMS41IDAgLjc1Ljc1IDAgMCAwIDEuNSAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAgIDExMFxuPC9hPlxuICAgICAgPGEgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7cHJvZmlsZXM6b3JnX3JlcG9zX2xpc3RfaXRlbSZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y2xpY2smcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGFyZ2V0Omlzc3VlcyZxdW90O31cIiBocmVmPVwiL3JhaWxzL2ltcG9ydG1hcC1yYWlscy9pc3N1ZXNcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibm8td3JhcCBMaW5rIExpbmstLW11dGVkIG1yLTNcIj5cbiAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24taXNzdWUtb3BlbmVkIG1yLTFcIj5cbiAgICA8cGF0aCBkPVwiTTggOS41YTEuNSAxLjUgMCAxIDAgMC0zIDEuNSAxLjUgMCAwIDAgMCAzWlwiPjwvcGF0aD48cGF0aCBkPVwiTTggMGE4IDggMCAxIDEgMCAxNkE4IDggMCAwIDEgOCAwWk0xLjUgOGE2LjUgNi41IDAgMSAwIDEzIDAgNi41IDYuNSAwIDAgMC0xMyAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICAyMVxuPC9hPlxuXG4gICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6cHVsbF9yZXF1ZXN0cyZxdW90O31cIiBocmVmPVwiL3JhaWxzL2ltcG9ydG1hcC1yYWlscy9wdWxsc1wiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJuby13cmFwIExpbmsgTGluay0tbXV0ZWQgbXItM1wiPlxuICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1naXQtcHVsbC1yZXF1ZXN0IG1yLTFcIj5cbiAgICA8cGF0aCBkPVwiTTEuNSAzLjI1YTIuMjUgMi4yNSAwIDEgMSAzIDIuMTIydjUuMjU2YTIuMjUxIDIuMjUxIDAgMSAxLTEuNSAwVjUuMzcyQTIuMjUgMi4yNSAwIDAgMSAxLjUgMy4yNVptNS42NzctLjE3N0w5LjU3My42NzdBLjI1LjI1IDAgMCAxIDEwIC44NTRWMi41aDFBMi41IDIuNSAwIDAgMSAxMy41IDV2NS42MjhhMi4yNTEgMi4yNTEgMCAxIDEtMS41IDBWNWExIDEgMCAwIDAtMS0xaC0xdjEuNjQ2YS4yNS4yNSAwIDAgMS0uNDI3LjE3N0w3LjE3NyAzLjQyN2EuMjUuMjUgMCAwIDEgMC0uMzU0Wk0zLjc1IDIuNWEuNzUuNzUgMCAxIDAgMCAxLjUuNzUuNzUgMCAwIDAgMC0xLjVabTAgOS41YS43NS43NSAwIDEgMCAwIDEuNS43NS43NSAwIDAgMCAwLTEuNVptOC4yNS43NWEuNzUuNzUgMCAxIDAgMS41IDAgLjc1Ljc1IDAgMCAwLTEuNSAwWlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgICAgICA4XG48L2E+XG4gICAgICA8c3BhbiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibm8td3JhcFwiPlxuICAgICAgICAgIFVwZGF0ZWQgPHJlbGF0aXZlLXRpbWUgZGF0ZXRpbWU9XCIyMDI0LTA3LTE5VDA2OjQzOjA3WlwiIGNsYXNzPVwibm8td3JhcFwiIHRpdGxlPVwiSnVsIDE5LCAyMDI0LCAzOjQzIEFNIEdNVC0zXCI+SnVsIDE5LCAyMDI0PC9yZWxhdGl2ZS10aW1lPlxuPC9zcGFuPjwvZGl2PjwvZGl2PlxuPC9saT5cbiAgICAgICAgPGxpIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJCb3gtcm93XCI+ICAgICAgICAgIDxkaXYgaXRlbXByb3A9XCJvd25zXCIgaXRlbXR5cGU9XCJodHRwOi8vc2NoZW1hLm9yZy9Db2RlXCIgaXRlbXNjb3BlPVwiaXRlbXNjb3BlXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cInB1YmxpYyBzb3VyY2UgZC1ibG9ja1wiPlxuICBcbiAgICA8ZGl2IGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJkLWZsZXggZmxleC1qdXN0aWZ5LWJldHdlZW5cIj5cbiAgICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm1iLTEgZmxleC1hdXRvXCI+XG4gICAgICAgIDxhIGl0ZW1wcm9wPVwibmFtZSBjb2RlUmVwb3NpdG9yeVwiIGRhdGEtaG92ZXJjYXJkLXR5cGU9XCJyZXBvc2l0b3J5XCIgZGF0YS1ob3ZlcmNhcmQtdXJsPVwiL3JhaWxzL3RhaWx3aW5kY3NzLXJhaWxzL2hvdmVyY2FyZFwiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O3Byb2ZpbGVzOm9yZ19yZXBvc19saXN0X2l0ZW0mcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RhcmdldDpyZXBvX253byZxdW90O31cIiBocmVmPVwiL3JhaWxzL3RhaWx3aW5kY3NzLXJhaWxzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxpbmsgZjQgZC1pbmxpbmUtYmxvY2sgdGV4dC1ib2xkIG1yLTFcIj5cbiAgICAgICAgICB0YWlsd2luZGNzcy1yYWlsc1xuPC9hPlxuICAgICAgICA8c3BhbiB0aXRsZT1cIkxhYmVsOiBQdWJsaWNcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiTGFiZWwgTGFiZWwtLXNlY29uZGFyeSB2LWFsaWduLW1pZGRsZSBtbC0xIG1iLTFcIj5cbiAgICAgICAgICBQdWJsaWNcbjwvc3Bhbj5cblxuPC9kaXY+XG4gICAgICA8c3BhbiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwicG9zaXRpb24tcmVsYXRpdmVcIj48YSBpZD1cImNvbW1pdC1hY3Rpdml0eS1saW5rLTMyODEyODc4MFwiIGhyZWY9XCIvcmFpbHMvdGFpbHdpbmRjc3MtcmFpbHMvZ3JhcGhzL2NvbW1pdC1hY3Rpdml0eVwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJMaW5rIGQtaW5saW5lLWJsb2NrXCIgYXJpYS1sYWJlbGxlZGJ5PVwidG9vbHRpcC05MjZiODAzZi1iOTdiLTQ4NDItYmFkNS0yMjY4ZGRkMmNiYzlcIj5cbiAgICAgICAgPGRpdiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiZmxleC1pdGVtcy1jZW50ZXIgZC1ub25lIGQtbWQtZmxleFwiPlxuICAgICAgICAgIFxuICA8c3ZnIHdpZHRoPVwiMTU1XCIgaGVpZ2h0PVwiMzBcIiBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAgICA8ZGVmcz5cbiAgICAgIDxsaW5lYXJHcmFkaWVudCBpZD1cImdyYWRpZW50LTMyODEyODc4MFwiIHgxPVwiMFwiIHgyPVwiMFwiIHkxPVwiMVwiIHkyPVwiMFwiPlxuICAgICAgICA8c3RvcCBvZmZzZXQ9XCIwJVwiIHN0b3AtY29sb3I9XCJ2YXIoLS1jb2xvci1jYWxlbmRhci1ncmFwaC1kYXktTDEtYmcpXCI+PC9zdG9wPlxuICAgICAgICA8c3RvcCBvZmZzZXQ9XCIxMCVcIiBzdG9wLWNvbG9yPVwidmFyKC0tY29sb3ItY2FsZW5kYXItZ3JhcGgtZGF5LUwyLWJnKVwiPjwvc3RvcD5cbiAgICAgICAgPHN0b3Agb2Zmc2V0PVwiMjUlXCIgc3RvcC1jb2xvcj1cInZhcigtLWNvbG9yLWNhbGVuZGFyLWdyYXBoLWRheS1MMy1iZylcIj48L3N0b3A+XG4gICAgICAgIDxzdG9wIG9mZnNldD1cIjUwJVwiIHN0b3AtY29sb3I9XCJ2YXIoLS1jb2xvci1jYWxlbmRhci1ncmFwaC1kYXktTDQtYmcpXCI+PC9zdG9wPlxuICAgICAgPC9saW5lYXJHcmFkaWVudD5cbiAgICAgIDxtYXNrIGlkPVwic3BhcmtsaW5lLTMyODEyODc4MFwiIHg9XCIwXCIgeT1cIjBcIiB3aWR0aD1cIjE1NVwiIGhlaWdodD1cIjI4XCI+XG4gICAgICAgIDxwb2x5bGluZSB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoMCwgMjgpIHNjYWxlKDEsLTEpXCIgcG9pbnRzPVwiMCwxIDMsMSA2LDIgOSwxIDEyLDEgMTUsMSAxOCwxIDIxLDEgMjQsMiAyNywxIDMwLDEwIDMzLDEgMzYsMSAzOSw3IDQyLDEgNDUsMyA0OCwxIDUxLDEgNTQsOCA1Nyw0IDYwLDExIDYzLDEgNjYsOCA2OSwyOCA3MiwyIDc1LDEgNzgsMSA4MSw3IDg0LDEgODcsMSA5MCwyIDkzLDMgOTYsMSA5OSwxIDEwMiwxIDEwNSwxIDEwOCw1IDExMSwxIDExNCw3IDExNywyMSAxMjAsMyAxMjMsMSAxMjYsNyAxMjksMSAxMzIsNiAxMzUsMSAxMzgsMSAxNDEsMSAxNDQsMSAxNDcsMSAxNTAsOCAxNTMsMSBcIiBmaWxsPVwidHJhbnNwYXJlbnRcIiBzdHJva2U9XCIjOGNjNjY1XCIgc3Ryb2tlLXdpZHRoPVwiMlwiPlxuICAgICAgPC9wb2x5bGluZT48L21hc2s+XG4gICAgPC9kZWZzPlxuXG4gICAgPGcgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAsIDEpXCI+XG4gICAgICA8cmVjdCB4PVwiMFwiIHk9XCItMlwiIHdpZHRoPVwiMTU1XCIgaGVpZ2h0PVwiMzBcIiBzdHlsZT1cInN0cm9rZTogbm9uZTsgZmlsbDogdXJsKCNncmFkaWVudC0zMjgxMjg3ODApOyBtYXNrOiB1cmwoI3NwYXJrbGluZS0zMjgxMjg3ODApXCI+PC9yZWN0PlxuICAgIDwvZz5cbiAgPC9zdmc+XG48L2Rpdj48L2E+PHRvb2wtdGlwIGlkPVwidG9vbHRpcC05MjZiODAzZi1iOTdiLTQ4NDItYmFkNS0yMjY4ZGRkMmNiYzlcIiBmb3I9XCJjb21taXQtYWN0aXZpdHktbGluay0zMjgxMjg3ODBcIiBwb3BvdmVyPVwibWFudWFsXCIgZGF0YS1kaXJlY3Rpb249XCJzXCIgZGF0YS10eXBlPVwibGFiZWxcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwic3Itb25seSBwb3NpdGlvbi1hYnNvbHV0ZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHJvbGU9XCJ0b29sdGlwXCI+cmFpbHMvdGFpbHdpbmRjc3MtcmFpbHPigJlzIHBhc3QgeWVhciBvZiBjb21taXQgYWN0aXZpdHk8L3Rvb2wtdGlwPjwvc3Bhbj5cbjwvZGl2PlxuICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImNvbG9yLWZnLW11dGVkIGY2XCI+XG5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJtci0zXCI+XG4gIDxzcGFuIGNsYXNzPVwicmVwby1sYW5ndWFnZS1jb2xvclwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogIzcwMTUxNlwiPjwvc3Bhbj5cbiAgPHNwYW4gaXRlbXByb3A9XCJwcm9ncmFtbWluZ0xhbmd1YWdlXCI+UnVieTwvc3Bhbj5cbjwvc3Bhbj5cblxuXG4gICAgICAgIDxhIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O3Byb2ZpbGVzOm9yZ19yZXBvc19saXN0X2l0ZW0mcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RhcmdldDpzdGFycyZxdW90O31cIiBocmVmPVwiL3JhaWxzL3RhaWx3aW5kY3NzLXJhaWxzL3N0YXJnYXplcnNcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwibm8td3JhcCBMaW5rIExpbmstLW11dGVkIG1yLTNcIj5cbiAgICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1zdGFyIG1yLTFcIj5cbiAgICA8cGF0aCBkPVwiTTggLjI1YS43NS43NSAwIDAgMSAuNjczLjQxOGwxLjg4MiAzLjgxNSA0LjIxLjYxMmEuNzUuNzUgMCAwIDEgLjQxNiAxLjI3OWwtMy4wNDYgMi45Ny43MTkgNC4xOTJhLjc1MS43NTEgMCAwIDEtMS4wODguNzkxTDggMTIuMzQ3bC0zLjc2NiAxLjk4YS43NS43NSAwIDAgMS0xLjA4OC0uNzlsLjcyLTQuMTk0TC44MTggNi4zNzRhLjc1Ljc1IDAgMCAxIC40MTYtMS4yOGw0LjIxLS42MTFMNy4zMjcuNjY4QS43NS43NSAwIDAgMSA4IC4yNVptMCAyLjQ0NUw2LjYxNSA1LjVhLjc1Ljc1IDAgMCAxLS41NjQuNDFsLTMuMDk3LjQ1IDIuMjQgMi4xODRhLjc1Ljc1IDAgMCAxIC4yMTYuNjY0bC0uNTI4IDMuMDg0IDIuNzY5LTEuNDU2YS43NS43NSAwIDAgMSAuNjk4IDBsMi43NyAxLjQ1Ni0uNTMtMy4wODRhLjc1Ljc1IDAgMCAxIC4yMTYtLjY2NGwyLjI0LTIuMTgzLTMuMDk2LS40NWEuNzUuNzUgMCAwIDEtLjU2NC0uNDFMOCAyLjY5NFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgICAxLDM3MlxuPC9hPlxuXG4gICAgICAgIDxhIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O3Byb2ZpbGVzOm9yZ19yZXBvc19saXN0X2l0ZW0mcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2NsaWNrJnF1b3Q7LCZxdW90O2xhYmVsJnF1b3Q7OiZxdW90O3RhcmdldDpmb3JrcyZxdW90O31cIiBocmVmPVwiL3JhaWxzL3RhaWx3aW5kY3NzLXJhaWxzL2ZvcmtzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxpbmsgTGluay0tbXV0ZWQgbXItM1wiPlxuICAgICAgICAgIDxzdmcgYXJpYS1sYWJlbD1cImZvcmtcIiByb2xlPVwiaW1nXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLXJlcG8tZm9ya2VkIG1yLTFcIj5cbiAgICA8cGF0aCBkPVwiTTUgNS4zNzJ2Ljg3OGMwIC40MTQuMzM2Ljc1Ljc1Ljc1aDQuNWEuNzUuNzUgMCAwIDAgLjc1LS43NXYtLjg3OGEyLjI1IDIuMjUgMCAxIDEgMS41IDB2Ljg3OGEyLjI1IDIuMjUgMCAwIDEtMi4yNSAyLjI1aC0xLjV2Mi4xMjhhMi4yNTEgMi4yNTEgMCAxIDEtMS41IDBWOC41aC0xLjVBMi4yNSAyLjI1IDAgMCAxIDMuNSA2LjI1di0uODc4YTIuMjUgMi4yNSAwIDEgMSAxLjUgMFpNNSAzLjI1YS43NS43NSAwIDEgMC0xLjUgMCAuNzUuNzUgMCAwIDAgMS41IDBabTYuNzUuNzVhLjc1Ljc1IDAgMSAwIDAtMS41Ljc1Ljc1IDAgMCAwIDAgMS41Wm0tMyA4Ljc1YS43NS43NSAwIDEgMC0xLjUgMCAuNzUuNzUgMCAwIDAgMS41IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgICAgMTY1XG48L2E+XG4gICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6aXNzdWVzJnF1b3Q7fVwiIGhyZWY9XCIvcmFpbHMvdGFpbHdpbmRjc3MtcmFpbHMvaXNzdWVzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm5vLXdyYXAgTGluayBMaW5rLS1tdXRlZCBtci0zXCI+XG4gICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWlzc3VlLW9wZW5lZCBtci0xXCI+XG4gICAgPHBhdGggZD1cIk04IDkuNWExLjUgMS41IDAgMSAwIDAtMyAxLjUgMS41IDAgMCAwIDAgM1pcIj48L3BhdGg+PHBhdGggZD1cIk04IDBhOCA4IDAgMSAxIDAgMTZBOCA4IDAgMCAxIDggMFpNMS41IDhhNi41IDYuNSAwIDEgMCAxMyAwIDYuNSA2LjUgMCAwIDAtMTMgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICAgICAgNFxuPC9hPlxuXG4gICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtwcm9maWxlczpvcmdfcmVwb3NfbGlzdF9pdGVtJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6cHVsbF9yZXF1ZXN0cyZxdW90O31cIiBocmVmPVwiL3JhaWxzL3RhaWx3aW5kY3NzLXJhaWxzL3B1bGxzXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm5vLXdyYXAgTGluayBMaW5rLS1tdXRlZCBtci0zXCI+XG4gICAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWdpdC1wdWxsLXJlcXVlc3QgbXItMVwiPlxuICAgIDxwYXRoIGQ9XCJNMS41IDMuMjVhMi4yNSAyLjI1IDAgMSAxIDMgMi4xMjJ2NS4yNTZhMi4yNTEgMi4yNTEgMCAxIDEtMS41IDBWNS4zNzJBMi4yNSAyLjI1IDAgMCAxIDEuNSAzLjI1Wm01LjY3Ny0uMTc3TDkuNTczLjY3N0EuMjUuMjUgMCAwIDEgMTAgLjg1NFYyLjVoMUEyLjUgMi41IDAgMCAxIDEzLjUgNXY1LjYyOGEyLjI1MSAyLjI1MSAwIDEgMS0xLjUgMFY1YTEgMSAwIDAgMC0xLTFoLTF2MS42NDZhLjI1LjI1IDAgMCAxLS40MjcuMTc3TDcuMTc3IDMuNDI3YS4yNS4yNSAwIDAgMSAwLS4zNTRaTTMuNzUgMi41YS43NS43NSAwIDEgMCAwIDEuNS43NS43NSAwIDAgMCAwLTEuNVptMCA5LjVhLjc1Ljc1IDAgMSAwIDAgMS41Ljc1Ljc1IDAgMCAwIDAtMS41Wm04LjI1Ljc1YS43NS43NSAwIDEgMCAxLjUgMCAuNzUuNzUgMCAwIDAtMS41IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICAgIDJcbjwvYT5cbiAgICAgIDxzcGFuIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJuby13cmFwXCI+XG4gICAgICAgICAgVXBkYXRlZCA8cmVsYXRpdmUtdGltZSBkYXRldGltZT1cIjIwMjQtMDctMTZUMTY6MDY6MTFaXCIgY2xhc3M9XCJuby13cmFwXCIgdGl0bGU9XCJKdWwgMTYsIDIwMjQsIDE6MDYgUE0gR01ULTNcIj5KdWwgMTYsIDIwMjQ8L3JlbGF0aXZlLXRpbWU+XG48L3NwYW4+PC9kaXY+PC9kaXY+XG48L2xpPlxuPC91bD4gIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkJveC1mb290ZXIgY29sb3ItYmctc3VidGxlIHRleHQtY2VudGVyXCI+ICAgICAgICAgIDxhIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O3Byb2ZpbGVzOm9yZ19yZXBvc19saXN0JnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtjbGljayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0YXJnZXQ6dmlld19hbGxfcmVwb3NpdG9yaWVzJnF1b3Q7fVwiIGhyZWY9XCIvb3Jncy9yYWlscy9yZXBvc2l0b3JpZXM/dHlwZT1hbGxcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiTGluayBMaW5rLS1tdXRlZCB0ZXh0LWJvbGRcIj5WaWV3IGFsbCByZXBvc2l0b3JpZXM8L2E+XG48L2Rpdj5cbjwvZGl2PjwvZGl2PlxuXG5cbiAgICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PlxuPC9kaXY+XG5cblxuXG5cbiAgICAgICAgPC9kaXY+XG48L2Rpdj5cblxuICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cImZsZXgtc2hyaW5rLTAgY29sLTEyIGNvbC1tZC0zXCI+ICAgICAgICA8ZGl2IGNsYXNzPVwicHgtMyBweC1tZC0wXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGlkZS1zbSBoaWRlLW1kXCI+XG4gIFxuPC9kaXY+XG5cblxuXG5cblxuPGRpdiBjbGFzcz1cIm1iLTMgcGItM1wiPlxuICAgIDxkaXY+XG4gICAgPGRpdj5cbiAgICAgIDxhIGNsYXNzPVwiZC1ibG9jayBjb2xvci1mZy1kZWZhdWx0XCIgaHJlZj1cIi9vcmdzL3JhaWxzL3Blb3BsZVwiIGRhdGEtZ2EtY2xpY2s9XCJPcmdzLCBnbyB0byBwZW9wbGUsIGxvY2F0aW9uOnByb2ZpbGUgcGVvcGxlIG1vZHVsZTsgdGV4dDpQZW9wbGVcIj5cbiAgICAgICAgPGg0IGNsYXNzPVwiZjQgdGV4dC1ub3JtYWwgbWItM1wiPlBlb3BsZTwvaDQ+XG4gICAgICA8L2E+XG4gICAgICA8ZGl2IGNsYXNzPVwiY2xlYXJmaXggZC1mbGV4IGZsZXgtd3JhcFwiIHN0eWxlPVwibWFyZ2luOiAtMXB4XCI+XG4gICAgICAgICAgPGEgY2xhc3M9XCJtZW1iZXItYXZhdGFyXCIgZGF0YS1nYS1jbGljaz1cIk9yZ3MsIGdvIHRvIHBlcnNvbiwgbG9jYXRpb246cHJvZmlsZSBwZW9wbGUgbW9kdWxlOyB0ZXh0OnVzZXJuYW1lXCIgZGF0YS1ob3ZlcmNhcmQtdHlwZT1cInVzZXJcIiBkYXRhLWhvdmVyY2FyZC11cmw9XCIvdXNlcnMvd3ljYXRzL2hvdmVyY2FyZFwiIGRhdGEtb2N0by1jbGljaz1cImhvdmVyY2FyZC1saW5rLWNsaWNrXCIgZGF0YS1vY3RvLWRpbWVuc2lvbnM9XCJsaW5rX3R5cGU6c2VsZlwiIGhyZWY9XCIvd3ljYXRzXCI+XG4gICAgICAgICAgICA8aW1nIGNsYXNzPVwiYXZhdGFyIGF2YXRhci11c2VyXCIgc3JjPVwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzQ/cz03MCZhbXA7dj00XCIgd2lkdGg9XCIzNVwiIGhlaWdodD1cIjM1XCIgYWx0PVwiQHd5Y2F0c1wiPlxuPC9hPiAgICAgICAgICA8YSBjbGFzcz1cIm1lbWJlci1hdmF0YXJcIiBkYXRhLWdhLWNsaWNrPVwiT3JncywgZ28gdG8gcGVyc29uLCBsb2NhdGlvbjpwcm9maWxlIHBlb3BsZSBtb2R1bGU7IHRleHQ6dXNlcm5hbWVcIiBkYXRhLWhvdmVyY2FyZC10eXBlPVwidXNlclwiIGRhdGEtaG92ZXJjYXJkLXVybD1cIi91c2Vycy9pbmRpcmVjdC9ob3ZlcmNhcmRcIiBkYXRhLW9jdG8tY2xpY2s9XCJob3ZlcmNhcmQtbGluay1jbGlja1wiIGRhdGEtb2N0by1kaW1lbnNpb25zPVwibGlua190eXBlOnNlbGZcIiBocmVmPVwiL2luZGlyZWN0XCI+XG4gICAgICAgICAgICA8aW1nIGNsYXNzPVwiYXZhdGFyIGF2YXRhci11c2VyXCIgc3JjPVwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91Lzc4P3M9NzAmYW1wO3Y9NFwiIHdpZHRoPVwiMzVcIiBoZWlnaHQ9XCIzNVwiIGFsdD1cIkBpbmRpcmVjdFwiPlxuPC9hPiAgICAgICAgICA8YSBjbGFzcz1cIm1lbWJlci1hdmF0YXJcIiBkYXRhLWdhLWNsaWNrPVwiT3JncywgZ28gdG8gcGVyc29uLCBsb2NhdGlvbjpwcm9maWxlIHBlb3BsZSBtb2R1bGU7IHRleHQ6dXNlcm5hbWVcIiBkYXRhLWhvdmVyY2FyZC10eXBlPVwidXNlclwiIGRhdGEtaG92ZXJjYXJkLXVybD1cIi91c2Vycy9saWZvL2hvdmVyY2FyZFwiIGRhdGEtb2N0by1jbGljaz1cImhvdmVyY2FyZC1saW5rLWNsaWNrXCIgZGF0YS1vY3RvLWRpbWVuc2lvbnM9XCJsaW5rX3R5cGU6c2VsZlwiIGhyZWY9XCIvbGlmb1wiPlxuICAgICAgICAgICAgPGltZyBjbGFzcz1cImF2YXRhciBhdmF0YXItdXNlclwiIHNyYz1cImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS85MT9zPTcwJmFtcDt2PTRcIiB3aWR0aD1cIjM1XCIgaGVpZ2h0PVwiMzVcIiBhbHQ9XCJAbGlmb1wiPlxuPC9hPiAgICAgICAgICA8YSBjbGFzcz1cIm1lbWJlci1hdmF0YXJcIiBkYXRhLWdhLWNsaWNrPVwiT3JncywgZ28gdG8gcGVyc29uLCBsb2NhdGlvbjpwcm9maWxlIHBlb3BsZSBtb2R1bGU7IHRleHQ6dXNlcm5hbWVcIiBkYXRhLWhvdmVyY2FyZC10eXBlPVwidXNlclwiIGRhdGEtaG92ZXJjYXJkLXVybD1cIi91c2Vycy9OWktvei9ob3ZlcmNhcmRcIiBkYXRhLW9jdG8tY2xpY2s9XCJob3ZlcmNhcmQtbGluay1jbGlja1wiIGRhdGEtb2N0by1kaW1lbnNpb25zPVwibGlua190eXBlOnNlbGZcIiBocmVmPVwiL05aS296XCI+XG4gICAgICAgICAgICA8aW1nIGNsYXNzPVwiYXZhdGFyIGF2YXRhci11c2VyXCIgc3JjPVwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzE5Nz9zPTcwJmFtcDt2PTRcIiB3aWR0aD1cIjM1XCIgaGVpZ2h0PVwiMzVcIiBhbHQ9XCJATlpLb3pcIj5cbjwvYT4gICAgICAgICAgPGEgY2xhc3M9XCJtZW1iZXItYXZhdGFyXCIgZGF0YS1nYS1jbGljaz1cIk9yZ3MsIGdvIHRvIHBlcnNvbiwgbG9jYXRpb246cHJvZmlsZSBwZW9wbGUgbW9kdWxlOyB0ZXh0OnVzZXJuYW1lXCIgZGF0YS1ob3ZlcmNhcmQtdHlwZT1cInVzZXJcIiBkYXRhLWhvdmVyY2FyZC11cmw9XCIvdXNlcnMvamVyZW15L2hvdmVyY2FyZFwiIGRhdGEtb2N0by1jbGljaz1cImhvdmVyY2FyZC1saW5rLWNsaWNrXCIgZGF0YS1vY3RvLWRpbWVuc2lvbnM9XCJsaW5rX3R5cGU6c2VsZlwiIGhyZWY9XCIvamVyZW15XCI+XG4gICAgICAgICAgICA8aW1nIGNsYXNzPVwiYXZhdGFyIGF2YXRhci11c2VyXCIgc3JjPVwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzE5OT9zPTcwJmFtcDt2PTRcIiB3aWR0aD1cIjM1XCIgaGVpZ2h0PVwiMzVcIiBhbHQ9XCJAamVyZW15XCI+XG48L2E+ICAgICAgICAgIDxhIGNsYXNzPVwibWVtYmVyLWF2YXRhclwiIGRhdGEtZ2EtY2xpY2s9XCJPcmdzLCBnbyB0byBwZXJzb24sIGxvY2F0aW9uOnByb2ZpbGUgcGVvcGxlIG1vZHVsZTsgdGV4dDp1c2VybmFtZVwiIGRhdGEtaG92ZXJjYXJkLXR5cGU9XCJ1c2VyXCIgZGF0YS1ob3ZlcmNhcmQtdXJsPVwiL3VzZXJzL2tlZXJhbi9ob3ZlcmNhcmRcIiBkYXRhLW9jdG8tY2xpY2s9XCJob3ZlcmNhcmQtbGluay1jbGlja1wiIGRhdGEtb2N0by1kaW1lbnNpb25zPVwibGlua190eXBlOnNlbGZcIiBocmVmPVwiL2tlZXJhblwiPlxuICAgICAgICAgICAgPGltZyBjbGFzcz1cImF2YXRhciBhdmF0YXItdXNlclwiIHNyYz1cImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS84NDg/cz03MCZhbXA7dj00XCIgd2lkdGg9XCIzNVwiIGhlaWdodD1cIjM1XCIgYWx0PVwiQGtlZXJhblwiPlxuPC9hPiAgICAgICAgICA8YSBjbGFzcz1cIm1lbWJlci1hdmF0YXJcIiBkYXRhLWdhLWNsaWNrPVwiT3JncywgZ28gdG8gcGVyc29uLCBsb2NhdGlvbjpwcm9maWxlIHBlb3BsZSBtb2R1bGU7IHRleHQ6dXNlcm5hbWVcIiBkYXRhLWhvdmVyY2FyZC10eXBlPVwidXNlclwiIGRhdGEtaG92ZXJjYXJkLXVybD1cIi91c2Vycy9taXNsYXYvaG92ZXJjYXJkXCIgZGF0YS1vY3RvLWNsaWNrPVwiaG92ZXJjYXJkLWxpbmstY2xpY2tcIiBkYXRhLW9jdG8tZGltZW5zaW9ucz1cImxpbmtfdHlwZTpzZWxmXCIgaHJlZj1cIi9taXNsYXZcIj5cbiAgICAgICAgICAgIDxpbWcgY2xhc3M9XCJhdmF0YXIgYXZhdGFyLXVzZXJcIiBzcmM9XCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvODg3P3M9NzAmYW1wO3Y9NFwiIHdpZHRoPVwiMzVcIiBoZWlnaHQ9XCIzNVwiIGFsdD1cIkBtaXNsYXZcIj5cbjwvYT4gICAgICAgICAgPGEgY2xhc3M9XCJtZW1iZXItYXZhdGFyXCIgZGF0YS1nYS1jbGljaz1cIk9yZ3MsIGdvIHRvIHBlcnNvbiwgbG9jYXRpb246cHJvZmlsZSBwZW9wbGUgbW9kdWxlOyB0ZXh0OnVzZXJuYW1lXCIgZGF0YS1ob3ZlcmNhcmQtdHlwZT1cInVzZXJcIiBkYXRhLWhvdmVyY2FyZC11cmw9XCIvdXNlcnMvbWF0dGhld2QvaG92ZXJjYXJkXCIgZGF0YS1vY3RvLWNsaWNrPVwiaG92ZXJjYXJkLWxpbmstY2xpY2tcIiBkYXRhLW9jdG8tZGltZW5zaW9ucz1cImxpbmtfdHlwZTpzZWxmXCIgaHJlZj1cIi9tYXR0aGV3ZFwiPlxuICAgICAgICAgICAgPGltZyBjbGFzcz1cImF2YXRhciBhdmF0YXItdXNlclwiIHNyYz1cImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8xMDM0P3M9NzAmYW1wO3Y9NFwiIHdpZHRoPVwiMzVcIiBoZWlnaHQ9XCIzNVwiIGFsdD1cIkBtYXR0aGV3ZFwiPlxuPC9hPiAgICAgICAgICA8YSBjbGFzcz1cIm1lbWJlci1hdmF0YXJcIiBkYXRhLWdhLWNsaWNrPVwiT3JncywgZ28gdG8gcGVyc29uLCBsb2NhdGlvbjpwcm9maWxlIHBlb3BsZSBtb2R1bGU7IHRleHQ6dXNlcm5hbWVcIiBkYXRhLWhvdmVyY2FyZC10eXBlPVwidXNlclwiIGRhdGEtaG92ZXJjYXJkLXVybD1cIi91c2Vycy9qb25sZWlnaHRvbi9ob3ZlcmNhcmRcIiBkYXRhLW9jdG8tY2xpY2s9XCJob3ZlcmNhcmQtbGluay1jbGlja1wiIGRhdGEtb2N0by1kaW1lbnNpb25zPVwibGlua190eXBlOnNlbGZcIiBocmVmPVwiL2pvbmxlaWdodG9uXCI+XG4gICAgICAgICAgICA8aW1nIGNsYXNzPVwiYXZhdGFyIGF2YXRhci11c2VyXCIgc3JjPVwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzE5Nzk/cz03MCZhbXA7dj00XCIgd2lkdGg9XCIzNVwiIGhlaWdodD1cIjM1XCIgYWx0PVwiQGpvbmxlaWdodG9uXCI+XG48L2E+ICAgICAgICAgIDxhIGNsYXNzPVwibWVtYmVyLWF2YXRhclwiIGRhdGEtZ2EtY2xpY2s9XCJPcmdzLCBnbyB0byBwZXJzb24sIGxvY2F0aW9uOnByb2ZpbGUgcGVvcGxlIG1vZHVsZTsgdGV4dDp1c2VybmFtZVwiIGRhdGEtaG92ZXJjYXJkLXR5cGU9XCJ1c2VyXCIgZGF0YS1ob3ZlcmNhcmQtdXJsPVwiL3VzZXJzL2RoaC9ob3ZlcmNhcmRcIiBkYXRhLW9jdG8tY2xpY2s9XCJob3ZlcmNhcmQtbGluay1jbGlja1wiIGRhdGEtb2N0by1kaW1lbnNpb25zPVwibGlua190eXBlOnNlbGZcIiBocmVmPVwiL2RoaFwiPlxuICAgICAgICAgICAgPGltZyBjbGFzcz1cImF2YXRhciBhdmF0YXItdXNlclwiIHNyYz1cImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8yNzQxP3M9NzAmYW1wO3Y9NFwiIHdpZHRoPVwiMzVcIiBoZWlnaHQ9XCIzNVwiIGFsdD1cIkBkaGhcIj5cbjwvYT4gICAgICAgICAgPGEgY2xhc3M9XCJtZW1iZXItYXZhdGFyXCIgZGF0YS1nYS1jbGljaz1cIk9yZ3MsIGdvIHRvIHBlcnNvbiwgbG9jYXRpb246cHJvZmlsZSBwZW9wbGUgbW9kdWxlOyB0ZXh0OnVzZXJuYW1lXCIgZGF0YS1ob3ZlcmNhcmQtdHlwZT1cInVzZXJcIiBkYXRhLWhvdmVyY2FyZC11cmw9XCIvdXNlcnMvdGVuZGVybG92ZS9ob3ZlcmNhcmRcIiBkYXRhLW9jdG8tY2xpY2s9XCJob3ZlcmNhcmQtbGluay1jbGlja1wiIGRhdGEtb2N0by1kaW1lbnNpb25zPVwibGlua190eXBlOnNlbGZcIiBocmVmPVwiL3RlbmRlcmxvdmVcIj5cbiAgICAgICAgICAgIDxpbWcgY2xhc3M9XCJhdmF0YXIgYXZhdGFyLXVzZXJcIiBzcmM9XCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMzEyND9zPTcwJmFtcDt2PTRcIiB3aWR0aD1cIjM1XCIgaGVpZ2h0PVwiMzVcIiBhbHQ9XCJAdGVuZGVybG92ZVwiPlxuPC9hPiAgICAgICAgICA8YSBjbGFzcz1cIm1lbWJlci1hdmF0YXJcIiBkYXRhLWdhLWNsaWNrPVwiT3JncywgZ28gdG8gcGVyc29uLCBsb2NhdGlvbjpwcm9maWxlIHBlb3BsZSBtb2R1bGU7IHRleHQ6dXNlcm5hbWVcIiBkYXRhLWhvdmVyY2FyZC10eXBlPVwidXNlclwiIGRhdGEtaG92ZXJjYXJkLXVybD1cIi91c2Vycy9taWtlbC9ob3ZlcmNhcmRcIiBkYXRhLW9jdG8tY2xpY2s9XCJob3ZlcmNhcmQtbGluay1jbGlja1wiIGRhdGEtb2N0by1kaW1lbnNpb25zPVwibGlua190eXBlOnNlbGZcIiBocmVmPVwiL21pa2VsXCI+XG4gICAgICAgICAgICA8aW1nIGNsYXNzPVwiYXZhdGFyIGF2YXRhci11c2VyXCIgc3JjPVwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzMzNjY/cz03MCZhbXA7dj00XCIgd2lkdGg9XCIzNVwiIGhlaWdodD1cIjM1XCIgYWx0PVwiQG1pa2VsXCI+XG48L2E+ICAgICAgICAgIDxhIGNsYXNzPVwibWVtYmVyLWF2YXRhclwiIGRhdGEtZ2EtY2xpY2s9XCJPcmdzLCBnbyB0byBwZXJzb24sIGxvY2F0aW9uOnByb2ZpbGUgcGVvcGxlIG1vZHVsZTsgdGV4dDp1c2VybmFtZVwiIGRhdGEtaG92ZXJjYXJkLXR5cGU9XCJ1c2VyXCIgZGF0YS1ob3ZlcmNhcmQtdXJsPVwiL3VzZXJzL2Z4bi9ob3ZlcmNhcmRcIiBkYXRhLW9jdG8tY2xpY2s9XCJob3ZlcmNhcmQtbGluay1jbGlja1wiIGRhdGEtb2N0by1kaW1lbnNpb25zPVwibGlua190eXBlOnNlbGZcIiBocmVmPVwiL2Z4blwiPlxuICAgICAgICAgICAgPGltZyBjbGFzcz1cImF2YXRhciBhdmF0YXItdXNlclwiIHNyYz1cImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS8zMzg3P3M9NzAmYW1wO3Y9NFwiIHdpZHRoPVwiMzVcIiBoZWlnaHQ9XCIzNVwiIGFsdD1cIkBmeG5cIj5cbjwvYT4gICAgICAgICAgPGEgY2xhc3M9XCJtZW1iZXItYXZhdGFyXCIgZGF0YS1nYS1jbGljaz1cIk9yZ3MsIGdvIHRvIHBlcnNvbiwgbG9jYXRpb246cHJvZmlsZSBwZW9wbGUgbW9kdWxlOyB0ZXh0OnVzZXJuYW1lXCIgZGF0YS1ob3ZlcmNhcmQtdHlwZT1cInVzZXJcIiBkYXRhLWhvdmVyY2FyZC11cmw9XCIvdXNlcnMvYXJ1bmFndy9ob3ZlcmNhcmRcIiBkYXRhLW9jdG8tY2xpY2s9XCJob3ZlcmNhcmQtbGluay1jbGlja1wiIGRhdGEtb2N0by1kaW1lbnNpb25zPVwibGlua190eXBlOnNlbGZcIiBocmVmPVwiL2FydW5hZ3dcIj5cbiAgICAgICAgICAgIDxpbWcgY2xhc3M9XCJhdmF0YXIgYXZhdGFyLXVzZXJcIiBzcmM9XCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMzk0OD9zPTcwJmFtcDt2PTRcIiB3aWR0aD1cIjM1XCIgaGVpZ2h0PVwiMzVcIiBhbHQ9XCJAYXJ1bmFnd1wiPlxuPC9hPiAgICAgICAgICA8YSBjbGFzcz1cIm1lbWJlci1hdmF0YXJcIiBkYXRhLWdhLWNsaWNrPVwiT3JncywgZ28gdG8gcGVyc29uLCBsb2NhdGlvbjpwcm9maWxlIHBlb3BsZSBtb2R1bGU7IHRleHQ6dXNlcm5hbWVcIiBkYXRhLWhvdmVyY2FyZC10eXBlPVwidXNlclwiIGRhdGEtaG92ZXJjYXJkLXVybD1cIi91c2Vycy9zaWthY2h1L2hvdmVyY2FyZFwiIGRhdGEtb2N0by1jbGljaz1cImhvdmVyY2FyZC1saW5rLWNsaWNrXCIgZGF0YS1vY3RvLWRpbWVuc2lvbnM9XCJsaW5rX3R5cGU6c2VsZlwiIGhyZWY9XCIvc2lrYWNodVwiPlxuICAgICAgICAgICAgPGltZyBjbGFzcz1cImF2YXRhciBhdmF0YXItdXNlclwiIHNyYz1cImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS80OTEyP3M9NzAmYW1wO3Y9NFwiIHdpZHRoPVwiMzVcIiBoZWlnaHQ9XCIzNVwiIGFsdD1cIkBzaWthY2h1XCI+XG48L2E+ICAgICAgICAgIDxhIGNsYXNzPVwibWVtYmVyLWF2YXRhclwiIGRhdGEtZ2EtY2xpY2s9XCJPcmdzLCBnbyB0byBwZXJzb24sIGxvY2F0aW9uOnByb2ZpbGUgcGVvcGxlIG1vZHVsZTsgdGV4dDp1c2VybmFtZVwiIGRhdGEtaG92ZXJjYXJkLXR5cGU9XCJ1c2VyXCIgZGF0YS1ob3ZlcmNhcmQtdXJsPVwiL3VzZXJzL2Ryb2d1cy9ob3ZlcmNhcmRcIiBkYXRhLW9jdG8tY2xpY2s9XCJob3ZlcmNhcmQtbGluay1jbGlja1wiIGRhdGEtb2N0by1kaW1lbnNpb25zPVwibGlua190eXBlOnNlbGZcIiBocmVmPVwiL2Ryb2d1c1wiPlxuICAgICAgICAgICAgPGltZyBjbGFzcz1cImF2YXRhciBhdmF0YXItdXNlclwiIHNyYz1cImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS81MDA0P3M9NzAmYW1wO3Y9NFwiIHdpZHRoPVwiMzVcIiBoZWlnaHQ9XCIzNVwiIGFsdD1cIkBkcm9ndXNcIj5cbjwvYT4gICAgICAgICAgPGEgY2xhc3M9XCJtZW1iZXItYXZhdGFyXCIgZGF0YS1nYS1jbGljaz1cIk9yZ3MsIGdvIHRvIHBlcnNvbiwgbG9jYXRpb246cHJvZmlsZSBwZW9wbGUgbW9kdWxlOyB0ZXh0OnVzZXJuYW1lXCIgZGF0YS1ob3ZlcmNhcmQtdHlwZT1cInVzZXJcIiBkYXRhLWhvdmVyY2FyZC11cmw9XCIvdXNlcnMvc2VubnkvaG92ZXJjYXJkXCIgZGF0YS1vY3RvLWNsaWNrPVwiaG92ZXJjYXJkLWxpbmstY2xpY2tcIiBkYXRhLW9jdG8tZGltZW5zaW9ucz1cImxpbmtfdHlwZTpzZWxmXCIgaHJlZj1cIi9zZW5ueVwiPlxuICAgICAgICAgICAgPGltZyBjbGFzcz1cImF2YXRhciBhdmF0YXItdXNlclwiIHNyYz1cImh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS81NDAyP3M9NzAmYW1wO3Y9NFwiIHdpZHRoPVwiMzVcIiBoZWlnaHQ9XCIzNVwiIGFsdD1cIkBzZW5ueVwiPlxuPC9hPiAgICAgICAgICA8YSBjbGFzcz1cIm1lbWJlci1hdmF0YXJcIiBkYXRhLWdhLWNsaWNrPVwiT3JncywgZ28gdG8gcGVyc29uLCBsb2NhdGlvbjpwcm9maWxlIHBlb3BsZSBtb2R1bGU7IHRleHQ6dXNlcm5hbWVcIiBkYXRhLWhvdmVyY2FyZC10eXBlPVwidXNlclwiIGRhdGEtaG92ZXJjYXJkLXVybD1cIi91c2Vycy9mbGF2b3Jqb25lcy9ob3ZlcmNhcmRcIiBkYXRhLW9jdG8tY2xpY2s9XCJob3ZlcmNhcmQtbGluay1jbGlja1wiIGRhdGEtb2N0by1kaW1lbnNpb25zPVwibGlua190eXBlOnNlbGZcIiBocmVmPVwiL2ZsYXZvcmpvbmVzXCI+XG4gICAgICAgICAgICA8aW1nIGNsYXNzPVwiYXZhdGFyIGF2YXRhci11c2VyXCIgc3JjPVwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzgyMDc/cz03MCZhbXA7dj00XCIgd2lkdGg9XCIzNVwiIGhlaWdodD1cIjM1XCIgYWx0PVwiQGZsYXZvcmpvbmVzXCI+XG48L2E+ICAgICAgICAgIDxhIGNsYXNzPVwibWVtYmVyLWF2YXRhclwiIGRhdGEtZ2EtY2xpY2s9XCJPcmdzLCBnbyB0byBwZXJzb24sIGxvY2F0aW9uOnByb2ZpbGUgcGVvcGxlIG1vZHVsZTsgdGV4dDp1c2VybmFtZVwiIGRhdGEtaG92ZXJjYXJkLXR5cGU9XCJ1c2VyXCIgZGF0YS1ob3ZlcmNhcmQtdXJsPVwiL3VzZXJzL2NsYXVkaW9iL2hvdmVyY2FyZFwiIGRhdGEtb2N0by1jbGljaz1cImhvdmVyY2FyZC1saW5rLWNsaWNrXCIgZGF0YS1vY3RvLWRpbWVuc2lvbnM9XCJsaW5rX3R5cGU6c2VsZlwiIGhyZWY9XCIvY2xhdWRpb2JcIj5cbiAgICAgICAgICAgIDxpbWcgY2xhc3M9XCJhdmF0YXIgYXZhdGFyLXVzZXJcIiBzcmM9XCJodHRwczovL2F2YXRhcnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMTAwNzY/cz03MCZhbXA7dj00XCIgd2lkdGg9XCIzNVwiIGhlaWdodD1cIjM1XCIgYWx0PVwiQGNsYXVkaW9iXCI+XG48L2E+ICAgICAgICAgIDxhIGNsYXNzPVwibWVtYmVyLWF2YXRhclwiIGRhdGEtZ2EtY2xpY2s9XCJPcmdzLCBnbyB0byBwZXJzb24sIGxvY2F0aW9uOnByb2ZpbGUgcGVvcGxlIG1vZHVsZTsgdGV4dDp1c2VybmFtZVwiIGRhdGEtaG92ZXJjYXJkLXR5cGU9XCJ1c2VyXCIgZGF0YS1ob3ZlcmNhcmQtdXJsPVwiL3VzZXJzL21vcmdvdGgvaG92ZXJjYXJkXCIgZGF0YS1vY3RvLWNsaWNrPVwiaG92ZXJjYXJkLWxpbmstY2xpY2tcIiBkYXRhLW9jdG8tZGltZW5zaW9ucz1cImxpbmtfdHlwZTpzZWxmXCIgaHJlZj1cIi9tb3Jnb3RoXCI+XG4gICAgICAgICAgICA8aW1nIGNsYXNzPVwiYXZhdGFyIGF2YXRhci11c2VyXCIgc3JjPVwiaHR0cHM6Ly9hdmF0YXJzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzEwNzY2P3M9NzAmYW1wO3Y9NFwiIHdpZHRoPVwiMzVcIiBoZWlnaHQ9XCIzNVwiIGFsdD1cIkBtb3Jnb3RoXCI+XG48L2E+ICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm10LTJcIj5cbiAgICAgICAgICA8YSB0ZXh0PVwic21hbGxcIiBocmVmPVwiL29yZ3MvcmFpbHMvcGVvcGxlXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxpbmtcIj5cbiAgICAgICAgICAgIFZpZXcgYWxsXG48L2E+PC9kaXY+ICAgIDwvZGl2PlxuICA8L2Rpdj5cblxuPC9kaXY+XG5cbiAgXG5cblxuICAgIDxkaXYgY2xhc3M9XCJtYi0zIG15LTMgcHktMyBib3JkZXItdG9wXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiXCI+XG4gICAgICAgIDxoNCBjbGFzcz1cImY0IG1iLTIgdGV4dC1ub3JtYWxcIj5Ub3AgbGFuZ3VhZ2VzPC9oND5cbiAgICAgICAgICA8YSBjbGFzcz1cIm5vLXdyYXAgY29sb3ItZmctbXV0ZWQgZC1pbmxpbmUtYmxvY2sgTGluay0tbXV0ZWQgbXQtMlwiIGhyZWY9XCIvb3Jncy9yYWlscy9yZXBvc2l0b3JpZXM/bGFuZ3VhZ2U9cnVieSZhbXA7dHlwZT1hbGxcIj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibWwtMCBtci0yXCI+XG4gIDxzcGFuIGNsYXNzPVwicmVwby1sYW5ndWFnZS1jb2xvclwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogIzcwMTUxNlwiPjwvc3Bhbj5cbiAgPHNwYW4gaXRlbXByb3A9XCJwcm9ncmFtbWluZ0xhbmd1YWdlXCI+UnVieTwvc3Bhbj5cbjwvc3Bhbj5cblxuICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8YSBjbGFzcz1cIm5vLXdyYXAgY29sb3ItZmctbXV0ZWQgZC1pbmxpbmUtYmxvY2sgTGluay0tbXV0ZWQgbXQtMlwiIGhyZWY9XCIvb3Jncy9yYWlscy9yZXBvc2l0b3JpZXM/bGFuZ3VhZ2U9amF2YXNjcmlwdCZhbXA7dHlwZT1hbGxcIj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibWwtMCBtci0yXCI+XG4gIDxzcGFuIGNsYXNzPVwicmVwby1sYW5ndWFnZS1jb2xvclwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogI2YxZTA1YVwiPjwvc3Bhbj5cbiAgPHNwYW4gaXRlbXByb3A9XCJwcm9ncmFtbWluZ0xhbmd1YWdlXCI+SmF2YVNjcmlwdDwvc3Bhbj5cbjwvc3Bhbj5cblxuICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8YSBjbGFzcz1cIm5vLXdyYXAgY29sb3ItZmctbXV0ZWQgZC1pbmxpbmUtYmxvY2sgTGluay0tbXV0ZWQgbXQtMlwiIGhyZWY9XCIvb3Jncy9yYWlscy9yZXBvc2l0b3JpZXM/bGFuZ3VhZ2U9aHRtbCZhbXA7dHlwZT1hbGxcIj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibWwtMCBtci0yXCI+XG4gIDxzcGFuIGNsYXNzPVwicmVwby1sYW5ndWFnZS1jb2xvclwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjogI2UzNGMyNlwiPjwvc3Bhbj5cbiAgPHNwYW4gaXRlbXByb3A9XCJwcm9ncmFtbWluZ0xhbmd1YWdlXCI+SFRNTDwvc3Bhbj5cbjwvc3Bhbj5cblxuICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8YSBjbGFzcz1cIm5vLXdyYXAgY29sb3ItZmctbXV0ZWQgZC1pbmxpbmUtYmxvY2sgTGluay0tbXV0ZWQgbXQtMlwiIGhyZWY9XCIvb3Jncy9yYWlscy9yZXBvc2l0b3JpZXM/bGFuZ3VhZ2U9c2hlbGwmYW1wO3R5cGU9YWxsXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm1sLTAgbXItMlwiPlxuICA8c3BhbiBjbGFzcz1cInJlcG8tbGFuZ3VhZ2UtY29sb3JcIiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6ICM4OWUwNTFcIj48L3NwYW4+XG4gIDxzcGFuIGl0ZW1wcm9wPVwicHJvZ3JhbW1pbmdMYW5ndWFnZVwiPlNoZWxsPC9zcGFuPlxuPC9zcGFuPlxuXG4gICAgICAgICAgPC9hPlxuICAgICAgICAgIDxhIGNsYXNzPVwibm8td3JhcCBjb2xvci1mZy1tdXRlZCBkLWlubGluZS1ibG9jayBMaW5rLS1tdXRlZCBtdC0yXCIgaHJlZj1cIi9vcmdzL3JhaWxzL3JlcG9zaXRvcmllcz9sYW5ndWFnZT1ydXN0JmFtcDt0eXBlPWFsbFwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtbC0wIG1yLTJcIj5cbiAgPHNwYW4gY2xhc3M9XCJyZXBvLWxhbmd1YWdlLWNvbG9yXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOiAjZGVhNTg0XCI+PC9zcGFuPlxuICA8c3BhbiBpdGVtcHJvcD1cInByb2dyYW1taW5nTGFuZ3VhZ2VcIj5SdXN0PC9zcGFuPlxuPC9zcGFuPlxuXG4gICAgICAgICAgPC9hPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG5cbjxpbmNsdWRlLWZyYWdtZW50IHNyYz1cIi9vcmdzL3JhaWxzL3RvcGljcy9tb3N0X3VzZWQ/Y29udGV4dD1vdmVydmlld1wiIGFjY2VwdD1cInRleHQvZnJhZ21lbnQraHRtbFwiPlxuICA8ZGl2IGNsYXNzPVwibXktMyBweS0zIGJvcmRlci10b3BcIj5cbiAgICA8ZGl2PlxuICAgICAgPGg0IGNsYXNzPVwiZjQgbWItMiB0ZXh0LW5vcm1hbFwiPk1vc3QgdXNlZCB0b3BpY3M8L2g0PlxuICAgICAgPHA+TG9hZGluZ+KApjwvcD5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2luY2x1ZGUtZnJhZ21lbnQ+XG5cblxuICAgICAgICA8L2Rpdj5cbjwvZGl2PlxuPC9kaXY+PC9kaXY+XG48L2Rpdj5cblxuICAgICAgPC9tYWluPlxuICA8L2Rpdj5cblxuICAgICAgICAgIDxmb290ZXIgY2xhc3M9XCJmb290ZXIgcHQtOCBwYi02IGY2IGNvbG9yLWZnLW11dGVkIHAtcmVzcG9uc2l2ZVwiIHJvbGU9XCJjb250ZW50aW5mb1wiPlxuICA8aDIgY2xhc3M9XCJzci1vbmx5XCI+Rm9vdGVyPC9oMj5cblxuICBcblxuXG4gIDxkaXYgY2xhc3M9XCJkLWZsZXggZmxleC1qdXN0aWZ5LWNlbnRlciBmbGV4LWl0ZW1zLWNlbnRlciBmbGV4LWNvbHVtbi1yZXZlcnNlIGZsZXgtbGctcm93IGZsZXgtd3JhcCBmbGV4LWxnLW5vd3JhcFwiPlxuICAgIDxkaXYgY2xhc3M9XCJkLWZsZXggZmxleC1pdGVtcy1jZW50ZXIgZmxleC1zaHJpbmstMCBteC0yXCI+XG4gICAgICA8YSBhcmlhLWxhYmVsPVwiSG9tZXBhZ2VcIiB0aXRsZT1cIkdpdEh1YlwiIGNsYXNzPVwiZm9vdGVyLW9jdGljb24gbXItMlwiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb21cIj5cbiAgICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIyNFwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIyNFwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tbWFyay1naXRodWJcIj5cbiAgICA8cGF0aCBkPVwiTTggMGM0LjQyIDAgOCAzLjU4IDggOGE4LjAxMyA4LjAxMyAwIDAgMS01LjQ1IDcuNTljLS40LjA4LS41NS0uMTctLjU1LS4zOCAwLS4yNy4wMS0xLjEzLjAxLTIuMiAwLS43NS0uMjUtMS4yMy0uNTQtMS40OCAxLjc4LS4yIDMuNjUtLjg4IDMuNjUtMy45NSAwLS44OC0uMzEtMS41OS0uODItMi4xNS4wOC0uMi4zNi0xLjAyLS4wOC0yLjEyIDAgMC0uNjctLjIyLTIuMi44Mi0uNjQtLjE4LTEuMzItLjI3LTItLjI3LS42OCAwLTEuMzYuMDktMiAuMjctMS41My0xLjAzLTIuMi0uODItMi4yLS44Mi0uNDQgMS4xLS4xNiAxLjkyLS4wOCAyLjEyLS41MS41Ni0uODIgMS4yOC0uODIgMi4xNSAwIDMuMDYgMS44NiAzLjc1IDMuNjQgMy45NS0uMjMuMi0uNDQuNTUtLjUxIDEuMDctLjQ2LjIxLTEuNjEuNTUtMi4zMy0uNjYtLjE1LS4yNC0uNi0uODMtMS4yMy0uODItLjY3LjAxLS4yNy4zOC4wMS41My4zNC4xOS43My45LjgyIDEuMTMuMTYuNDUuNjggMS4zMSAyLjY5Ljk0IDAgLjY3LjAxIDEuMy4wMSAxLjQ5IDAgLjIxLS4xNS40NS0uNTUuMzhBNy45OTUgNy45OTUgMCAwIDEgMCA4YzAtNC40MiAzLjU4LTggOC04WlwiPjwvcGF0aD5cbjwvc3ZnPlxuPC9hPlxuICAgICAgPHNwYW4+XG4gICAgICAgIMKpIDIwMjQgR2l0SHViLCZuYnNwO0luYy5cbiAgICAgIDwvc3Bhbj5cbiAgICA8L2Rpdj5cblxuICAgIDxuYXYgYXJpYS1sYWJlbD1cIkZvb3RlclwiPlxuICAgICAgPGgzIGNsYXNzPVwic3Itb25seVwiIGlkPVwic3ItZm9vdGVyLWhlYWRpbmdcIj5Gb290ZXIgbmF2aWdhdGlvbjwvaDM+XG5cbiAgICAgIDx1bCBjbGFzcz1cImxpc3Qtc3R5bGUtbm9uZSBkLWZsZXggZmxleC1qdXN0aWZ5LWNlbnRlciBmbGV4LXdyYXAgbWItMiBtYi1sZy0wXCIgYXJpYS1sYWJlbGxlZGJ5PVwic3ItZm9vdGVyLWhlYWRpbmdcIj5cblxuICAgICAgICAgIDxsaSBjbGFzcz1cIm14LTJcIj5cbiAgICAgICAgICAgIDxhIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O0Zvb3RlciZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Z28gdG8gVGVybXMmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGV4dDp0ZXJtcyZxdW90O31cIiBocmVmPVwiaHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vc2l0ZS1wb2xpY3kvZ2l0aHViLXRlcm1zL2dpdGh1Yi10ZXJtcy1vZi1zZXJ2aWNlXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxpbmstLXNlY29uZGFyeSBMaW5rXCI+VGVybXM8L2E+XG4gICAgICAgICAgPC9saT5cblxuICAgICAgICAgIDxsaSBjbGFzcz1cIm14LTJcIj5cbiAgICAgICAgICAgIDxhIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2NhdGVnb3J5JnF1b3Q7OiZxdW90O0Zvb3RlciZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Z28gdG8gcHJpdmFjeSZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0ZXh0OnByaXZhY3kmcXVvdDt9XCIgaHJlZj1cImh0dHBzOi8vZG9jcy5naXRodWIuY29tL3NpdGUtcG9saWN5L3ByaXZhY3ktcG9saWNpZXMvZ2l0aHViLXByaXZhY3ktc3RhdGVtZW50XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxpbmstLXNlY29uZGFyeSBMaW5rXCI+UHJpdmFjeTwvYT5cbiAgICAgICAgICA8L2xpPlxuXG4gICAgICAgICAgPGxpIGNsYXNzPVwibXgtMlwiPlxuICAgICAgICAgICAgPGEgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7Rm9vdGVyJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtnbyB0byBzZWN1cml0eSZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDt0ZXh0OnNlY3VyaXR5JnF1b3Q7fVwiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vc2VjdXJpdHlcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiTGluay0tc2Vjb25kYXJ5IExpbmtcIj5TZWN1cml0eTwvYT5cbiAgICAgICAgICA8L2xpPlxuXG4gICAgICAgICAgPGxpIGNsYXNzPVwibXgtMlwiPlxuICAgICAgICAgICAgPGEgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7Y2F0ZWdvcnkmcXVvdDs6JnF1b3Q7Rm9vdGVyJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtnbyB0byBzdGF0dXMmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGV4dDpzdGF0dXMmcXVvdDt9XCIgaHJlZj1cImh0dHBzOi8vd3d3LmdpdGh1YnN0YXR1cy5jb20vXCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIkxpbmstLXNlY29uZGFyeSBMaW5rXCI+U3RhdHVzPC9hPlxuICAgICAgICAgIDwvbGk+XG5cbiAgICAgICAgICA8bGkgY2xhc3M9XCJteC0yXCI+XG4gICAgICAgICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtGb290ZXImcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2dvIHRvIGRvY3MmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGV4dDpkb2NzJnF1b3Q7fVwiIGhyZWY9XCJodHRwczovL2RvY3MuZ2l0aHViLmNvbS9cIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiTGluay0tc2Vjb25kYXJ5IExpbmtcIj5Eb2NzPC9hPlxuICAgICAgICAgIDwvbGk+XG5cbiAgICAgICAgICA8bGkgY2xhc3M9XCJteC0yXCI+XG4gICAgICAgICAgICA8YSBkYXRhLWFuYWx5dGljcy1ldmVudD1cInsmcXVvdDtjYXRlZ29yeSZxdW90OzomcXVvdDtGb290ZXImcXVvdDssJnF1b3Q7YWN0aW9uJnF1b3Q7OiZxdW90O2dvIHRvIGNvbnRhY3QmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7dGV4dDpjb250YWN0JnF1b3Q7fVwiIGhyZWY9XCJodHRwczovL3N1cHBvcnQuZ2l0aHViLmNvbT90YWdzPWRvdGNvbS1mb290ZXJcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwiTGluay0tc2Vjb25kYXJ5IExpbmtcIj5Db250YWN0PC9hPlxuICAgICAgICAgIDwvbGk+XG5cbiAgICAgICAgICA8bGkgY2xhc3M9XCJtci0zXCI+XG4gIDxjb29raWUtY29uc2VudC1saW5rIGRhdGEtY2F0YWx5c3Q9XCJcIj5cbiAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cIkxpbmstLXNlY29uZGFyeSB1bmRlcmxpbmUtb24taG92ZXIgYm9yZGVyLTAgcC0wIGNvbG9yLWJnLXRyYW5zcGFyZW50XCIgZGF0YS1hY3Rpb249XCJjbGljazpjb29raWUtY29uc2VudC1saW5rI3Nob3dDb25zZW50TWFuYWdlbWVudFwiIGRhdGEtYW5hbHl0aWNzLWV2ZW50PVwieyZxdW90O2xvY2F0aW9uJnF1b3Q7OiZxdW90O2Zvb3RlciZxdW90OywmcXVvdDthY3Rpb24mcXVvdDs6JnF1b3Q7Y29va2llcyZxdW90OywmcXVvdDtjb250ZXh0JnF1b3Q7OiZxdW90O3N1YmZvb3RlciZxdW90OywmcXVvdDt0YWcmcXVvdDs6JnF1b3Q7bGluayZxdW90OywmcXVvdDtsYWJlbCZxdW90OzomcXVvdDtjb29raWVzX2xpbmtfc3ViZm9vdGVyX2Zvb3RlciZxdW90O31cIj5cbiAgICAgIE1hbmFnZSBjb29raWVzXG4gICAgPC9idXR0b24+XG4gIDwvY29va2llLWNvbnNlbnQtbGluaz5cbjwvbGk+XG5cbjxsaSBjbGFzcz1cIm1yLTNcIj5cbiAgPGNvb2tpZS1jb25zZW50LWxpbmsgZGF0YS1jYXRhbHlzdD1cIlwiPlxuICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiTGluay0tc2Vjb25kYXJ5IHVuZGVybGluZS1vbi1ob3ZlciBib3JkZXItMCBwLTAgY29sb3ItYmctdHJhbnNwYXJlbnRcIiBkYXRhLWFjdGlvbj1cImNsaWNrOmNvb2tpZS1jb25zZW50LWxpbmsjc2hvd0NvbnNlbnRNYW5hZ2VtZW50XCIgZGF0YS1hbmFseXRpY3MtZXZlbnQ9XCJ7JnF1b3Q7bG9jYXRpb24mcXVvdDs6JnF1b3Q7Zm9vdGVyJnF1b3Q7LCZxdW90O2FjdGlvbiZxdW90OzomcXVvdDtkb250X3NoYXJlX2luZm8mcXVvdDssJnF1b3Q7Y29udGV4dCZxdW90OzomcXVvdDtzdWJmb290ZXImcXVvdDssJnF1b3Q7dGFnJnF1b3Q7OiZxdW90O2xpbmsmcXVvdDssJnF1b3Q7bGFiZWwmcXVvdDs6JnF1b3Q7ZG9udF9zaGFyZV9pbmZvX2xpbmtfc3ViZm9vdGVyX2Zvb3RlciZxdW90O31cIj5cbiAgICAgIERvIG5vdCBzaGFyZSBteSBwZXJzb25hbCBpbmZvcm1hdGlvblxuICAgIDwvYnV0dG9uPlxuICA8L2Nvb2tpZS1jb25zZW50LWxpbms+XG48L2xpPlxuXG4gICAgICA8L3VsPlxuICAgIDwvbmF2PlxuICA8L2Rpdj5cbjwvZm9vdGVyPlxuXG5cblxuXG4gICAgPGdoY2MtY29uc2VudCBpZD1cImdoY2NcIiBjbGFzcz1cInBvc2l0aW9uLWZpeGVkIGJvdHRvbS0wIGxlZnQtMFwiIHN0eWxlPVwiei1pbmRleDogOTk5OTk5XCIgZGF0YS1pbml0aWFsLWNvb2tpZS1jb25zZW50LWFsbG93ZWQ9XCJcIiBkYXRhLWNvb2tpZS1jb25zZW50LXJlcXVpcmVkPVwidHJ1ZVwiIGRhdGEtY2F0YWx5c3Q9XCJcIj48L2doY2MtY29uc2VudD5cblxuXG4gIDxkaXYgaWQ9XCJhamF4LWVycm9yLW1lc3NhZ2VcIiBjbGFzcz1cImFqYXgtZXJyb3ItbWVzc2FnZSBmbGFzaCBmbGFzaC1lcnJvclwiIGhpZGRlbj1cIlwiPlxuICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWFsZXJ0XCI+XG4gICAgPHBhdGggZD1cIk02LjQ1NyAxLjA0N2MuNjU5LTEuMjM0IDIuNDI3LTEuMjM0IDMuMDg2IDBsNi4wODIgMTEuMzc4QTEuNzUgMS43NSAwIDAgMSAxNC4wODIgMTVIMS45MThhMS43NSAxLjc1IDAgMCAxLTEuNTQzLTIuNTc1Wm0xLjc2My43MDdhLjI1LjI1IDAgMCAwLS40NCAwTDEuNjk4IDEzLjEzMmEuMjUuMjUgMCAwIDAgLjIyLjM2OGgxMi4xNjRhLjI1LjI1IDAgMCAwIC4yMi0uMzY4Wm0uNTMgMy45OTZ2Mi41YS43NS43NSAwIDAgMS0xLjUgMHYtMi41YS43NS43NSAwIDAgMSAxLjUgMFpNOSAxMWExIDEgMCAxIDEtMiAwIDEgMSAwIDAgMSAyIDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJmbGFzaC1jbG9zZSBqcy1hamF4LWVycm9yLWRpc21pc3NcIiBhcmlhLWxhYmVsPVwiRGlzbWlzcyBlcnJvclwiPlxuICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24teFwiPlxuICAgIDxwYXRoIGQ9XCJNMy43MiAzLjcyYS43NS43NSAwIDAgMSAxLjA2IDBMOCA2Ljk0bDMuMjItMy4yMmEuNzQ5Ljc0OSAwIDAgMSAxLjI3NS4zMjYuNzQ5Ljc0OSAwIDAgMS0uMjE1LjczNEw5LjA2IDhsMy4yMiAzLjIyYS43NDkuNzQ5IDAgMCAxLS4zMjYgMS4yNzUuNzQ5Ljc0OSAwIDAgMS0uNzM0LS4yMTVMOCA5LjA2bC0zLjIyIDMuMjJhLjc1MS43NTEgMCAwIDEtMS4wNDItLjAxOC43NTEuNzUxIDAgMCAxLS4wMTgtMS4wNDJMNi45NCA4IDMuNzIgNC43OGEuNzUuNzUgMCAwIDEgMC0xLjA2WlwiPjwvcGF0aD5cbjwvc3ZnPlxuICAgIDwvYnV0dG9uPlxuICAgIFlvdSBjYW7igJl0IHBlcmZvcm0gdGhhdCBhY3Rpb24gYXQgdGhpcyB0aW1lLlxuICA8L2Rpdj5cblxuICAgIDx0ZW1wbGF0ZSBpZD1cInNpdGUtZGV0YWlscy1kaWFsb2dcIj5cbiAgPGRldGFpbHMgY2xhc3M9XCJkZXRhaWxzLXJlc2V0IGRldGFpbHMtb3ZlcmxheSBkZXRhaWxzLW92ZXJsYXktZGFyayBsaC1kZWZhdWx0IGNvbG9yLWZnLWRlZmF1bHQgaHhfcnNtXCIgb3Blbj1cIlwiPlxuICAgIDxzdW1tYXJ5IHJvbGU9XCJidXR0b25cIiBhcmlhLWxhYmVsPVwiQ2xvc2UgZGlhbG9nXCI+PC9zdW1tYXJ5PlxuICAgIDxkZXRhaWxzLWRpYWxvZyBjbGFzcz1cIkJveCBCb3gtLW92ZXJsYXkgZC1mbGV4IGZsZXgtY29sdW1uIGFuaW0tZmFkZS1pbiBmYXN0IGh4X3JzbS1kaWFsb2cgaHhfcnNtLW1vZGFsXCI+XG4gICAgICA8YnV0dG9uIGNsYXNzPVwiQm94LWJ0bi1vY3RpY29uIG0tMCBidG4tb2N0aWNvbiBwb3NpdGlvbi1hYnNvbHV0ZSByaWdodC0wIHRvcC0wXCIgdHlwZT1cImJ1dHRvblwiIGFyaWEtbGFiZWw9XCJDbG9zZSBkaWFsb2dcIiBkYXRhLWNsb3NlLWRpYWxvZz1cIlwiPlxuICAgICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi14XCI+XG4gICAgPHBhdGggZD1cIk0zLjcyIDMuNzJhLjc1Ljc1IDAgMCAxIDEuMDYgMEw4IDYuOTRsMy4yMi0zLjIyYS43NDkuNzQ5IDAgMCAxIDEuMjc1LjMyNi43NDkuNzQ5IDAgMCAxLS4yMTUuNzM0TDkuMDYgOGwzLjIyIDMuMjJhLjc0OS43NDkgMCAwIDEtLjMyNiAxLjI3NS43NDkuNzQ5IDAgMCAxLS43MzQtLjIxNUw4IDkuMDZsLTMuMjIgMy4yMmEuNzUxLjc1MSAwIDAgMS0xLjA0Mi0uMDE4Ljc1MS43NTEgMCAwIDEtLjAxOC0xLjA0Mkw2Ljk0IDggMy43MiA0Ljc4YS43NS43NSAwIDAgMSAwLTEuMDZaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICA8L2J1dHRvbj5cbiAgICAgIDxkaXYgY2xhc3M9XCJvY3RvY2F0LXNwaW5uZXIgbXktNiBqcy1kZXRhaWxzLWRpYWxvZy1zcGlubmVyXCI+PC9kaXY+XG4gICAgPC9kZXRhaWxzLWRpYWxvZz5cbiAgPC9kZXRhaWxzPlxuPC90ZW1wbGF0ZT5cblxuICAgIDxkaXYgY2xhc3M9XCJQb3BvdmVyIGpzLWhvdmVyY2FyZC1jb250ZW50IHBvc2l0aW9uLWFic29sdXRlXCIgc3R5bGU9XCJkaXNwbGF5OiBub25lOyBvdXRsaW5lOiBub25lO1wiIHRhYmluZGV4PVwiMFwiPlxuICA8ZGl2IGNsYXNzPVwiUG9wb3Zlci1tZXNzYWdlIFBvcG92ZXItbWVzc2FnZS0tYm90dG9tLWxlZnQgUG9wb3Zlci1tZXNzYWdlLS1sYXJnZSBCb3ggY29sb3Itc2hhZG93LWxhcmdlXCIgc3R5bGU9XCJ3aWR0aDozNjBweDtcIj48L2Rpdj5cbjwvZGl2PlxuXG4gICAgPHRlbXBsYXRlIGlkPVwic25pcHBldC1jbGlwYm9hcmQtY29weS1idXR0b25cIj5cbiAgPGRpdiBjbGFzcz1cInplcm9jbGlwYm9hcmQtY29udGFpbmVyIHBvc2l0aW9uLWFic29sdXRlIHJpZ2h0LTAgdG9wLTBcIj5cbiAgICA8Y2xpcGJvYXJkLWNvcHkgYXJpYS1sYWJlbD1cIkNvcHlcIiBjbGFzcz1cIkNsaXBib2FyZEJ1dHRvbiBidG4ganMtY2xpcGJvYXJkLWNvcHkgbS0yIHAtMFwiIGRhdGEtY29weS1mZWVkYmFjaz1cIkNvcGllZCFcIiBkYXRhLXRvb2x0aXAtZGlyZWN0aW9uPVwid1wiPlxuICAgICAgPHN2ZyBhcmlhLWhpZGRlbj1cInRydWVcIiBoZWlnaHQ9XCIxNlwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB2ZXJzaW9uPVwiMS4xXCIgd2lkdGg9XCIxNlwiIGRhdGEtdmlldy1jb21wb25lbnQ9XCJ0cnVlXCIgY2xhc3M9XCJvY3RpY29uIG9jdGljb24tY29weSBqcy1jbGlwYm9hcmQtY29weS1pY29uIG0tMlwiPlxuICAgIDxwYXRoIGQ9XCJNMCA2Ljc1QzAgNS43ODQuNzg0IDUgMS43NSA1aDEuNWEuNzUuNzUgMCAwIDEgMCAxLjVoLTEuNWEuMjUuMjUgMCAwIDAtLjI1LjI1djcuNWMwIC4xMzguMTEyLjI1LjI1LjI1aDcuNWEuMjUuMjUgMCAwIDAgLjI1LS4yNXYtMS41YS43NS43NSAwIDAgMSAxLjUgMHYxLjVBMS43NSAxLjc1IDAgMCAxIDkuMjUgMTZoLTcuNUExLjc1IDEuNzUgMCAwIDEgMCAxNC4yNVpcIj48L3BhdGg+PHBhdGggZD1cIk01IDEuNzVDNSAuNzg0IDUuNzg0IDAgNi43NSAwaDcuNUMxNS4yMTYgMCAxNiAuNzg0IDE2IDEuNzV2Ny41QTEuNzUgMS43NSAwIDAgMSAxNC4yNSAxMWgtNy41QTEuNzUgMS43NSAwIDAgMSA1IDkuMjVabTEuNzUtLjI1YS4yNS4yNSAwIDAgMC0uMjUuMjV2Ny41YzAgLjEzOC4xMTIuMjUuMjUuMjVoNy41YS4yNS4yNSAwIDAgMCAuMjUtLjI1di03LjVhLjI1LjI1IDAgMCAwLS4yNS0uMjVaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1jaGVjayBqcy1jbGlwYm9hcmQtY2hlY2staWNvbiBjb2xvci1mZy1zdWNjZXNzIGQtbm9uZSBtLTJcIj5cbiAgICA8cGF0aCBkPVwiTTEzLjc4IDQuMjJhLjc1Ljc1IDAgMCAxIDAgMS4wNmwtNy4yNSA3LjI1YS43NS43NSAwIDAgMS0xLjA2IDBMMi4yMiA5LjI4YS43NTEuNzUxIDAgMCAxIC4wMTgtMS4wNDIuNzUxLjc1MSAwIDAgMSAxLjA0Mi0uMDE4TDYgMTAuOTRsNi43Mi02LjcyYS43NS43NSAwIDAgMSAxLjA2IDBaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgPC9jbGlwYm9hcmQtY29weT5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuPHRlbXBsYXRlIGlkPVwic25pcHBldC1jbGlwYm9hcmQtY29weS1idXR0b24tdW5wb3NpdGlvbmVkXCI+XG4gIDxkaXYgY2xhc3M9XCJ6ZXJvY2xpcGJvYXJkLWNvbnRhaW5lclwiPlxuICAgIDxjbGlwYm9hcmQtY29weSBhcmlhLWxhYmVsPVwiQ29weVwiIGNsYXNzPVwiQ2xpcGJvYXJkQnV0dG9uIGJ0biBidG4taW52aXNpYmxlIGpzLWNsaXBib2FyZC1jb3B5IG0tMiBwLTAgZC1mbGV4IGZsZXgtanVzdGlmeS1jZW50ZXIgZmxleC1pdGVtcy1jZW50ZXJcIiBkYXRhLWNvcHktZmVlZGJhY2s9XCJDb3BpZWQhXCIgZGF0YS10b29sdGlwLWRpcmVjdGlvbj1cIndcIj5cbiAgICAgIDxzdmcgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaGVpZ2h0PVwiMTZcIiB2aWV3Qm94PVwiMCAwIDE2IDE2XCIgdmVyc2lvbj1cIjEuMVwiIHdpZHRoPVwiMTZcIiBkYXRhLXZpZXctY29tcG9uZW50PVwidHJ1ZVwiIGNsYXNzPVwib2N0aWNvbiBvY3RpY29uLWNvcHkganMtY2xpcGJvYXJkLWNvcHktaWNvblwiPlxuICAgIDxwYXRoIGQ9XCJNMCA2Ljc1QzAgNS43ODQuNzg0IDUgMS43NSA1aDEuNWEuNzUuNzUgMCAwIDEgMCAxLjVoLTEuNWEuMjUuMjUgMCAwIDAtLjI1LjI1djcuNWMwIC4xMzguMTEyLjI1LjI1LjI1aDcuNWEuMjUuMjUgMCAwIDAgLjI1LS4yNXYtMS41YS43NS43NSAwIDAgMSAxLjUgMHYxLjVBMS43NSAxLjc1IDAgMCAxIDkuMjUgMTZoLTcuNUExLjc1IDEuNzUgMCAwIDEgMCAxNC4yNVpcIj48L3BhdGg+PHBhdGggZD1cIk01IDEuNzVDNSAuNzg0IDUuNzg0IDAgNi43NSAwaDcuNUMxNS4yMTYgMCAxNiAuNzg0IDE2IDEuNzV2Ny41QTEuNzUgMS43NSAwIDAgMSAxNC4yNSAxMWgtNy41QTEuNzUgMS43NSAwIDAgMSA1IDkuMjVabTEuNzUtLjI1YS4yNS4yNSAwIDAgMC0uMjUuMjV2Ny41YzAgLjEzOC4xMTIuMjUuMjUuMjVoNy41YS4yNS4yNSAwIDAgMCAuMjUtLjI1di03LjVhLjI1LjI1IDAgMCAwLS4yNS0uMjVaXCI+PC9wYXRoPlxuPC9zdmc+XG4gICAgICA8c3ZnIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIHZlcnNpb249XCIxLjFcIiB3aWR0aD1cIjE2XCIgZGF0YS12aWV3LWNvbXBvbmVudD1cInRydWVcIiBjbGFzcz1cIm9jdGljb24gb2N0aWNvbi1jaGVjayBqcy1jbGlwYm9hcmQtY2hlY2staWNvbiBjb2xvci1mZy1zdWNjZXNzIGQtbm9uZVwiPlxuICAgIDxwYXRoIGQ9XCJNMTMuNzggNC4yMmEuNzUuNzUgMCAwIDEgMCAxLjA2bC03LjI1IDcuMjVhLjc1Ljc1IDAgMCAxLTEuMDYgMEwyLjIyIDkuMjhhLjc1MS43NTEgMCAwIDEgLjAxOC0xLjA0Mi43NTEuNzUxIDAgMCAxIDEuMDQyLS4wMThMNiAxMC45NGw2LjcyLTYuNzJhLjc1Ljc1IDAgMCAxIDEuMDYgMFpcIj48L3BhdGg+XG48L3N2Zz5cbiAgICA8L2NsaXBib2FyZC1jb3B5PlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cblxuXG5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgaWQ9XCJqcy1nbG9iYWwtc2NyZWVuLXJlYWRlci1ub3RpY2VcIiBjbGFzcz1cInNyLW9ubHkgbXQtbjFcIiBhcmlhLWxpdmU9XCJwb2xpdGVcIiBhcmlhLWF0b21pYz1cInRydWVcIj48L2Rpdj5cbiAgICA8ZGl2IGlkPVwianMtZ2xvYmFsLXNjcmVlbi1yZWFkZXItbm90aWNlLWFzc2VydGl2ZVwiIGNsYXNzPVwic3Itb25seSBtdC1uMVwiIGFyaWEtbGl2ZT1cImFzc2VydGl2ZVwiIGFyaWEtYXRvbWljPVwidHJ1ZVwiPjwvZGl2PlxuICBcblxuPGRpdiBjbGFzcz1cInN2Zy10aXAgc3ZnLXRpcC1vbmUtbGluZVwiIHN0eWxlPVwicG9pbnRlci1ldmVudHM6IG5vbmU7XCIgaGlkZGVuPVwiXCI+PC9kaXY+PC9ib2R5PjwvaHRtbD4ifQ==
  recorded_at: Fri, 26 Jul 2024 16:29:00 GMT
- request:
    method: get
    uri: https://api.github.com/orgs/rails
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/vnd.github.v3+json
      User-Agent:
      - Octokit Ruby Gem 9.1.0
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 26 Jul 2024 16:29:00 GMT
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - public, max-age=60, s-maxage=60
      Vary:
      - Accept,Accept-Encoding, Accept, X-Requested-With
      Etag:
      - W/"2fe3c4bb247debf8ac7bbeaee6dc0660bc230106a4a681ca3ecbefca832a592a"
      Last-Modified:
      - Mon, 13 Sep 2021 14:26:11 GMT
      X-Github-Media-Type:
      - github.v3; format=json
      X-Github-Api-Version-Selected:
      - '2022-11-28'
      Access-Control-Expose-Headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      Access-Control-Allow-Origin:
      - "*"
      Strict-Transport-Security:
      - max-age=31536000; includeSubdomains; preload
      X-Frame-Options:
      - deny
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - '0'
      Referrer-Policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      Content-Security-Policy:
      - default-src 'none'
      Server:
      - github.com
      X-Ratelimit-Limit:
      - '60'
      X-Ratelimit-Remaining:
      - '47'
      X-Ratelimit-Reset:
      - '1722012606'
      X-Ratelimit-Resource:
      - core
      X-Ratelimit-Used:
      - '13'
      Accept-Ranges:
      - bytes
      Content-Length:
      - '987'
      X-Github-Request-Id:
      - FB2C:F1FAD:2ADEB48:2BD9F4A:66A3CECC
    body:
      encoding: ASCII-8BIT
      string: '{"login":"rails","id":4223,"node_id":"MDEyOk9yZ2FuaXphdGlvbjQyMjM=","url":"https://api.github.com/orgs/rails","repos_url":"https://api.github.com/orgs/rails/repos","events_url":"https://api.github.com/orgs/rails/events","hooks_url":"https://api.github.com/orgs/rails/hooks","issues_url":"https://api.github.com/orgs/rails/issues","members_url":"https://api.github.com/orgs/rails/members{/member}","public_members_url":"https://api.github.com/orgs/rails/public_members{/member}","avatar_url":"https://avatars.githubusercontent.com/u/4223?v=4","description":"","name":"Ruby
        on Rails","company":null,"blog":"https://rubyonrails.org/","location":null,"email":null,"twitter_username":null,"is_verified":false,"has_organization_projects":false,"has_repository_projects":true,"public_repos":124,"public_gists":3,"followers":1846,"following":0,"html_url":"https://github.com/rails","created_at":"2008-04-02T01:59:25Z","updated_at":"2021-09-13T14:26:11Z","archived_at":null,"type":"Organization"}'
  recorded_at: Fri, 26 Jul 2024 16:29:00 GMT
- request:
    method: get
    uri: https://api.github.com/orgs/rails/members
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/vnd.github.v3+json
      User-Agent:
      - Octokit Ruby Gem 9.1.0
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 26 Jul 2024 16:29:00 GMT
      Content-Type:
      - application/json; charset=utf-8
      Cache-Control:
      - public, max-age=60, s-maxage=60
      Vary:
      - Accept,Accept-Encoding, Accept, X-Requested-With
      Etag:
      - W/"c9f1841d8cc1ca06bdc50f21be83bb734bfc4d379c0ba99f6ec69a23687de805"
      X-Github-Media-Type:
      - github.v3; format=json
      Link:
      - <https://api.github.com/organizations/4223/members?page=2>; rel="next", <https://api.github.com/organizations/4223/members?page=3>;
        rel="last"
      X-Github-Api-Version-Selected:
      - '2022-11-28'
      Access-Control-Expose-Headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      Access-Control-Allow-Origin:
      - "*"
      Strict-Transport-Security:
      - max-age=31536000; includeSubdomains; preload
      X-Frame-Options:
      - deny
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - '0'
      Referrer-Policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      Content-Security-Policy:
      - default-src 'none'
      Server:
      - github.com
      X-Ratelimit-Limit:
      - '60'
      X-Ratelimit-Remaining:
      - '46'
      X-Ratelimit-Reset:
      - '1722012606'
      X-Ratelimit-Resource:
      - core
      X-Ratelimit-Used:
      - '14'
      Accept-Ranges:
      - bytes
      Content-Length:
      - '27791'
      X-Github-Request-Id:
      - FB31:EFF6C:2AACA9A:2BA7CF4:66A3CECC
    body:
      encoding: ASCII-8BIT
      string: '[{"login":"akhilgkrishnan","id":22231095,"node_id":"MDQ6VXNlcjIyMjMxMDk1","avatar_url":"https://avatars.githubusercontent.com/u/22231095?v=4","gravatar_id":"","url":"https://api.github.com/users/akhilgkrishnan","html_url":"https://github.com/akhilgkrishnan","followers_url":"https://api.github.com/users/akhilgkrishnan/followers","following_url":"https://api.github.com/users/akhilgkrishnan/following{/other_user}","gists_url":"https://api.github.com/users/akhilgkrishnan/gists{/gist_id}","starred_url":"https://api.github.com/users/akhilgkrishnan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akhilgkrishnan/subscriptions","organizations_url":"https://api.github.com/users/akhilgkrishnan/orgs","repos_url":"https://api.github.com/users/akhilgkrishnan/repos","events_url":"https://api.github.com/users/akhilgkrishnan/events{/privacy}","received_events_url":"https://api.github.com/users/akhilgkrishnan/received_events","type":"User","site_admin":false},{"login":"alexcameron89","id":5634381,"node_id":"MDQ6VXNlcjU2MzQzODE=","avatar_url":"https://avatars.githubusercontent.com/u/5634381?v=4","gravatar_id":"","url":"https://api.github.com/users/alexcameron89","html_url":"https://github.com/alexcameron89","followers_url":"https://api.github.com/users/alexcameron89/followers","following_url":"https://api.github.com/users/alexcameron89/following{/other_user}","gists_url":"https://api.github.com/users/alexcameron89/gists{/gist_id}","starred_url":"https://api.github.com/users/alexcameron89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexcameron89/subscriptions","organizations_url":"https://api.github.com/users/alexcameron89/orgs","repos_url":"https://api.github.com/users/alexcameron89/repos","events_url":"https://api.github.com/users/alexcameron89/events{/privacy}","received_events_url":"https://api.github.com/users/alexcameron89/received_events","type":"User","site_admin":false},{"login":"amatsuda","id":11493,"node_id":"MDQ6VXNlcjExNDkz","avatar_url":"https://avatars.githubusercontent.com/u/11493?v=4","gravatar_id":"","url":"https://api.github.com/users/amatsuda","html_url":"https://github.com/amatsuda","followers_url":"https://api.github.com/users/amatsuda/followers","following_url":"https://api.github.com/users/amatsuda/following{/other_user}","gists_url":"https://api.github.com/users/amatsuda/gists{/gist_id}","starred_url":"https://api.github.com/users/amatsuda/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amatsuda/subscriptions","organizations_url":"https://api.github.com/users/amatsuda/orgs","repos_url":"https://api.github.com/users/amatsuda/repos","events_url":"https://api.github.com/users/amatsuda/events{/privacy}","received_events_url":"https://api.github.com/users/amatsuda/received_events","type":"User","site_admin":false},{"login":"andyatkinson","id":2161008,"node_id":"MDQ6VXNlcjIxNjEwMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2161008?v=4","gravatar_id":"","url":"https://api.github.com/users/andyatkinson","html_url":"https://github.com/andyatkinson","followers_url":"https://api.github.com/users/andyatkinson/followers","following_url":"https://api.github.com/users/andyatkinson/following{/other_user}","gists_url":"https://api.github.com/users/andyatkinson/gists{/gist_id}","starred_url":"https://api.github.com/users/andyatkinson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andyatkinson/subscriptions","organizations_url":"https://api.github.com/users/andyatkinson/orgs","repos_url":"https://api.github.com/users/andyatkinson/repos","events_url":"https://api.github.com/users/andyatkinson/events{/privacy}","received_events_url":"https://api.github.com/users/andyatkinson/received_events","type":"User","site_admin":false},{"login":"arthurnn","id":833383,"node_id":"MDQ6VXNlcjgzMzM4Mw==","avatar_url":"https://avatars.githubusercontent.com/u/833383?v=4","gravatar_id":"","url":"https://api.github.com/users/arthurnn","html_url":"https://github.com/arthurnn","followers_url":"https://api.github.com/users/arthurnn/followers","following_url":"https://api.github.com/users/arthurnn/following{/other_user}","gists_url":"https://api.github.com/users/arthurnn/gists{/gist_id}","starred_url":"https://api.github.com/users/arthurnn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arthurnn/subscriptions","organizations_url":"https://api.github.com/users/arthurnn/orgs","repos_url":"https://api.github.com/users/arthurnn/repos","events_url":"https://api.github.com/users/arthurnn/events{/privacy}","received_events_url":"https://api.github.com/users/arthurnn/received_events","type":"User","site_admin":true},{"login":"arunagw","id":3948,"node_id":"MDQ6VXNlcjM5NDg=","avatar_url":"https://avatars.githubusercontent.com/u/3948?v=4","gravatar_id":"","url":"https://api.github.com/users/arunagw","html_url":"https://github.com/arunagw","followers_url":"https://api.github.com/users/arunagw/followers","following_url":"https://api.github.com/users/arunagw/following{/other_user}","gists_url":"https://api.github.com/users/arunagw/gists{/gist_id}","starred_url":"https://api.github.com/users/arunagw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunagw/subscriptions","organizations_url":"https://api.github.com/users/arunagw/orgs","repos_url":"https://api.github.com/users/arunagw/repos","events_url":"https://api.github.com/users/arunagw/events{/privacy}","received_events_url":"https://api.github.com/users/arunagw/received_events","type":"User","site_admin":false},{"login":"bouk","id":97820,"node_id":"MDQ6VXNlcjk3ODIw","avatar_url":"https://avatars.githubusercontent.com/u/97820?v=4","gravatar_id":"","url":"https://api.github.com/users/bouk","html_url":"https://github.com/bouk","followers_url":"https://api.github.com/users/bouk/followers","following_url":"https://api.github.com/users/bouk/following{/other_user}","gists_url":"https://api.github.com/users/bouk/gists{/gist_id}","starred_url":"https://api.github.com/users/bouk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bouk/subscriptions","organizations_url":"https://api.github.com/users/bouk/orgs","repos_url":"https://api.github.com/users/bouk/repos","events_url":"https://api.github.com/users/bouk/events{/privacy}","received_events_url":"https://api.github.com/users/bouk/received_events","type":"User","site_admin":false},{"login":"byroot","id":44640,"node_id":"MDQ6VXNlcjQ0NjQw","avatar_url":"https://avatars.githubusercontent.com/u/44640?v=4","gravatar_id":"","url":"https://api.github.com/users/byroot","html_url":"https://github.com/byroot","followers_url":"https://api.github.com/users/byroot/followers","following_url":"https://api.github.com/users/byroot/following{/other_user}","gists_url":"https://api.github.com/users/byroot/gists{/gist_id}","starred_url":"https://api.github.com/users/byroot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/byroot/subscriptions","organizations_url":"https://api.github.com/users/byroot/orgs","repos_url":"https://api.github.com/users/byroot/repos","events_url":"https://api.github.com/users/byroot/events{/privacy}","received_events_url":"https://api.github.com/users/byroot/received_events","type":"User","site_admin":false},{"login":"carlosantoniodasilva","id":26328,"node_id":"MDQ6VXNlcjI2MzI4","avatar_url":"https://avatars.githubusercontent.com/u/26328?v=4","gravatar_id":"","url":"https://api.github.com/users/carlosantoniodasilva","html_url":"https://github.com/carlosantoniodasilva","followers_url":"https://api.github.com/users/carlosantoniodasilva/followers","following_url":"https://api.github.com/users/carlosantoniodasilva/following{/other_user}","gists_url":"https://api.github.com/users/carlosantoniodasilva/gists{/gist_id}","starred_url":"https://api.github.com/users/carlosantoniodasilva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/carlosantoniodasilva/subscriptions","organizations_url":"https://api.github.com/users/carlosantoniodasilva/orgs","repos_url":"https://api.github.com/users/carlosantoniodasilva/repos","events_url":"https://api.github.com/users/carlosantoniodasilva/events{/privacy}","received_events_url":"https://api.github.com/users/carlosantoniodasilva/received_events","type":"User","site_admin":false},{"login":"chancancode","id":55829,"node_id":"MDQ6VXNlcjU1ODI5","avatar_url":"https://avatars.githubusercontent.com/u/55829?v=4","gravatar_id":"","url":"https://api.github.com/users/chancancode","html_url":"https://github.com/chancancode","followers_url":"https://api.github.com/users/chancancode/followers","following_url":"https://api.github.com/users/chancancode/following{/other_user}","gists_url":"https://api.github.com/users/chancancode/gists{/gist_id}","starred_url":"https://api.github.com/users/chancancode/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chancancode/subscriptions","organizations_url":"https://api.github.com/users/chancancode/orgs","repos_url":"https://api.github.com/users/chancancode/repos","events_url":"https://api.github.com/users/chancancode/events{/privacy}","received_events_url":"https://api.github.com/users/chancancode/received_events","type":"User","site_admin":false},{"login":"claudiob","id":10076,"node_id":"MDQ6VXNlcjEwMDc2","avatar_url":"https://avatars.githubusercontent.com/u/10076?v=4","gravatar_id":"","url":"https://api.github.com/users/claudiob","html_url":"https://github.com/claudiob","followers_url":"https://api.github.com/users/claudiob/followers","following_url":"https://api.github.com/users/claudiob/following{/other_user}","gists_url":"https://api.github.com/users/claudiob/gists{/gist_id}","starred_url":"https://api.github.com/users/claudiob/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/claudiob/subscriptions","organizations_url":"https://api.github.com/users/claudiob/orgs","repos_url":"https://api.github.com/users/claudiob/repos","events_url":"https://api.github.com/users/claudiob/events{/privacy}","received_events_url":"https://api.github.com/users/claudiob/received_events","type":"User","site_admin":false},{"login":"composerinteralia","id":13696143,"node_id":"MDQ6VXNlcjEzNjk2MTQz","avatar_url":"https://avatars.githubusercontent.com/u/13696143?v=4","gravatar_id":"","url":"https://api.github.com/users/composerinteralia","html_url":"https://github.com/composerinteralia","followers_url":"https://api.github.com/users/composerinteralia/followers","following_url":"https://api.github.com/users/composerinteralia/following{/other_user}","gists_url":"https://api.github.com/users/composerinteralia/gists{/gist_id}","starred_url":"https://api.github.com/users/composerinteralia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/composerinteralia/subscriptions","organizations_url":"https://api.github.com/users/composerinteralia/orgs","repos_url":"https://api.github.com/users/composerinteralia/repos","events_url":"https://api.github.com/users/composerinteralia/events{/privacy}","received_events_url":"https://api.github.com/users/composerinteralia/received_events","type":"User","site_admin":true},{"login":"cristianbica","id":150381,"node_id":"MDQ6VXNlcjE1MDM4MQ==","avatar_url":"https://avatars.githubusercontent.com/u/150381?v=4","gravatar_id":"","url":"https://api.github.com/users/cristianbica","html_url":"https://github.com/cristianbica","followers_url":"https://api.github.com/users/cristianbica/followers","following_url":"https://api.github.com/users/cristianbica/following{/other_user}","gists_url":"https://api.github.com/users/cristianbica/gists{/gist_id}","starred_url":"https://api.github.com/users/cristianbica/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cristianbica/subscriptions","organizations_url":"https://api.github.com/users/cristianbica/orgs","repos_url":"https://api.github.com/users/cristianbica/repos","events_url":"https://api.github.com/users/cristianbica/events{/privacy}","received_events_url":"https://api.github.com/users/cristianbica/received_events","type":"User","site_admin":false},{"login":"dhh","id":2741,"node_id":"MDQ6VXNlcjI3NDE=","avatar_url":"https://avatars.githubusercontent.com/u/2741?v=4","gravatar_id":"","url":"https://api.github.com/users/dhh","html_url":"https://github.com/dhh","followers_url":"https://api.github.com/users/dhh/followers","following_url":"https://api.github.com/users/dhh/following{/other_user}","gists_url":"https://api.github.com/users/dhh/gists{/gist_id}","starred_url":"https://api.github.com/users/dhh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dhh/subscriptions","organizations_url":"https://api.github.com/users/dhh/orgs","repos_url":"https://api.github.com/users/dhh/repos","events_url":"https://api.github.com/users/dhh/events{/privacy}","received_events_url":"https://api.github.com/users/dhh/received_events","type":"User","site_admin":false},{"login":"drogus","id":5004,"node_id":"MDQ6VXNlcjUwMDQ=","avatar_url":"https://avatars.githubusercontent.com/u/5004?v=4","gravatar_id":"","url":"https://api.github.com/users/drogus","html_url":"https://github.com/drogus","followers_url":"https://api.github.com/users/drogus/followers","following_url":"https://api.github.com/users/drogus/following{/other_user}","gists_url":"https://api.github.com/users/drogus/gists{/gist_id}","starred_url":"https://api.github.com/users/drogus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drogus/subscriptions","organizations_url":"https://api.github.com/users/drogus/orgs","repos_url":"https://api.github.com/users/drogus/repos","events_url":"https://api.github.com/users/drogus/events{/privacy}","received_events_url":"https://api.github.com/users/drogus/received_events","type":"User","site_admin":false},{"login":"Edouard-chin","id":8122246,"node_id":"MDQ6VXNlcjgxMjIyNDY=","avatar_url":"https://avatars.githubusercontent.com/u/8122246?v=4","gravatar_id":"","url":"https://api.github.com/users/Edouard-chin","html_url":"https://github.com/Edouard-chin","followers_url":"https://api.github.com/users/Edouard-chin/followers","following_url":"https://api.github.com/users/Edouard-chin/following{/other_user}","gists_url":"https://api.github.com/users/Edouard-chin/gists{/gist_id}","starred_url":"https://api.github.com/users/Edouard-chin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Edouard-chin/subscriptions","organizations_url":"https://api.github.com/users/Edouard-chin/orgs","repos_url":"https://api.github.com/users/Edouard-chin/repos","events_url":"https://api.github.com/users/Edouard-chin/events{/privacy}","received_events_url":"https://api.github.com/users/Edouard-chin/received_events","type":"User","site_admin":false},{"login":"eileencodes","id":1080678,"node_id":"MDQ6VXNlcjEwODA2Nzg=","avatar_url":"https://avatars.githubusercontent.com/u/1080678?v=4","gravatar_id":"","url":"https://api.github.com/users/eileencodes","html_url":"https://github.com/eileencodes","followers_url":"https://api.github.com/users/eileencodes/followers","following_url":"https://api.github.com/users/eileencodes/following{/other_user}","gists_url":"https://api.github.com/users/eileencodes/gists{/gist_id}","starred_url":"https://api.github.com/users/eileencodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eileencodes/subscriptions","organizations_url":"https://api.github.com/users/eileencodes/orgs","repos_url":"https://api.github.com/users/eileencodes/repos","events_url":"https://api.github.com/users/eileencodes/events{/privacy}","received_events_url":"https://api.github.com/users/eileencodes/received_events","type":"User","site_admin":false},{"login":"eugeneius","id":432189,"node_id":"MDQ6VXNlcjQzMjE4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/432189?v=4","gravatar_id":"","url":"https://api.github.com/users/eugeneius","html_url":"https://github.com/eugeneius","followers_url":"https://api.github.com/users/eugeneius/followers","following_url":"https://api.github.com/users/eugeneius/following{/other_user}","gists_url":"https://api.github.com/users/eugeneius/gists{/gist_id}","starred_url":"https://api.github.com/users/eugeneius/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eugeneius/subscriptions","organizations_url":"https://api.github.com/users/eugeneius/orgs","repos_url":"https://api.github.com/users/eugeneius/repos","events_url":"https://api.github.com/users/eugeneius/events{/privacy}","received_events_url":"https://api.github.com/users/eugeneius/received_events","type":"User","site_admin":false},{"login":"fatkodima","id":5657035,"node_id":"MDQ6VXNlcjU2NTcwMzU=","avatar_url":"https://avatars.githubusercontent.com/u/5657035?v=4","gravatar_id":"","url":"https://api.github.com/users/fatkodima","html_url":"https://github.com/fatkodima","followers_url":"https://api.github.com/users/fatkodima/followers","following_url":"https://api.github.com/users/fatkodima/following{/other_user}","gists_url":"https://api.github.com/users/fatkodima/gists{/gist_id}","starred_url":"https://api.github.com/users/fatkodima/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fatkodima/subscriptions","organizations_url":"https://api.github.com/users/fatkodima/orgs","repos_url":"https://api.github.com/users/fatkodima/repos","events_url":"https://api.github.com/users/fatkodima/events{/privacy}","received_events_url":"https://api.github.com/users/fatkodima/received_events","type":"User","site_admin":false},{"login":"flavorjones","id":8207,"node_id":"MDQ6VXNlcjgyMDc=","avatar_url":"https://avatars.githubusercontent.com/u/8207?v=4","gravatar_id":"","url":"https://api.github.com/users/flavorjones","html_url":"https://github.com/flavorjones","followers_url":"https://api.github.com/users/flavorjones/followers","following_url":"https://api.github.com/users/flavorjones/following{/other_user}","gists_url":"https://api.github.com/users/flavorjones/gists{/gist_id}","starred_url":"https://api.github.com/users/flavorjones/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/flavorjones/subscriptions","organizations_url":"https://api.github.com/users/flavorjones/orgs","repos_url":"https://api.github.com/users/flavorjones/repos","events_url":"https://api.github.com/users/flavorjones/events{/privacy}","received_events_url":"https://api.github.com/users/flavorjones/received_events","type":"User","site_admin":false},{"login":"fxn","id":3387,"node_id":"MDQ6VXNlcjMzODc=","avatar_url":"https://avatars.githubusercontent.com/u/3387?v=4","gravatar_id":"","url":"https://api.github.com/users/fxn","html_url":"https://github.com/fxn","followers_url":"https://api.github.com/users/fxn/followers","following_url":"https://api.github.com/users/fxn/following{/other_user}","gists_url":"https://api.github.com/users/fxn/gists{/gist_id}","starred_url":"https://api.github.com/users/fxn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fxn/subscriptions","organizations_url":"https://api.github.com/users/fxn/orgs","repos_url":"https://api.github.com/users/fxn/repos","events_url":"https://api.github.com/users/fxn/events{/privacy}","received_events_url":"https://api.github.com/users/fxn/received_events","type":"User","site_admin":false},{"login":"gauravtiwari","id":771039,"node_id":"MDQ6VXNlcjc3MTAzOQ==","avatar_url":"https://avatars.githubusercontent.com/u/771039?v=4","gravatar_id":"","url":"https://api.github.com/users/gauravtiwari","html_url":"https://github.com/gauravtiwari","followers_url":"https://api.github.com/users/gauravtiwari/followers","following_url":"https://api.github.com/users/gauravtiwari/following{/other_user}","gists_url":"https://api.github.com/users/gauravtiwari/gists{/gist_id}","starred_url":"https://api.github.com/users/gauravtiwari/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gauravtiwari/subscriptions","organizations_url":"https://api.github.com/users/gauravtiwari/orgs","repos_url":"https://api.github.com/users/gauravtiwari/repos","events_url":"https://api.github.com/users/gauravtiwari/events{/privacy}","received_events_url":"https://api.github.com/users/gauravtiwari/received_events","type":"User","site_admin":false},{"login":"ghiculescu","id":509837,"node_id":"MDQ6VXNlcjUwOTgzNw==","avatar_url":"https://avatars.githubusercontent.com/u/509837?v=4","gravatar_id":"","url":"https://api.github.com/users/ghiculescu","html_url":"https://github.com/ghiculescu","followers_url":"https://api.github.com/users/ghiculescu/followers","following_url":"https://api.github.com/users/ghiculescu/following{/other_user}","gists_url":"https://api.github.com/users/ghiculescu/gists{/gist_id}","starred_url":"https://api.github.com/users/ghiculescu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghiculescu/subscriptions","organizations_url":"https://api.github.com/users/ghiculescu/orgs","repos_url":"https://api.github.com/users/ghiculescu/repos","events_url":"https://api.github.com/users/ghiculescu/events{/privacy}","received_events_url":"https://api.github.com/users/ghiculescu/received_events","type":"User","site_admin":false},{"login":"gmcgibbon","id":5162312,"node_id":"MDQ6VXNlcjUxNjIzMTI=","avatar_url":"https://avatars.githubusercontent.com/u/5162312?v=4","gravatar_id":"","url":"https://api.github.com/users/gmcgibbon","html_url":"https://github.com/gmcgibbon","followers_url":"https://api.github.com/users/gmcgibbon/followers","following_url":"https://api.github.com/users/gmcgibbon/following{/other_user}","gists_url":"https://api.github.com/users/gmcgibbon/gists{/gist_id}","starred_url":"https://api.github.com/users/gmcgibbon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gmcgibbon/subscriptions","organizations_url":"https://api.github.com/users/gmcgibbon/orgs","repos_url":"https://api.github.com/users/gmcgibbon/repos","events_url":"https://api.github.com/users/gmcgibbon/events{/privacy}","received_events_url":"https://api.github.com/users/gmcgibbon/received_events","type":"User","site_admin":false},{"login":"gregmolnar","id":752058,"node_id":"MDQ6VXNlcjc1MjA1OA==","avatar_url":"https://avatars.githubusercontent.com/u/752058?v=4","gravatar_id":"","url":"https://api.github.com/users/gregmolnar","html_url":"https://github.com/gregmolnar","followers_url":"https://api.github.com/users/gregmolnar/followers","following_url":"https://api.github.com/users/gregmolnar/following{/other_user}","gists_url":"https://api.github.com/users/gregmolnar/gists{/gist_id}","starred_url":"https://api.github.com/users/gregmolnar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gregmolnar/subscriptions","organizations_url":"https://api.github.com/users/gregmolnar/orgs","repos_url":"https://api.github.com/users/gregmolnar/repos","events_url":"https://api.github.com/users/gregmolnar/events{/privacy}","received_events_url":"https://api.github.com/users/gregmolnar/received_events","type":"User","site_admin":false},{"login":"guillaumebriday","id":8252238,"node_id":"MDQ6VXNlcjgyNTIyMzg=","avatar_url":"https://avatars.githubusercontent.com/u/8252238?v=4","gravatar_id":"","url":"https://api.github.com/users/guillaumebriday","html_url":"https://github.com/guillaumebriday","followers_url":"https://api.github.com/users/guillaumebriday/followers","following_url":"https://api.github.com/users/guillaumebriday/following{/other_user}","gists_url":"https://api.github.com/users/guillaumebriday/gists{/gist_id}","starred_url":"https://api.github.com/users/guillaumebriday/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guillaumebriday/subscriptions","organizations_url":"https://api.github.com/users/guillaumebriday/orgs","repos_url":"https://api.github.com/users/guillaumebriday/repos","events_url":"https://api.github.com/users/guillaumebriday/events{/privacy}","received_events_url":"https://api.github.com/users/guillaumebriday/received_events","type":"User","site_admin":false},{"login":"guilleiguaran","id":160941,"node_id":"MDQ6VXNlcjE2MDk0MQ==","avatar_url":"https://avatars.githubusercontent.com/u/160941?v=4","gravatar_id":"","url":"https://api.github.com/users/guilleiguaran","html_url":"https://github.com/guilleiguaran","followers_url":"https://api.github.com/users/guilleiguaran/followers","following_url":"https://api.github.com/users/guilleiguaran/following{/other_user}","gists_url":"https://api.github.com/users/guilleiguaran/gists{/gist_id}","starred_url":"https://api.github.com/users/guilleiguaran/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guilleiguaran/subscriptions","organizations_url":"https://api.github.com/users/guilleiguaran/orgs","repos_url":"https://api.github.com/users/guilleiguaran/repos","events_url":"https://api.github.com/users/guilleiguaran/events{/privacy}","received_events_url":"https://api.github.com/users/guilleiguaran/received_events","type":"User","site_admin":false},{"login":"indirect","id":78,"node_id":"MDQ6VXNlcjc4","avatar_url":"https://avatars.githubusercontent.com/u/78?v=4","gravatar_id":"","url":"https://api.github.com/users/indirect","html_url":"https://github.com/indirect","followers_url":"https://api.github.com/users/indirect/followers","following_url":"https://api.github.com/users/indirect/following{/other_user}","gists_url":"https://api.github.com/users/indirect/gists{/gist_id}","starred_url":"https://api.github.com/users/indirect/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/indirect/subscriptions","organizations_url":"https://api.github.com/users/indirect/orgs","repos_url":"https://api.github.com/users/indirect/repos","events_url":"https://api.github.com/users/indirect/events{/privacy}","received_events_url":"https://api.github.com/users/indirect/received_events","type":"User","site_admin":false},{"login":"jakeNiemiec","id":16782063,"node_id":"MDQ6VXNlcjE2NzgyMDYz","avatar_url":"https://avatars.githubusercontent.com/u/16782063?v=4","gravatar_id":"","url":"https://api.github.com/users/jakeNiemiec","html_url":"https://github.com/jakeNiemiec","followers_url":"https://api.github.com/users/jakeNiemiec/followers","following_url":"https://api.github.com/users/jakeNiemiec/following{/other_user}","gists_url":"https://api.github.com/users/jakeNiemiec/gists{/gist_id}","starred_url":"https://api.github.com/users/jakeNiemiec/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakeNiemiec/subscriptions","organizations_url":"https://api.github.com/users/jakeNiemiec/orgs","repos_url":"https://api.github.com/users/jakeNiemiec/repos","events_url":"https://api.github.com/users/jakeNiemiec/events{/privacy}","received_events_url":"https://api.github.com/users/jakeNiemiec/received_events","type":"User","site_admin":false},{"login":"JangoSteve","id":93607,"node_id":"MDQ6VXNlcjkzNjA3","avatar_url":"https://avatars.githubusercontent.com/u/93607?v=4","gravatar_id":"","url":"https://api.github.com/users/JangoSteve","html_url":"https://github.com/JangoSteve","followers_url":"https://api.github.com/users/JangoSteve/followers","following_url":"https://api.github.com/users/JangoSteve/following{/other_user}","gists_url":"https://api.github.com/users/JangoSteve/gists{/gist_id}","starred_url":"https://api.github.com/users/JangoSteve/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JangoSteve/subscriptions","organizations_url":"https://api.github.com/users/JangoSteve/orgs","repos_url":"https://api.github.com/users/JangoSteve/repos","events_url":"https://api.github.com/users/JangoSteve/events{/privacy}","received_events_url":"https://api.github.com/users/JangoSteve/received_events","type":"User","site_admin":false}]'
  recorded_at: Fri, 26 Jul 2024 16:29:00 GMT
recorded_with: VCR 6.2.0
